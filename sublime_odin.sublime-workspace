{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"DrawTexture",
				"DrawTexture(texture: Texture2D, posX, posY: c.int, tint: Color)"
			],
			[
				"Play",
				"PlayMusicStream(music: Music)"
			],
			[
				"main",
				"main_menu_any_button_hovered_previous"
			],
			[
				"is_hover",
				"is_any_hovered_current"
			],
			[
				"show",
				"main_menu_show_credits"
			],
			[
				"Ismouse",
				"IsMouseButtonPressed(button: MouseButton) "
			],
			[
				"credi",
				"credits_button_sprite_clip"
			],
			[
				"Credit",
				"Credits_Button_Up"
			],
			[
				"play",
				"play_button_collision_rectangle"
			],
			[
				"get",
				"get_rectangle_on_grid(rectangle: raylib.Rectangle, cell_size: f32) "
			],
			[
				"play_button",
				"play_button_sprite_clip"
			],
			[
				"draw",
				"draw_sprite_sheet_clip_on_game_texture_grid(sprite_clip: Sprite_Clip_Name, pos: [2]f32, rotation: f32 = 0.0, scale_x: f32 = 1.0, scale_y: f32 = 1.0, flip_x: bool = false, flip_y: bool = false)"
			],
			[
				"CheckRec",
				"CheckCollisionPointRec(point: Vector2, rec: Rectangle) "
			],
			[
				"bytessprite",
				"bytes_png_play_button_spritesheet"
			],
			[
				"GetMusic",
				"GetMusicTimePlayed(music: Music) "
			],
			[
				"Mu",
				"GetMusicTimeLength(music: Music) "
			],
			[
				"draw_sprite",
				"draw_sprite_sheet_clip_on_game_texture_grid(sprite_clip: Sprite_Clip_Name, pos: [2]f32, rotation: f32 = 0.0, scale_x: f32 = 1.0, scale_y: f32 = 1.0, flip_x: bool = false, flip_y: bool = false)"
			],
			[
				"is_entity",
				"is_entity_current_within_hit_window"
			],
			[
				"IsKe",
				"IsKeyPressed(key: KeyboardKey) "
			],
			[
				"IsKey",
				"IsKeyPressed(key: KeyboardKey) "
			],
			[
				"Icon",
				"SetWindowIcon(image: Image)"
			],
			[
				"bumper",
				"bumper_fade_out_timer"
			],
			[
				"game_pixe",
				"global_game_view_pixels_width"
			],
			[
				"drawTexture",
				"DrawTexture(texture: Texture2D, posX, posY: c.int, tint: Color)"
			],
			[
				"bumper_fade",
				"bumper_fade_out_timer"
			],
			[
				"Sound",
				"IsSoundPlaying(sound: Sound) "
			],
			[
				"countdow",
				"countdown_and_notify_just_finished(t: ^f32, dt: f32) "
			],
			[
				"bytes_pngbu",
				"bytes_png_bumper_circus"
			],
			[
				"next",
				"next_entity_handle"
			],
			[
				"create",
				"create_entities_with_cursor_and_set_next(cursor_start: [2]f32, vector_to_each_new_entity_pos: [2]f32, entities: ..Entity) "
			],
			[
				"paren",
				"parent_entity_handle"
			],
			[
				"biscuit",
				"biscuit_h"
			],
			[
				"GetTime",
				"GetMusicTimePlayed(music: Music) "
			],
			[
				"SetMusic",
				"SetMusicVolume(music: Music, volume: f32)"
			],
			[
				"M",
				"Music_Event"
			],
			[
				"ImageDrawLin",
				"ImageDrawLine(dst: ^Image, startPosX, startPosY, endPosX, endPosY: c.int, color: Color)"
			],
			[
				"overlay",
				"overlay_tex"
			],
			[
				"ImageDrawPixel",
				"ImageDrawPixel(dst: ^Image, posX, posY: c.int, color: Color)"
			],
			[
				"entity_get",
				"entity_get_root_pos(handle: Entity_Handle) "
			],
			[
				"Is",
				"IsKeyPressed"
			],
			[
				"draw_text",
				"draw_grid_texture_clip_on_grid(tex: raylib.Texture2D, src_rectangle: raylib.Rectangle, src_grid_cell_size: f32, dst_rectangle: raylib.Rectangle, dst_grid_cell_size, rotation: f32, flip_x: bool = false, flip_y: bool = false)"
			],
			[
				"orbiting",
				"orbiting_dir"
			],
			[
				"s",
				"swing_angle_end"
			],
			[
				"parent",
				"parent_entity_handle"
			],
			[
				"DrawLine",
				"DrawLineEx(startPos, endPos: Vector2, thick: f32, color: Color)"
			],
			[
				"get_root",
				"entity_get_root_pos(handle: Entity_Handle) "
			],
			[
				"parn",
				"parent_entity_handle"
			],
			[
				"ha_get",
				"ha_get_ptr(ha: Handle_Array($T, $HT), h: HT) "
			],
			[
				"ha_",
				"ha_add(ha: ^Handle_Array($T, $HT), v: T) "
			],
			[
				"bytes",
				"bytes_png_rope"
			],
			[
				"bytes_png",
				"bytes_png_unicycle1"
			],
			[
				"entity_get_root_",
				"entity_get_root_pos(id: Entity_Id) "
			],
			[
				"entity",
				"entity_get_root_collider(id: Entity_Id) "
			],
			[
				"entity_",
				"entity_root_pos_to_relative_pos(root_pos: [2]f32, relative_to_id: Entity_Id) "
			],
			[
				"lerp_position",
				"lerp_position_advance_and_notify_just_finished(lerp: ^Lerp_Position, dt: f32) "
			],
			[
				"wait_",
				"wait_timer_duration"
			],
			[
				"wait",
				"wait_timer_duration"
			],
			[
				"countdown",
				"countdown_and_notify_just_finished(t: ^f32, dt: f32) "
			],
			[
				"bytes_pn",
				"bytes_png_cannon"
			],
			[
				"game",
				"global_game_view_pixels_width"
			],
			[
				"entit",
				"entity_get_root_pos(id: Entity_Id) "
			],
			[
				"Root",
				"Root_Entity_Id"
			],
			[
				"draw_",
				"draw_grid_texture_clip_on_grid(tex: raylib.Texture2D, src_rectangle: raylib.Rectangle, src_grid_cell_size: f32, dst_rectangle: raylib.Rectangle, dst_grid_cell_size, rotation: f32, flip_x: bool = false, flip_y: bool = false)"
			],
			[
				"LoadImageFrom",
				"LoadImageFromMemory(fileType: cstring, fileData: rawptr, dataSize: c.int) "
			],
			[
				"texture",
				"texture_bytes_png_map_to_load"
			],
			[
				"bytes_png_",
				"bytes_png_regular_biscuit"
			],
			[
				"cell",
				"global_game_texture_grid_cell_size"
			],
			[
				"text",
				"text_pos_of_rectangle_cursor"
			],
			[
				"c",
				"ctprintf(format: string, args: ..any, newline := false) "
			],
			[
				"global_game",
				"global_game_view_pixels_width"
			],
			[
				"globalcell",
				"global_game_texture_grid_cell_size"
			],
			[
				"global",
				"global_game_texture_grid_cell_size"
			],
			[
				"draw_rec",
				"draw_rectangle_on_grid_center_justified(r: raylib.Rectangle, color: raylib.Color, cell_size: f32)"
			],
			[
				"global_",
				"global_game_view_pixels_width"
			],
			[
				"global_sprite",
				"global_sprite_sheet_cell_size"
			]
		]
	},
	"buffers":
	[
		{
			"file": "source/rlgrid/grid.odin",
			"settings":
			{
				"buffer_size": 10512,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "package"
					},
					"BwAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4AAAAAAAAATgAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " renderin"
					},
					"CQAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABeAAAAAAAAAAAAAABeAAAAAAAAAF8AAAAAAAAAAAAAAF8AAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUAAAAAAAAAZQAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " to/from"
					},
					"CAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYAAAAAAAAAZgAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4AAAAAAAAAbgAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					2,
					"left_delete",
					null,
					"AgAAAHAAAAAAAAAAcAAAAAAAAAABAAAAIG8AAAAAAAAAbwAAAAAAAAABAAAAYQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEAAAAAAAAAcQAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "grid"
					},
					"BAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8AAAAAAAAAbwAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " coordinates"
					},
					"DAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMAAAAAAAAAcwAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8AAAAAAAAAfwAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " other"
					},
					"BgAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIAAAAAAAAAggAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " grid"
					},
					"BQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " coordinte"
					},
					"CgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0AAAAAAAAAjQAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					2,
					"left_delete",
					null,
					"AgAAAJYAAAAAAAAAlgAAAAAAAAABAAAAZZUAAAAAAAAAlQAAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcAAAAAAAAAlwAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "ates"
					},
					"BAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUAAAAAAAAAlQAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n* \n* It"
					},
					"BgAAAJkAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkAAAAAAAAAmQAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMAAAAAAAAApAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					3,
					"left_delete",
					null,
					"AwAAAKMAAAAAAAAAowAAAAAAAAABAAAAIKIAAAAAAAAAogAAAAAAAAABAAAAdKEAAAAAAAAAoQAAAAAAAAABAAAASQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "I've"
					},
					"BAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUAAAAAAAAApgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUAAAAAAAAApQAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					5,
					"left_delete",
					null,
					"BQAAAKUAAAAAAAAApQAAAAAAAAABAAAAIKQAAAAAAAAApAAAAAAAAAABAAAAZaMAAAAAAAAAowAAAAAAAAABAAAAdqIAAAAAAAAAogAAAAAAAAABAAAAJ6EAAAAAAAAAoQAAAAAAAAABAAAASQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYAAAAAAAAApgAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "Can"
					},
					"AwAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " be"
					},
					"AwAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQAAAAAAAAApAAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					2,
					"left_delete",
					null,
					"AgAAAKgAAAAAAAAAqAAAAAAAAAABAAAAc6cAAAAAAAAApwAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkAAAAAAAAAqQAAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAKUAAAAAAAAApQAAAAAAAAACAAAAYmWhAAAAAAAAAKEAAAAAAAAABAAAAENhbiA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "If"
					},
					"AgAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " you"
					},
					"BAAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " working"
					},
					"CAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsAAAAAAAAAqwAAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " with"
					},
					"BQAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMAAAAAAAAAswAAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " some"
					},
					"BQAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " type"
					},
					"BQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIAAAAAAAAAwgAAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " tile"
					},
					"BQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUAAAAAAAAAxQAAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " based"
					},
					"BgAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoAAAAAAAAAygAAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " gf"
					},
					"AwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAANIAAAAAAAAA0gAAAAAAAAABAAAAZg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "ame"
					},
					"AwAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIAAAAAAAAA0gAAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUAAAAAAAAA1QAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAANUAAAAAAAAA1QAAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYAAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUAAAAAAAAA1QAAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYAAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " know"
					},
					"BQAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4AAAAAAAAA3gAAAAAAAAAAAAAAAADwvw"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " some"
					},
					"BQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " kind"
					},
					"BQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYAAAAAAAAA5gAAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsAAAAAAAAA6wAAAAAAAAAAAAAAAADwvw"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAO8AAAAAAAAA8QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8AAAAAAAAA7wAAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "unit"
					},
					"BAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAPMAAAAAAAAAAAAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUAAAAAAAAA9QAAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " which"
					},
					"BgAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " you"
					},
					"BAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4AAAAAAAAA/gAAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIBAAAAAAAAAgEAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " doing"
					},
					"BgAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYBAAAAAAAABgEAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " you"
					},
					"BAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABABAAAAAAAAEQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABABAAAAAAAAEAEAAAAAAAAAAAAAAADwvw"
				],
				[
					69,
					1,
					"left_delete",
					null,
					"AQAAABABAAAAAAAAEAEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEBAAAAAAAAEQEAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAABABAAAAAAAAEQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABABAAAAAAAAEAEAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " measurement"
					},
					"DAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEBAAAAAAAAEQEAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0BAAAAAAAAHQEAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAB4BAAAAAAAAHwEAAAAAAAAAAAAAHwEAAAAAAAAgAQAAAAAAAAAAAAAgAQAAAAAAACEBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4BAAAAAAAAHgEAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					3,
					"left_delete",
					null,
					"AwAAACABAAAAAAAAIAEAAAAAAAABAAAAdB8BAAAAAAAAHwEAAAAAAAABAAAAaR4BAAAAAAAAHgEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEBAAAAAAAAIQEAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4BAAAAAAAAHgEAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8BAAAAAAAAHwEAAAAAAAAAAAAAAADwvw"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " ca"
					},
					"AwAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIBAAAAAAAAIgEAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"left_delete",
					null,
					"AQAAACUBAAAAAAAAJQEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " be"
					},
					"AwAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAACkBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " useful"
					},
					"BwAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAALQEAAAAAAAAuAQAAAAAAAAAAAAAuAQAAAAAAAC8BAAAAAAAAAAAAAC8BAAAAAAAAMAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkBAAAAAAAAKQEAAAAAAAAAAAAAAADwvw"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADABAAAAAAAAMAEAAAAAAAAAAAAAAADwvw"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIBAAAAAAAAMgEAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"left_delete",
					null,
					"AQAAADIBAAAAAAAAMgEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMBAAAAAAAAMwEAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "op"
					},
					"AgAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIBAAAAAAAAMgEAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQBAAAAAAAANQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQBAAAAAAAANAEAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					2,
					"left_delete",
					null,
					"AgAAADQBAAAAAAAANAEAAAAAAAABAAAAIDMBAAAAAAAAMwEAAAAAAAABAAAAcA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUBAAAAAAAANQEAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " g"
					},
					"AgAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMBAAAAAAAAMwEAAAAAAAAAAAAAAADwvw"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAADQBAAAAAAAANAEAAAAAAAABAAAAZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUBAAAAAAAANQEAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAADQBAAAAAAAANQEAAAAAAAAAAAAANQEAAAAAAAA2AQAAAAAAAAAAAAA2AQAAAAAAADcBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQBAAAAAAAANAEAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " grid"
					},
					"BQAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA8AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcBAAAAAAAANwEAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " coore"
					},
					"BgAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwBAAAAAAAAPAEAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAD0BAAAAAAAAPQEAAAAAAAAFAAAAY29vcmU4AQAAAAAAADgBAAAAAAAABQAAAGdyaWQg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIBAAAAAAAAQgEAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "some"
					},
					"BAAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgBAAAAAAAAOAEAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " specified"
					},
					"CgAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAABBAQAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwBAAAAAAAAPAEAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAD0BAAAAAAAAPQEAAAAAAAAJAAAAc3BlY2lmaWVk",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYBAAAAAAAARgEAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "conceptual"
					},
					"CgAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA/AQAAAAAAAEABAAAAAAAAAAAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAABCAQAAAAAAAEMBAAAAAAAAAAAAAEMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAABFAQAAAAAAAEYBAAAAAAAAAAAAAEYBAAAAAAAARwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0BAAAAAAAAPQEAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " grid"
					},
					"BQAAAEcBAAAAAAAASAEAAAAAAAAAAAAASAEAAAAAAABJAQAAAAAAAAAAAABJAQAAAAAAAEoBAAAAAAAAAAAAAEoBAAAAAAAASwEAAAAAAAAAAAAASwEAAAAAAABMAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcBAAAAAAAARwEAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAABOAQAAAAAAAE8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwBAAAAAAAATAEAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " opposed"
					},
					"CAAAAE8BAAAAAAAAUAEAAAAAAAAAAAAAUAEAAAAAAABRAQAAAAAAAAAAAABRAQAAAAAAAFIBAAAAAAAAAAAAAFIBAAAAAAAAUwEAAAAAAAAAAAAAUwEAAAAAAABUAQAAAAAAAAAAAABUAQAAAAAAAFUBAAAAAAAAAAAAAFUBAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABXAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8BAAAAAAAATwEAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAFcBAAAAAAAAWAEAAAAAAAAAAAAAWAEAAAAAAABZAQAAAAAAAAAAAABZAQAAAAAAAFoBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcBAAAAAAAAVwEAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " just"
					},
					"BQAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAABcAQAAAAAAAF0BAAAAAAAAAAAAAF0BAAAAAAAAXgEAAAAAAAAAAAAAXgEAAAAAAABfAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoBAAAAAAAAWgEAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " p"
					},
					"AgAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8BAAAAAAAAXwEAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGEBAAAAAAAAYgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEBAAAAAAAAYQEAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAGEBAAAAAAAAYQEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIBAAAAAAAAYgEAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "ixel"
					},
					"BAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAABjAQAAAAAAAGQBAAAAAAAAAAAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEBAAAAAAAAYQEAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " amounts"
					},
					"CAAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABnAQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUBAAAAAAAAZQEAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "\n* \n* /"
					},
					"BQAAAG0BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABxAQAAAAAAAAAAAABxAQAAAAAAAHMBAAAAAAAAAAAAAHMBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0BAAAAAAAAbQEAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAABAAAAIA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUBAAAAAAAAdQEAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAAD8bAAAAAAAAPxsAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAbAAAAAAAAQBsAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "\n\ndraw_"
					},
					"BwAAAEEbAAAAAAAAQhsAAAAAAAAAAAAAQhsAAAAAAABDGwAAAAAAAAAAAABDGwAAAAAAAEQbAAAAAAAAAAAAAEQbAAAAAAAARRsAAAAAAAAAAAAARRsAAAAAAABGGwAAAAAAAAAAAABGGwAAAAAAAEcbAAAAAAAAAAAAAEcbAAAAAAAASBsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEbAAAAAAAAQRsAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "grid"
					},
					"BAAAAEgbAAAAAAAASRsAAAAAAAAAAAAASRsAAAAAAABKGwAAAAAAAAAAAABKGwAAAAAAAEsbAAAAAAAAAAAAAEsbAAAAAAAATBsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgbAAAAAAAASBsAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAEMbAAAAAAAAQxsAAAAAAAAJAAAAZHJhd19ncmlk",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwbAAAAAAAATBsAAAAAAAAAAAAAAADwvw"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAAEIbAAAAAAAAQhsAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMbAAAAAAAAQxsAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\nget_"
					},
					"BgAAAF4LAAAAAAAAXwsAAAAAAAAAAAAAXwsAAAAAAABgCwAAAAAAAAAAAABgCwAAAAAAAGELAAAAAAAAAAAAAGELAAAAAAAAYgsAAAAAAAAAAAAAYgsAAAAAAABjCwAAAAAAAAAAAABjCwAAAAAAAGQLAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeCwAAAAAAAF4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "ac"
					},
					"AgAAAGQLAAAAAAAAZQsAAAAAAAAAAAAAZQsAAAAAAABmCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkCwAAAAAAAGQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "tual_pos"
					},
					"CAAAAGYLAAAAAAAAZwsAAAAAAAAAAAAAZwsAAAAAAABoCwAAAAAAAAAAAABoCwAAAAAAAGkLAAAAAAAAAAAAAGkLAAAAAAAAagsAAAAAAAAAAAAAagsAAAAAAABrCwAAAAAAAAAAAABrCwAAAAAAAGwLAAAAAAAAAAAAAGwLAAAAAAAAbQsAAAAAAAAAAAAAbQsAAAAAAABuCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmCwAAAAAAAGYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAG4LAAAAAAAAbwsAAAAAAAAAAAAAbwsAAAAAAABwCwAAAAAAAAAAAABwCwAAAAAAAHELAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuCwAAAAAAAG4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAHELAAAAAAAAcgsAAAAAAAAAAAAAcgsAAAAAAABzCwAAAAAAAAAAAABzCwAAAAAAAHQLAAAAAAAAAAAAAHQLAAAAAAAAdQsAAAAAAAAAAAAAdQsAAAAAAAB2CwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxCwAAAAAAAHELAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHYLAAAAAAAAeAsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2CwAAAAAAAHYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "grid_pos"
					},
					"CAAAAHcLAAAAAAAAeAsAAAAAAAAAAAAAeAsAAAAAAAB5CwAAAAAAAAAAAAB5CwAAAAAAAHoLAAAAAAAAAAAAAHoLAAAAAAAAewsAAAAAAAAAAAAAewsAAAAAAAB8CwAAAAAAAAAAAAB8CwAAAAAAAH0LAAAAAAAAAAAAAH0LAAAAAAAAfgsAAAAAAAAAAAAAfgsAAAAAAAB/CwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3CwAAAAAAAHcLAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAH8LAAAAAAAAgAsAAAAAAAAAAAAAgAsAAAAAAACBCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/CwAAAAAAAH8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIELAAAAAAAAggsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBCwAAAAAAAIELAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIILAAAAAAAAhAsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCCwAAAAAAAIILAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIMLAAAAAAAAhAsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDCwAAAAAAAIMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "f32,"
					},
					"BAAAAIULAAAAAAAAhgsAAAAAAAAAAAAAhgsAAAAAAACHCwAAAAAAAAAAAACHCwAAAAAAAIgLAAAAAAAAAAAAAIgLAAAAAAAAiQsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFCwAAAAAAAIULAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " cell_size"
					},
					"CgAAAIkLAAAAAAAAigsAAAAAAAAAAAAAigsAAAAAAACLCwAAAAAAAAAAAACLCwAAAAAAAIwLAAAAAAAAAAAAAIwLAAAAAAAAjQsAAAAAAAAAAAAAjQsAAAAAAACOCwAAAAAAAAAAAACOCwAAAAAAAI8LAAAAAAAAAAAAAI8LAAAAAAAAkAsAAAAAAAAAAAAAkAsAAAAAAACRCwAAAAAAAAAAAACRCwAAAAAAAJILAAAAAAAAAAAAAJILAAAAAAAAkwsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJCwAAAAAAAIkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAJMLAAAAAAAAlAsAAAAAAAAAAAAAlAsAAAAAAACVCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTCwAAAAAAAJMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAJULAAAAAAAAlgsAAAAAAAAAAAAAlgsAAAAAAACXCwAAAAAAAAAAAACXCwAAAAAAAJgLAAAAAAAAAAAAAJgLAAAAAAAAmQsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVCwAAAAAAAJULAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAAJoLAAAAAAAAmwsAAAAAAAAAAAAAmwsAAAAAAACcCwAAAAAAAAAAAACcCwAAAAAAAJ0LAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaCwAAAAAAAJoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ0LAAAAAAAAngsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdCwAAAAAAAJ0LAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJ4LAAAAAAAAoAsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeCwAAAAAAAJ4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAJ8LAAAAAAAAoAsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfCwAAAAAAAJ8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "f32"
					},
					"AwAAAKELAAAAAAAAogsAAAAAAAAAAAAAogsAAAAAAACjCwAAAAAAAAAAAACjCwAAAAAAAKQLAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChCwAAAAAAAKELAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKQLAAAAAAAApQsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkCwAAAAAAAKQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKULAAAAAAAApwsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClCwAAAAAAAKULAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKYLAAAAAAAApwsAAAAAAAAAAAAApwsAAAAAAACoCwAAAAAAAAAAAACnCwAAAAAAAKsLAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmCwAAAAAAAKYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAKsLAAAAAAAArAsAAAAAAAAAAAAArAsAAAAAAACtCwAAAAAAAAAAAACtCwAAAAAAAK4LAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrCwAAAAAAAKsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACwCwAAAAAAAAAAAACwCwAAAAAAALELAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuCwAAAAAAAK4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALELAAAAAAAAsgsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxCwAAAAAAALELAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "grid_pos"
					},
					"CAAAALILAAAAAAAAswsAAAAAAAAAAAAAswsAAAAAAAC0CwAAAAAAAAAAAAC0CwAAAAAAALULAAAAAAAAAAAAALULAAAAAAAAtgsAAAAAAAAAAAAAtgsAAAAAAAC3CwAAAAAAAAAAAAC3CwAAAAAAALgLAAAAAAAAAAAAALgLAAAAAAAAuQsAAAAAAAAAAAAAuQsAAAAAAAC6CwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyCwAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAALoLAAAAAAAAuwsAAAAAAAAAAAAAuwsAAAAAAAC8CwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6CwAAAAAAALoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " cell_sze"
					},
					"CQAAALwLAAAAAAAAvQsAAAAAAAAAAAAAvQsAAAAAAAC+CwAAAAAAAAAAAAC+CwAAAAAAAL8LAAAAAAAAAAAAAL8LAAAAAAAAwAsAAAAAAAAAAAAAwAsAAAAAAADBCwAAAAAAAAAAAADBCwAAAAAAAMILAAAAAAAAAAAAAMILAAAAAAAAwwsAAAAAAAAAAAAAwwsAAAAAAADECwAAAAAAAAAAAADECwAAAAAAAMULAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8CwAAAAAAALwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAAMQLAAAAAAAAxAsAAAAAAAABAAAAZcMLAAAAAAAAwwsAAAAAAAABAAAAeg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFCwAAAAAAAMULAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "ize"
					},
					"AwAAAMMLAAAAAAAAxAsAAAAAAAAAAAAAxAsAAAAAAADFCwAAAAAAAAAAAADFCwAAAAAAAMYLAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDCwAAAAAAAMMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAMYLAAAAAAAAywsAAAAAAAAAAAAAywsAAAAAAADMCwAAAAAAAAAAAADMCwAAAAAAAM0LAAAAAAAAAAAAAM0LAAAAAAAAzgsAAAAAAAAAAAAAzgsAAAAAAADPCwAAAAAAAAAAAADPCwAAAAAAANALAAAAAAAAAAAAANALAAAAAAAA0QsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGCwAAAAAAAMYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " reet"
					},
					"BQAAANELAAAAAAAA0gsAAAAAAAAAAAAA0gsAAAAAAADTCwAAAAAAAAAAAADTCwAAAAAAANQLAAAAAAAAAAAAANQLAAAAAAAA1QsAAAAAAAAAAAAA1QsAAAAAAADWCwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRCwAAAAAAANELAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					2,
					"left_delete",
					null,
					"AgAAANULAAAAAAAA1QsAAAAAAAABAAAAdNQLAAAAAAAA1AsAAAAAAAABAAAAZQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWCwAAAAAAANYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAANQLAAAAAAAA1QsAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUCwAAAAAAANQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\ndraw_cir"
					},
					"CgAAABQhAAAAAAAAFSEAAAAAAAAAAAAAFSEAAAAAAAAWIQAAAAAAAAAAAAAWIQAAAAAAABchAAAAAAAAAAAAABchAAAAAAAAGCEAAAAAAAAAAAAAGCEAAAAAAAAZIQAAAAAAAAAAAAAZIQAAAAAAABohAAAAAAAAAAAAABohAAAAAAAAGyEAAAAAAAAAAAAAGyEAAAAAAAAcIQAAAAAAAAAAAAAcIQAAAAAAAB0hAAAAAAAAAAAAAB0hAAAAAAAAHiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQhAAAAAAAAFCEAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "cle_on"
					},
					"BgAAAB4hAAAAAAAAHyEAAAAAAAAAAAAAHyEAAAAAAAAgIQAAAAAAAAAAAAAgIQAAAAAAACEhAAAAAAAAAAAAACEhAAAAAAAAIiEAAAAAAAAAAAAAIiEAAAAAAAAjIQAAAAAAAAAAAAAjIQAAAAAAACQhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4hAAAAAAAAHiEAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "_grid"
					},
					"BQAAACQhAAAAAAAAJSEAAAAAAAAAAAAAJSEAAAAAAAAmIQAAAAAAAAAAAAAmIQAAAAAAACchAAAAAAAAAAAAACchAAAAAAAAKCEAAAAAAAAAAAAAKCEAAAAAAAApIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQhAAAAAAAAJCEAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAACkhAAAAAAAAKiEAAAAAAAAAAAAAKiEAAAAAAAArIQAAAAAAAAAAAAArIQAAAAAAACwhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkhAAAAAAAAKSEAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAACwhAAAAAAAALSEAAAAAAAAAAAAALSEAAAAAAAAuIQAAAAAAAAAAAAAuIQAAAAAAAC8hAAAAAAAAAAAAAC8hAAAAAAAAMCEAAAAAAAAAAAAAMCEAAAAAAAAxIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwhAAAAAAAALCEAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADEhAAAAAAAAMyEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEhAAAAAAAAMSEAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADMhAAAAAAAANCEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMhAAAAAAAAMyEAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADQhAAAAAAAANiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQhAAAAAAAANCEAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAADUhAAAAAAAANiEAAAAAAAAAAAAANiEAAAAAAAA3IQAAAAAAAAAAAAA2IQAAAAAAADohAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUhAAAAAAAANSEAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "rl.draw"
					},
					"BwAAADohAAAAAAAAOyEAAAAAAAAAAAAAOyEAAAAAAAA8IQAAAAAAAAAAAAA8IQAAAAAAAD0hAAAAAAAAAAAAAD0hAAAAAAAAPiEAAAAAAAAAAAAAPiEAAAAAAAA/IQAAAAAAAAAAAAA/IQAAAAAAAEAhAAAAAAAAAAAAAEAhAAAAAAAAQSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADohAAAAAAAAOiEAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "circ"
					},
					"BAAAAEEhAAAAAAAAQiEAAAAAAAAAAAAAQiEAAAAAAABDIQAAAAAAAAAAAABDIQAAAAAAAEQhAAAAAAAAAAAAAEQhAAAAAAAARSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEhAAAAAAAAQSEAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":7,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DrawCircleV(center: Vector2, radius: f32, color: Color)"
					},
					"AgAAAD0hAAAAAAAAPSEAAAAAAAAIAAAAZHJhd2NpcmM9IQAAAAAAAEohAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUhAAAAAAAARSEAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAADIhAAAAAAAAMyEAAAAAAAAAAAAAMyEAAAAAAAA0IQAAAAAAAAAAAAA0IQAAAAAAADUhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIhAAAAAAAAMiEAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAADUhAAAAAAAANiEAAAAAAAAAAAAANiEAAAAAAAA3IQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUhAAAAAAAANSEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADchAAAAAAAAOCEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADchAAAAAAAANyEAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADghAAAAAAAAOiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADghAAAAAAAAOCEAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADkhAAAAAAAAOiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkhAAAAAAAAOSEAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "f32,"
					},
					"BAAAADshAAAAAAAAPCEAAAAAAAAAAAAAPCEAAAAAAAA9IQAAAAAAAAAAAAA9IQAAAAAAAD4hAAAAAAAAAAAAAD4hAAAAAAAAPyEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADshAAAAAAAAOyEAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAD8hAAAAAAAAQCEAAAAAAAAAAAAAQCEAAAAAAABBIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8hAAAAAAAAPyEAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAEEhAAAAAAAAQiEAAAAAAAAAAAAAQiEAAAAAAABDIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEhAAAAAAAAQSEAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " f32,"
					},
					"BQAAAEMhAAAAAAAARCEAAAAAAAAAAAAARCEAAAAAAABFIQAAAAAAAAAAAABFIQAAAAAAAEYhAAAAAAAAAAAAAEYhAAAAAAAARyEAAAAAAAAAAAAARyEAAAAAAABIIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMhAAAAAAAAQyEAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " grid_c"
					},
					"BwAAAEghAAAAAAAASSEAAAAAAAAAAAAASSEAAAAAAABKIQAAAAAAAAAAAABKIQAAAAAAAEshAAAAAAAAAAAAAEshAAAAAAAATCEAAAAAAAAAAAAATCEAAAAAAABNIQAAAAAAAAAAAABNIQAAAAAAAE4hAAAAAAAAAAAAAE4hAAAAAAAATyEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEghAAAAAAAASCEAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAAE4hAAAAAAAATiEAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8hAAAAAAAATyEAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAAE4hAAAAAAAATyEAAAAAAAAAAAAATyEAAAAAAABQIQAAAAAAAAAAAABQIQAAAAAAAFEhAAAAAAAAAAAAAFEhAAAAAAAAUiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4hAAAAAAAATiEAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAFIhAAAAAAAAUyEAAAAAAAAAAAAAUyEAAAAAAABUIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIhAAAAAAAAUiEAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAFQhAAAAAAAAVSEAAAAAAAAAAAAAVSEAAAAAAABWIQAAAAAAAAAAAABWIQAAAAAAAFchAAAAAAAAAAAAAFchAAAAAAAAWCEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQhAAAAAAAAVCEAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "cell_"
					},
					"BQAAAE4hAAAAAAAATyEAAAAAAAAAAAAATyEAAAAAAABQIQAAAAAAAAAAAABQIQAAAAAAAFEhAAAAAAAAAAAAAFEhAAAAAAAAUiEAAAAAAAAAAAAAUiEAAAAAAABTIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4hAAAAAAAATiEAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\npos"
					},
					"BAAAAGAhAAAAAAAAZSEAAAAAAAAAAAAAZSEAAAAAAABmIQAAAAAAAAAAAABmIQAAAAAAAGchAAAAAAAAAAAAAGchAAAAAAAAaCEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAhAAAAAAAAYCEAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " *="
					},
					"AwAAAGghAAAAAAAAaSEAAAAAAAAAAAAAaSEAAAAAAABqIQAAAAAAAAAAAABqIQAAAAAAAGshAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGghAAAAAAAAaCEAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " grid_cell"
					},
					"CgAAAGshAAAAAAAAbCEAAAAAAAAAAAAAbCEAAAAAAABtIQAAAAAAAAAAAABtIQAAAAAAAG4hAAAAAAAAAAAAAG4hAAAAAAAAbyEAAAAAAAAAAAAAbyEAAAAAAABwIQAAAAAAAAAAAABwIQAAAAAAAHEhAAAAAAAAAAAAAHEhAAAAAAAAciEAAAAAAAAAAAAAciEAAAAAAABzIQAAAAAAAAAAAABzIQAAAAAAAHQhAAAAAAAAAAAAAHQhAAAAAAAAdSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGshAAAAAAAAayEAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "_sizee"
					},
					"BgAAAHUhAAAAAAAAdiEAAAAAAAAAAAAAdiEAAAAAAAB3IQAAAAAAAAAAAAB3IQAAAAAAAHghAAAAAAAAAAAAAHghAAAAAAAAeSEAAAAAAAAAAAAAeSEAAAAAAAB6IQAAAAAAAAAAAAB6IQAAAAAAAHshAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUhAAAAAAAAdSEAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAHohAAAAAAAAeiEAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHshAAAAAAAAeyEAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "\nr"
					},
					"AgAAAHohAAAAAAAAfyEAAAAAAAAAAAAAfyEAAAAAAACAIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHohAAAAAAAAeiEAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIAhAAAAAAAAgSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAhAAAAAAAAgCEAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGUhAAAAAAAAZiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUhAAAAAAAAZSEAAAAAAAAAAAAAAADwvw"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAIAhAAAAAAAAgSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAhAAAAAAAAgCEAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAAGohAAAAAAAAaiEAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGshAAAAAAAAayEAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " pos"
					},
					"BAAAAGshAAAAAAAAbCEAAAAAAAAAAAAAbCEAAAAAAABtIQAAAAAAAAAAAABtIQAAAAAAAG4hAAAAAAAAAAAAAG4hAAAAAAAAbyEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGshAAAAAAAAayEAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAG8hAAAAAAAAcCEAAAAAAAAAAAAAcCEAAAAAAABxIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8hAAAAAAAAbyEAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": ":="
					},
					"AgAAAIghAAAAAAAAiSEAAAAAAAAAAAAAiSEAAAAAAACKIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIghAAAAAAAAiCEAAAAAAAAAAAAAACBnQA"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGohAAAAAAAAayEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGohAAAAAAAAaiEAAAAAAAAAAAAAAABaQA"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAIshAAAAAAAAjCEAAAAAAAAAAAAAjCEAAAAAAACNIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIshAAAAAAAAiyEAAAAAAAAAAAAAAMBcQA"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAI0hAAAAAAAAjiEAAAAAAAAAAAAAjiEAAAAAAACPIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0hAAAAAAAAjSEAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " grid_cell_si"
					},
					"DQAAAI8hAAAAAAAAkCEAAAAAAAAAAAAAkCEAAAAAAACRIQAAAAAAAAAAAACRIQAAAAAAAJIhAAAAAAAAAAAAAJIhAAAAAAAAkyEAAAAAAAAAAAAAkyEAAAAAAACUIQAAAAAAAAAAAACUIQAAAAAAAJUhAAAAAAAAAAAAAJUhAAAAAAAAliEAAAAAAAAAAAAAliEAAAAAAACXIQAAAAAAAAAAAACXIQAAAAAAAJghAAAAAAAAAAAAAJghAAAAAAAAmSEAAAAAAAAAAAAAmSEAAAAAAACaIQAAAAAAAAAAAACaIQAAAAAAAJshAAAAAAAAAAAAAJshAAAAAAAAnCEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8hAAAAAAAAjyEAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "ze"
					},
					"AgAAAJwhAAAAAAAAnSEAAAAAAAAAAAAAnSEAAAAAAACeIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwhAAAAAAAAnCEAAAAAAAAAAAAAAADwvw"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAAEghAAAAAAAASSEAAAAAAAAAAAAASSEAAAAAAABKIQAAAAAAAAAAAABKIQAAAAAAAEshAAAAAAAAAAAAAEshAAAAAAAATCEAAAAAAAAAAAAATCEAAAAAAABNIQAAAAAAAAAAAABNIQAAAAAAAE4hAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEghAAAAAAAASCEAAAAAAAAAAAAAAADwvw"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAE4hAAAAAAAATyEAAAAAAAAAAAAATyEAAAAAAABQIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4hAAAAAAAATiEAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " rl.Color,"
					},
					"CgAAAFAhAAAAAAAAUSEAAAAAAAAAAAAAUSEAAAAAAABSIQAAAAAAAAAAAABSIQAAAAAAAFMhAAAAAAAAAAAAAFMhAAAAAAAAVCEAAAAAAAAAAAAAVCEAAAAAAABVIQAAAAAAAAAAAABVIQAAAAAAAFYhAAAAAAAAAAAAAFYhAAAAAAAAVyEAAAAAAAAAAAAAVyEAAAAAAABYIQAAAAAAAAAAAABYIQAAAAAAAFkhAAAAAAAAAAAAAFkhAAAAAAAAWiEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAhAAAAAAAAUCEAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "_pos,"
					},
					"BQAAAMQhAAAAAAAAxSEAAAAAAAAAAAAAxSEAAAAAAADGIQAAAAAAAAAAAADGIQAAAAAAAMchAAAAAAAAAAAAAMchAAAAAAAAyCEAAAAAAAAAAAAAyCEAAAAAAADJIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQhAAAAAAAAxCEAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " _r,"
					},
					"BAAAAMkhAAAAAAAAyiEAAAAAAAAAAAAAyiEAAAAAAADLIQAAAAAAAAAAAADLIQAAAAAAAMwhAAAAAAAAAAAAAMwhAAAAAAAAzSEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkhAAAAAAAAySEAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAAM0hAAAAAAAAziEAAAAAAAAAAAAAziEAAAAAAADPIQAAAAAAAAAAAADPIQAAAAAAANAhAAAAAAAAAAAAANAhAAAAAAAA0SEAAAAAAAAAAAAA0SEAAAAAAADSIQAAAAAAAAAAAADSIQAAAAAAANMhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0hAAAAAAAAzSEAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n\n\ndraw_line"
					},
					"DAAAANYhAAAAAAAA1yEAAAAAAAAAAAAA1yEAAAAAAADYIQAAAAAAAAAAAADYIQAAAAAAANkhAAAAAAAAAAAAANkhAAAAAAAA2iEAAAAAAAAAAAAA2iEAAAAAAADbIQAAAAAAAAAAAADbIQAAAAAAANwhAAAAAAAAAAAAANwhAAAAAAAA3SEAAAAAAAAAAAAA3SEAAAAAAADeIQAAAAAAAAAAAADeIQAAAAAAAN8hAAAAAAAAAAAAAN8hAAAAAAAA4CEAAAAAAAAAAAAA4CEAAAAAAADhIQAAAAAAAAAAAADhIQAAAAAAAOIhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYhAAAAAAAA1iEAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "_on_grid"
					},
					"CAAAAOIhAAAAAAAA4yEAAAAAAAAAAAAA4yEAAAAAAADkIQAAAAAAAAAAAADkIQAAAAAAAOUhAAAAAAAAAAAAAOUhAAAAAAAA5iEAAAAAAAAAAAAA5iEAAAAAAADnIQAAAAAAAAAAAADnIQAAAAAAAOghAAAAAAAAAAAAAOghAAAAAAAA6SEAAAAAAAAAAAAA6SEAAAAAAADqIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIhAAAAAAAA4iEAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAOohAAAAAAAA6yEAAAAAAAAAAAAA6yEAAAAAAADsIQAAAAAAAAAAAADsIQAAAAAAAO0hAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOohAAAAAAAA6iEAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAO0hAAAAAAAA7iEAAAAAAAAAAAAA7iEAAAAAAADvIQAAAAAAAAAAAADvIQAAAAAAAPAhAAAAAAAAAAAAAPAhAAAAAAAA8SEAAAAAAAAAAAAA8SEAAAAAAADyIQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0hAAAAAAAA7SEAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIhAAAAAAAA9CEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIhAAAAAAAA8iEAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "pos1"
					},
					"BAAAAPMhAAAAAAAA9CEAAAAAAAAAAAAA9CEAAAAAAAD1IQAAAAAAAAAAAAD1IQAAAAAAAPYhAAAAAAAAAAAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMhAAAAAAAA8yEAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAPchAAAAAAAA+CEAAAAAAAAAAAAA+CEAAAAAAAD5IQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPchAAAAAAAA9yEAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkhAAAAAAAA+iEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkhAAAAAAAA+SEAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPohAAAAAAAA/CEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPohAAAAAAAA+iEAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAPshAAAAAAAA/CEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPshAAAAAAAA+yEAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "f32,"
					},
					"BAAAAP0hAAAAAAAA/iEAAAAAAAAAAAAA/iEAAAAAAAD/IQAAAAAAAAAAAAD/IQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAASIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0hAAAAAAAA/SEAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " pos"
					},
					"BAAAAAEiAAAAAAAAAiIAAAAAAAAAAAAAAiIAAAAAAAADIgAAAAAAAAAAAAADIgAAAAAAAAQiAAAAAAAAAAAAAAQiAAAAAAAABSIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEiAAAAAAAAASIAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					8,
					"delete_word",
					{
						"forward": false
					},
					"CAAAAAIiAAAAAAAAAiIAAAAAAAADAAAAcG9zACIAAAAAAAAAIgAAAAAAAAIAAAAsIP0hAAAAAAAA/SEAAAAAAAADAAAAZjMy/CEAAAAAAAD8IQAAAAAAAAEAAABd+yEAAAAAAAD7IQAAAAAAAAEAAAAy+iEAAAAAAAD6IQAAAAAAAAEAAABb+CEAAAAAAAD4IQAAAAAAAAIAAAA6IPMhAAAAAAAA8yEAAAAAAAAFAAAAcG9zMSA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUiAAAAAAAABSIAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPQhAAAAAAAA9SEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQhAAAAAAAA9CEAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPUhAAAAAAAA9yEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUhAAAAAAAA9SEAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAD4IQAAAAAAAAAAAAD3IQAAAAAAAPshAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYhAAAAAAAA9iEAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "rl.DrawLine"
					},
					"CwAAAPshAAAAAAAA/CEAAAAAAAAAAAAA/CEAAAAAAAD9IQAAAAAAAAAAAAD9IQAAAAAAAP4hAAAAAAAAAAAAAP4hAAAAAAAA/yEAAAAAAAAAAAAA/yEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAEiAAAAAAAAAAAAAAEiAAAAAAAAAiIAAAAAAAAAAAAAAiIAAAAAAAADIgAAAAAAAAAAAAADIgAAAAAAAAQiAAAAAAAAAAAAAAQiAAAAAAAABSIAAAAAAAAAAAAABSIAAAAAAAAGIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPshAAAAAAAA+yEAAAAAAAAAAAAAAADwvw"
				],
				[
					110,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":13,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DrawLineV(startPos, endPos: Vector2, color: Color)"
					},
					"AgAAAP4hAAAAAAAA/iEAAAAAAAAIAAAARHJhd0xpbmX+IQAAAAAAAAkiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYiAAAAAAAABiIAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "start_pos"
					},
					"CQAAAPMhAAAAAAAA9CEAAAAAAAAAAAAA9CEAAAAAAAD1IQAAAAAAAAAAAAD1IQAAAAAAAPYhAAAAAAAAAAAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAD4IQAAAAAAAAAAAAD4IQAAAAAAAPkhAAAAAAAAAAAAAPkhAAAAAAAA+iEAAAAAAAAAAAAA+iEAAAAAAAD7IQAAAAAAAAAAAAD7IQAAAAAAAPwhAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMhAAAAAAAA8yEAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAPwhAAAAAAAA/SEAAAAAAAAAAAAA/SEAAAAAAAD+IQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwhAAAAAAAA/CEAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4hAAAAAAAA/yEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4hAAAAAAAA/iEAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAP8hAAAAAAAAASIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8hAAAAAAAA/yEAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAAAiAAAAAAAAASIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAiAAAAAAAAACIAAAAAAAAAAAAAAADwvw"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "f32"
					},
					"AwAAAAIiAAAAAAAAAyIAAAAAAAAAAAAAAyIAAAAAAAAEIgAAAAAAAAAAAAAEIgAAAAAAAAUiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIiAAAAAAAAAiIAAAAAAAAAAAAAAADwvw"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAUiAAAAAAAABiIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUiAAAAAAAABSIAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " end_pos"
					},
					"CAAAAAYiAAAAAAAAByIAAAAAAAAAAAAAByIAAAAAAAAIIgAAAAAAAAAAAAAIIgAAAAAAAAkiAAAAAAAAAAAAAAkiAAAAAAAACiIAAAAAAAAAAAAACiIAAAAAAAALIgAAAAAAAAAAAAALIgAAAAAAAAwiAAAAAAAAAAAAAAwiAAAAAAAADSIAAAAAAAAAAAAADSIAAAAAAAAOIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYiAAAAAAAABiIAAAAAAAAAAAAAAADwvw"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAA4iAAAAAAAADyIAAAAAAAAAAAAADyIAAAAAAAAQIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4iAAAAAAAADiIAAAAAAAAAAAAAAADwvw"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAiAAAAAAAAESIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAiAAAAAAAAECIAAAAAAAAAAAAAAADwvw"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABEiAAAAAAAAEyIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEiAAAAAAAAESIAAAAAAAAAAAAAAADwvw"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAABIiAAAAAAAAEyIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIiAAAAAAAAEiIAAAAAAAAAAAAAAADwvw"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAANghAAAAAAAA2SEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANghAAAAAAAA2CEAAAAAAAAAAAAAAEiFQA"
				],
				[
					130,
					1,
					"left_delete",
					null,
					"AQAAANghAAAAAAAA2CEAAAAAAAABAAAAZg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkhAAAAAAAA2SEAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "f32,"
					},
					"BAAAABQiAAAAAAAAFSIAAAAAAAAAAAAAFSIAAAAAAAAWIgAAAAAAAAAAAAAWIgAAAAAAABciAAAAAAAAAAAAABciAAAAAAAAGCIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQiAAAAAAAAFCIAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAABgiAAAAAAAAGSIAAAAAAAAAAAAAGSIAAAAAAAAaIgAAAAAAAAAAAAAaIgAAAAAAABsiAAAAAAAAAAAAABsiAAAAAAAAHCIAAAAAAAAAAAAAHCIAAAAAAAAdIgAAAAAAAAAAAAAdIgAAAAAAAB4iAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgiAAAAAAAAGCIAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAB4iAAAAAAAAHyIAAAAAAAAAAAAAHyIAAAAAAAAgIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4iAAAAAAAAHiIAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " rl.,"
					},
					"BQAAACAiAAAAAAAAISIAAAAAAAAAAAAAISIAAAAAAAAiIgAAAAAAAAAAAAAiIgAAAAAAACMiAAAAAAAAAAAAACMiAAAAAAAAJCIAAAAAAAAAAAAAJCIAAAAAAAAlIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAiAAAAAAAAICIAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"left_delete",
					null,
					"AQAAACQiAAAAAAAAJCIAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUiAAAAAAAAJSIAAAAAAAAAAAAAAADwvw"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "Color,"
					},
					"BgAAACQiAAAAAAAAJSIAAAAAAAAAAAAAJSIAAAAAAAAmIgAAAAAAAAAAAAAmIgAAAAAAACciAAAAAAAAAAAAACciAAAAAAAAKCIAAAAAAAAAAAAAKCIAAAAAAAApIgAAAAAAAAAAAAApIgAAAAAAACoiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQiAAAAAAAAJCIAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " thickenss"
					},
					"CgAAACoiAAAAAAAAKyIAAAAAAAAAAAAAKyIAAAAAAAAsIgAAAAAAAAAAAAAsIgAAAAAAAC0iAAAAAAAAAAAAAC0iAAAAAAAALiIAAAAAAAAAAAAALiIAAAAAAAAvIgAAAAAAAAAAAAAvIgAAAAAAADAiAAAAAAAAAAAAADAiAAAAAAAAMSIAAAAAAAAAAAAAMSIAAAAAAAAyIgAAAAAAAAAAAAAyIgAAAAAAADMiAAAAAAAAAAAAADMiAAAAAAAANCIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoiAAAAAAAAKiIAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAADQiAAAAAAAANSIAAAAAAAAAAAAANSIAAAAAAAA2IgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQiAAAAAAAANCIAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " f32,"
					},
					"BQAAADYiAAAAAAAANyIAAAAAAAAAAAAANyIAAAAAAAA4IgAAAAAAAAAAAAA4IgAAAAAAADkiAAAAAAAAAAAAADkiAAAAAAAAOiIAAAAAAAAAAAAAOiIAAAAAAAA7IgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYiAAAAAAAANiIAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsiAAAAAAAAPCIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsiAAAAAAAAOyIAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"left_delete",
					null,
					"AQAAADEiAAAAAAAAMSIAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIiAAAAAAAAMiIAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAADAiAAAAAAAAMSIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAiAAAAAAAAMCIAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " gridd"
					},
					"BgAAADsiAAAAAAAAPCIAAAAAAAAAAAAAPCIAAAAAAAA9IgAAAAAAAAAAAAA9IgAAAAAAAD4iAAAAAAAAAAAAAD4iAAAAAAAAPyIAAAAAAAAAAAAAPyIAAAAAAABAIgAAAAAAAAAAAABAIgAAAAAAAEEiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsiAAAAAAAAOyIAAAAAAAAAAAAAAADwvw"
				],
				[
					151,
					1,
					"left_delete",
					null,
					"AQAAAEAiAAAAAAAAQCIAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEiAAAAAAAAQSIAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "_cell_size"
					},
					"CgAAAEAiAAAAAAAAQSIAAAAAAAAAAAAAQSIAAAAAAABCIgAAAAAAAAAAAABCIgAAAAAAAEMiAAAAAAAAAAAAAEMiAAAAAAAARCIAAAAAAAAAAAAARCIAAAAAAABFIgAAAAAAAAAAAABFIgAAAAAAAEYiAAAAAAAAAAAAAEYiAAAAAAAARyIAAAAAAAAAAAAARyIAAAAAAABIIgAAAAAAAAAAAABIIgAAAAAAAEkiAAAAAAAAAAAAAEkiAAAAAAAASiIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAiAAAAAAAAQCIAAAAAAAAAAAAAAADwvw"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEsiAAAAAAAATCIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsiAAAAAAAASyIAAAAAAAAAAAAAAADwvw"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAEwiAAAAAAAATSIAAAAAAAAAAAAATSIAAAAAAABOIgAAAAAAAAAAAABOIgAAAAAAAE8iAAAAAAAAAAAAAE8iAAAAAAAAUCIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwiAAAAAAAATCIAAAAAAAAAAAAAAADwvw"
				],
				[
					166,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAGQiAAAAAAAAZCIAAAAAAAACAAAAKCk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYiAAAAAAAAZiIAAAAAAAAAAAAAAHiVQA"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAGMiAAAAAAAAYyIAAAAAAAABAAAAVg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQiAAAAAAAAZCIAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":11,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DrawLineEx(startPos, endPos: Vector2, thick: f32, color: Color)"
					},
					"AgAAAFsiAAAAAAAAWyIAAAAAAAAIAAAARHJhd0xpbmVbIgAAAAAAAGciAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMiAAAAAAAAYyIAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"cut",
					null,
					"AQAAACsiAAAAAAAAKyIAAAAAAAARAAAAdGhpY2tuZXNzIDogZjMyLCA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwiAAAAAAAAKyIAAAAAAAAAAAAAAADwvw"
				],
				[
					178,
					1,
					"paste",
					null,
					"AQAAABkiAAAAAAAAKiIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkiAAAAAAAAGSIAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "\n_start_pos"
					},
					"CwAAAFMiAAAAAAAAWCIAAAAAAAAAAAAAWCIAAAAAAABZIgAAAAAAAAAAAABZIgAAAAAAAFoiAAAAAAAAAAAAAFoiAAAAAAAAWyIAAAAAAAAAAAAAWyIAAAAAAABcIgAAAAAAAAAAAABcIgAAAAAAAF0iAAAAAAAAAAAAAF0iAAAAAAAAXiIAAAAAAAAAAAAAXiIAAAAAAABfIgAAAAAAAAAAAABfIgAAAAAAAGAiAAAAAAAAAAAAAGAiAAAAAAAAYSIAAAAAAAAAAAAAYSIAAAAAAABiIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMiAAAAAAAAUyIAAAAAAAAAAAAAAABqQA"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAGIiAAAAAAAAYyIAAAAAAAAAAAAAYyIAAAAAAABkIgAAAAAAAAAAAABkIgAAAAAAAGUiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIiAAAAAAAAYiIAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": " start_pos"
					},
					"CgAAAGUiAAAAAAAAZiIAAAAAAAAAAAAAZiIAAAAAAABnIgAAAAAAAAAAAABnIgAAAAAAAGgiAAAAAAAAAAAAAGgiAAAAAAAAaSIAAAAAAAAAAAAAaSIAAAAAAABqIgAAAAAAAAAAAABqIgAAAAAAAGsiAAAAAAAAAAAAAGsiAAAAAAAAbCIAAAAAAAAAAAAAbCIAAAAAAABtIgAAAAAAAAAAAABtIgAAAAAAAG4iAAAAAAAAAAAAAG4iAAAAAAAAbyIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUiAAAAAAAAZSIAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAG8iAAAAAAAAcCIAAAAAAAAAAAAAcCIAAAAAAABxIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8iAAAAAAAAbyIAAAAAAAAAAAAAAADwvw"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " grid_cell"
					},
					"CgAAAHEiAAAAAAAAciIAAAAAAAAAAAAAciIAAAAAAABzIgAAAAAAAAAAAABzIgAAAAAAAHQiAAAAAAAAAAAAAHQiAAAAAAAAdSIAAAAAAAAAAAAAdSIAAAAAAAB2IgAAAAAAAAAAAAB2IgAAAAAAAHciAAAAAAAAAAAAAHciAAAAAAAAeCIAAAAAAAAAAAAAeCIAAAAAAAB5IgAAAAAAAAAAAAB5IgAAAAAAAHoiAAAAAAAAAAAAAHoiAAAAAAAAeyIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEiAAAAAAAAcSIAAAAAAAAAAAAAAADwvw"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "_size"
					},
					"BQAAAHsiAAAAAAAAfCIAAAAAAAAAAAAAfCIAAAAAAAB9IgAAAAAAAAAAAAB9IgAAAAAAAH4iAAAAAAAAAAAAAH4iAAAAAAAAfyIAAAAAAAAAAAAAfyIAAAAAAACAIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsiAAAAAAAAeyIAAAAAAAAAAAAAAADwvw"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "\n_end_pos"
					},
					"CQAAAIAiAAAAAAAAhSIAAAAAAAAAAAAAhSIAAAAAAACGIgAAAAAAAAAAAACGIgAAAAAAAIciAAAAAAAAAAAAAIciAAAAAAAAiCIAAAAAAAAAAAAAiCIAAAAAAACJIgAAAAAAAAAAAACJIgAAAAAAAIoiAAAAAAAAAAAAAIoiAAAAAAAAiyIAAAAAAAAAAAAAiyIAAAAAAACMIgAAAAAAAAAAAACMIgAAAAAAAI0iAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAiAAAAAAAAgCIAAAAAAAAAAAAAAADwvw"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAI0iAAAAAAAAjiIAAAAAAAAAAAAAjiIAAAAAAACPIgAAAAAAAAAAAACPIgAAAAAAAJAiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0iAAAAAAAAjSIAAAAAAAAAAAAAAADwvw"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " end_pos"
					},
					"CAAAAJAiAAAAAAAAkSIAAAAAAAAAAAAAkSIAAAAAAACSIgAAAAAAAAAAAACSIgAAAAAAAJMiAAAAAAAAAAAAAJMiAAAAAAAAlCIAAAAAAAAAAAAAlCIAAAAAAACVIgAAAAAAAAAAAACVIgAAAAAAAJYiAAAAAAAAAAAAAJYiAAAAAAAAlyIAAAAAAAAAAAAAlyIAAAAAAACYIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAiAAAAAAAAkCIAAAAAAAAAAAAAAADwvw"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAJgiAAAAAAAAmSIAAAAAAAAAAAAAmSIAAAAAAACaIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgiAAAAAAAAmCIAAAAAAAAAAAAAAADwvw"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " grid_cell-"
					},
					"CwAAAJoiAAAAAAAAmyIAAAAAAAAAAAAAmyIAAAAAAACcIgAAAAAAAAAAAACcIgAAAAAAAJ0iAAAAAAAAAAAAAJ0iAAAAAAAAniIAAAAAAAAAAAAAniIAAAAAAACfIgAAAAAAAAAAAACfIgAAAAAAAKAiAAAAAAAAAAAAAKAiAAAAAAAAoSIAAAAAAAAAAAAAoSIAAAAAAACiIgAAAAAAAAAAAACiIgAAAAAAAKMiAAAAAAAAAAAAAKMiAAAAAAAApCIAAAAAAAAAAAAApCIAAAAAAAClIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoiAAAAAAAAmiIAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAKQiAAAAAAAApCIAAAAAAAABAAAALQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUiAAAAAAAApSIAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "_size"
					},
					"BQAAAKQiAAAAAAAApSIAAAAAAAAAAAAApSIAAAAAAACmIgAAAAAAAAAAAACmIgAAAAAAAKciAAAAAAAAAAAAAKciAAAAAAAAqCIAAAAAAAAAAAAAqCIAAAAAAACpIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQiAAAAAAAApCIAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "\nthicknes"
					},
					"CQAAAKkiAAAAAAAAriIAAAAAAAAAAAAAriIAAAAAAACvIgAAAAAAAAAAAACvIgAAAAAAALAiAAAAAAAAAAAAALAiAAAAAAAAsSIAAAAAAAAAAAAAsSIAAAAAAACyIgAAAAAAAAAAAACyIgAAAAAAALMiAAAAAAAAAAAAALMiAAAAAAAAtCIAAAAAAAAAAAAAtCIAAAAAAAC1IgAAAAAAAAAAAAC1IgAAAAAAALYiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkiAAAAAAAAqSIAAAAAAAAAAAAAAADwvw"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAALYiAAAAAAAAtyIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYiAAAAAAAAtiIAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAK4iAAAAAAAAryIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4iAAAAAAAAriIAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAALgiAAAAAAAAuSIAAAAAAAAAAAAAuSIAAAAAAAC6IgAAAAAAAAAAAAC6IgAAAAAAALsiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgiAAAAAAAAuCIAAAAAAAAAAAAAAADwvw"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " thickness"
					},
					"CgAAALsiAAAAAAAAvCIAAAAAAAAAAAAAvCIAAAAAAAC9IgAAAAAAAAAAAAC9IgAAAAAAAL4iAAAAAAAAAAAAAL4iAAAAAAAAvyIAAAAAAAAAAAAAvyIAAAAAAADAIgAAAAAAAAAAAADAIgAAAAAAAMEiAAAAAAAAAAAAAMEiAAAAAAAAwiIAAAAAAAAAAAAAwiIAAAAAAADDIgAAAAAAAAAAAADDIgAAAAAAAMQiAAAAAAAAAAAAAMQiAAAAAAAAxSIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsiAAAAAAAAuyIAAAAAAAAAAAAAAADwvw"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " *"
					},
					"AgAAAMUiAAAAAAAAxiIAAAAAAAAAAAAAxiIAAAAAAADHIgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUiAAAAAAAAxSIAAAAAAAAAAAAAAADwvw"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " grid_cell_size"
					},
					"DwAAAMciAAAAAAAAyCIAAAAAAAAAAAAAyCIAAAAAAADJIgAAAAAAAAAAAADJIgAAAAAAAMoiAAAAAAAAAAAAAMoiAAAAAAAAyyIAAAAAAAAAAAAAyyIAAAAAAADMIgAAAAAAAAAAAADMIgAAAAAAAM0iAAAAAAAAAAAAAM0iAAAAAAAAziIAAAAAAAAAAAAAziIAAAAAAADPIgAAAAAAAAAAAADPIgAAAAAAANAiAAAAAAAAAAAAANAiAAAAAAAA0SIAAAAAAAAAAAAA0SIAAAAAAADSIgAAAAAAAAAAAADSIgAAAAAAANMiAAAAAAAAAAAAANMiAAAAAAAA1CIAAAAAAAAAAAAA1CIAAAAAAADVIgAAAAAAAAAAAADVIgAAAAAAANYiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMciAAAAAAAAxyIAAAAAAAAAAAAAAADwvw"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "star"
					},
					"BAAAAOkiAAAAAAAA6iIAAAAAAAAAAAAA6iIAAAAAAADrIgAAAAAAAAAAAADrIgAAAAAAAOwiAAAAAAAAAAAAAOwiAAAAAAAA7SIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkiAAAAAAAA6SIAAAAAAAAAAAAAAADwvw"
				],
				[
					209,
					4,
					"left_delete",
					null,
					"BAAAAOwiAAAAAAAA7CIAAAAAAAABAAAAcusiAAAAAAAA6yIAAAAAAAABAAAAYeoiAAAAAAAA6iIAAAAAAAABAAAAdOkiAAAAAAAA6SIAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0iAAAAAAAA7SIAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "_start_pos,"
					},
					"CwAAAOkiAAAAAAAA6iIAAAAAAAAAAAAA6iIAAAAAAADrIgAAAAAAAAAAAADrIgAAAAAAAOwiAAAAAAAAAAAAAOwiAAAAAAAA7SIAAAAAAAAAAAAA7SIAAAAAAADuIgAAAAAAAAAAAADuIgAAAAAAAO8iAAAAAAAAAAAAAO8iAAAAAAAA8CIAAAAAAAAAAAAA8CIAAAAAAADxIgAAAAAAAAAAAADxIgAAAAAAAPIiAAAAAAAAAAAAAPIiAAAAAAAA8yIAAAAAAAAAAAAA8yIAAAAAAAD0IgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkiAAAAAAAA6SIAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " _"
					},
					"AgAAAPQiAAAAAAAA9SIAAAAAAAAAAAAA9SIAAAAAAAD2IgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQiAAAAAAAA9CIAAAAAAAAAAAAAAADwvw"
				],
				[
					213,
					1,
					"left_delete",
					null,
					"AQAAAPYiAAAAAAAA9iIAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPciAAAAAAAA9yIAAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "end_pos,"
					},
					"CAAAAPYiAAAAAAAA9yIAAAAAAAAAAAAA9yIAAAAAAAD4IgAAAAAAAAAAAAD4IgAAAAAAAPkiAAAAAAAAAAAAAPkiAAAAAAAA+iIAAAAAAAAAAAAA+iIAAAAAAAD7IgAAAAAAAAAAAAD7IgAAAAAAAPwiAAAAAAAAAAAAAPwiAAAAAAAA/SIAAAAAAAAAAAAA/SIAAAAAAAD+IgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYiAAAAAAAA9iIAAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " _"
					},
					"AgAAAP4iAAAAAAAA/yIAAAAAAAAAAAAA/yIAAAAAAAAAIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4iAAAAAAAA/iIAAAAAAAAAAAAAAADwvw"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "thjick"
					},
					"BgAAAAAjAAAAAAAAASMAAAAAAAAAAAAAASMAAAAAAAACIwAAAAAAAAAAAAACIwAAAAAAAAMjAAAAAAAAAAAAAAMjAAAAAAAABCMAAAAAAAAAAAAABCMAAAAAAAAFIwAAAAAAAAAAAAAFIwAAAAAAAAYjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAjAAAAAAAAACMAAAAAAAAAAAAAAADwvw"
				],
				[
					217,
					4,
					"left_delete",
					null,
					"BAAAAAUjAAAAAAAABSMAAAAAAAABAAAAawQjAAAAAAAABCMAAAAAAAABAAAAYwMjAAAAAAAAAyMAAAAAAAABAAAAaQIjAAAAAAAAAiMAAAAAAAABAAAAag",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYjAAAAAAAABiMAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "ickes"
					},
					"BQAAAAIjAAAAAAAAAyMAAAAAAAAAAAAAAyMAAAAAAAAEIwAAAAAAAAAAAAAEIwAAAAAAAAUjAAAAAAAAAAAAAAUjAAAAAAAABiMAAAAAAAAAAAAABiMAAAAAAAAHIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIjAAAAAAAAAiMAAAAAAAAAAAAAAADwvw"
				],
				[
					219,
					2,
					"left_delete",
					null,
					"AgAAAAYjAAAAAAAABiMAAAAAAAABAAAAcwUjAAAAAAAABSMAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcjAAAAAAAAByMAAAAAAAAAAAAAAADwvw"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "ness,"
					},
					"BQAAAAUjAAAAAAAABiMAAAAAAAAAAAAABiMAAAAAAAAHIwAAAAAAAAAAAAAHIwAAAAAAAAgjAAAAAAAAAAAAAAgjAAAAAAAACSMAAAAAAAAAAAAACSMAAAAAAAAKIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUjAAAAAAAABSMAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAAAojAAAAAAAACyMAAAAAAAAAAAAACyMAAAAAAAAMIwAAAAAAAAAAAAAMIwAAAAAAAA0jAAAAAAAAAAAAAA0jAAAAAAAADiMAAAAAAAAAAAAADiMAAAAAAAAPIwAAAAAAAAAAAAAPIwAAAAAAABAjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAojAAAAAAAACiMAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABAjAAAAAAAAESMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAjAAAAAAAAECMAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAABMjAAAAAAAAFCMAAAAAAAAAAAAAFCMAAAAAAAAVIwAAAAAAAAAAAAAVIwAAAAAAABYjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMjAAAAAAAAEyMAAAAAAAAAAAAAAADwvw"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABUjAAAAAAAAFiMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUjAAAAAAAAFSMAAAAAAAAAAAAAAAAAAA"
				],
				[
					231,
					1,
					"paste",
					null,
					"AQAAABYjAAAAAAAAhSYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYjAAAAAAAAFiMAAAAAAAAAAAAAAADwvw"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIUmAAAAAAAAhiYAAAAAAAAAAAAAhiYAAAAAAACHJgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUmAAAAAAAAhSYAAAAAAAAAAAAAAADwvw"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "draw_arrow_on"
					},
					"DQAAAIcmAAAAAAAAiCYAAAAAAAAAAAAAiCYAAAAAAACJJgAAAAAAAAAAAACJJgAAAAAAAIomAAAAAAAAAAAAAIomAAAAAAAAiyYAAAAAAAAAAAAAiyYAAAAAAACMJgAAAAAAAAAAAACMJgAAAAAAAI0mAAAAAAAAAAAAAI0mAAAAAAAAjiYAAAAAAAAAAAAAjiYAAAAAAACPJgAAAAAAAAAAAACPJgAAAAAAAJAmAAAAAAAAAAAAAJAmAAAAAAAAkSYAAAAAAAAAAAAAkSYAAAAAAACSJgAAAAAAAAAAAACSJgAAAAAAAJMmAAAAAAAAAAAAAJMmAAAAAAAAlCYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcmAAAAAAAAhyYAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "_grid"
					},
					"BQAAAJQmAAAAAAAAlSYAAAAAAAAAAAAAlSYAAAAAAACWJgAAAAAAAAAAAACWJgAAAAAAAJcmAAAAAAAAAAAAAJcmAAAAAAAAmCYAAAAAAAAAAAAAmCYAAAAAAACZJgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQmAAAAAAAAlCYAAAAAAAAAAAAAAADwvw"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "_on_grid"
					},
					"CAAAACAjAAAAAAAAISMAAAAAAAAAAAAAISMAAAAAAAAiIwAAAAAAAAAAAAAiIwAAAAAAACMjAAAAAAAAAAAAACMjAAAAAAAAJCMAAAAAAAAAAAAAJCMAAAAAAAAlIwAAAAAAAAAAAAAlIwAAAAAAACYjAAAAAAAAAAAAACYjAAAAAAAAJyMAAAAAAAAAAAAAJyMAAAAAAAAoIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAjAAAAAAAAICMAAAAAAAAAAAAAAADwvw"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEMjAAAAAAAARCMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMjAAAAAAAAQyMAAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " thickness"
					},
					"CgAAAEQjAAAAAAAARSMAAAAAAAAAAAAARSMAAAAAAABGIwAAAAAAAAAAAABGIwAAAAAAAEcjAAAAAAAAAAAAAEcjAAAAAAAASCMAAAAAAAAAAAAASCMAAAAAAABJIwAAAAAAAAAAAABJIwAAAAAAAEojAAAAAAAAAAAAAEojAAAAAAAASyMAAAAAAAAAAAAASyMAAAAAAABMIwAAAAAAAAAAAABMIwAAAAAAAE0jAAAAAAAAAAAAAE0jAAAAAAAATiMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQjAAAAAAAARCMAAAAAAAAAAAAAAADwvw"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAE4jAAAAAAAATyMAAAAAAAAAAAAATyMAAAAAAABQIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4jAAAAAAAATiMAAAAAAAAAAAAAAADwvw"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": " f32,"
					},
					"BQAAAFAjAAAAAAAAUSMAAAAAAAAAAAAAUSMAAAAAAABSIwAAAAAAAAAAAABSIwAAAAAAAFMjAAAAAAAAAAAAAFMjAAAAAAAAVCMAAAAAAAAAAAAAVCMAAAAAAABVIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAjAAAAAAAAUCMAAAAAAAAAAAAAAADwvw"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": " color"
					},
					"BgAAAFUjAAAAAAAAViMAAAAAAAAAAAAAViMAAAAAAABXIwAAAAAAAAAAAABXIwAAAAAAAFgjAAAAAAAAAAAAAFgjAAAAAAAAWSMAAAAAAAAAAAAAWSMAAAAAAABaIwAAAAAAAAAAAABaIwAAAAAAAFsjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUjAAAAAAAAVSMAAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAFsjAAAAAAAAXCMAAAAAAAAAAAAAXCMAAAAAAABdIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsjAAAAAAAAWyMAAAAAAAAAAAAAAADwvw"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " rl.Color,"
					},
					"CgAAAF0jAAAAAAAAXiMAAAAAAAAAAAAAXiMAAAAAAABfIwAAAAAAAAAAAABfIwAAAAAAAGAjAAAAAAAAAAAAAGAjAAAAAAAAYSMAAAAAAAAAAAAAYSMAAAAAAABiIwAAAAAAAAAAAABiIwAAAAAAAGMjAAAAAAAAAAAAAGMjAAAAAAAAZCMAAAAAAAAAAAAAZCMAAAAAAABlIwAAAAAAAAAAAABlIwAAAAAAAGYjAAAAAAAAAAAAAGYjAAAAAAAAZyMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0jAAAAAAAAXSMAAAAAAAAAAAAAAADwvw"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": " grid_cell_"
					},
					"CwAAAGcjAAAAAAAAaCMAAAAAAAAAAAAAaCMAAAAAAABpIwAAAAAAAAAAAABpIwAAAAAAAGojAAAAAAAAAAAAAGojAAAAAAAAayMAAAAAAAAAAAAAayMAAAAAAABsIwAAAAAAAAAAAABsIwAAAAAAAG0jAAAAAAAAAAAAAG0jAAAAAAAAbiMAAAAAAAAAAAAAbiMAAAAAAABvIwAAAAAAAAAAAABvIwAAAAAAAHAjAAAAAAAAAAAAAHAjAAAAAAAAcSMAAAAAAAAAAAAAcSMAAAAAAAByIwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcjAAAAAAAAZyMAAAAAAAAAAAAAAADwvw"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "size"
					},
					"BAAAAHIjAAAAAAAAcyMAAAAAAAAAAAAAcyMAAAAAAAB0IwAAAAAAAAAAAAB0IwAAAAAAAHUjAAAAAAAAAAAAAHUjAAAAAAAAdiMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIjAAAAAAAAciMAAAAAAAAAAAAAAADwvw"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "_on_grid"
					},
					"GAAAAKAmAAAAAAAAoSYAAAAAAAAAAAAAdSYAAAAAAAB2JgAAAAAAAAAAAACgIwAAAAAAAKEjAAAAAAAAAAAAAKMmAAAAAAAApCYAAAAAAAAAAAAAdyYAAAAAAAB4JgAAAAAAAAAAAAChIwAAAAAAAKIjAAAAAAAAAAAAAKYmAAAAAAAApyYAAAAAAAAAAAAAeSYAAAAAAAB6JgAAAAAAAAAAAACiIwAAAAAAAKMjAAAAAAAAAAAAAKkmAAAAAAAAqiYAAAAAAAAAAAAAeyYAAAAAAAB8JgAAAAAAAAAAAACjIwAAAAAAAKQjAAAAAAAAAAAAAKwmAAAAAAAArSYAAAAAAAAAAAAAfSYAAAAAAAB+JgAAAAAAAAAAAACkIwAAAAAAAKUjAAAAAAAAAAAAAK8mAAAAAAAAsCYAAAAAAAAAAAAAfyYAAAAAAACAJgAAAAAAAAAAAAClIwAAAAAAAKYjAAAAAAAAAAAAALImAAAAAAAAsyYAAAAAAAAAAAAAgSYAAAAAAACCJgAAAAAAAAAAAACmIwAAAAAAAKcjAAAAAAAAAAAAALUmAAAAAAAAtiYAAAAAAAAAAAAAgyYAAAAAAACEJgAAAAAAAAAAAACnIwAAAAAAAKgjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAKAjAAAAAAAAoCMAAAAAAAAAAAAAAADwv3UmAAAAAAAAdSYAAAAAAAAAAAAAAADwv6AmAAAAAAAAoCYAAAAAAAAAAAAAAADwvw"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": ","
					},
					"AwAAANUmAAAAAAAA1iYAAAAAAAAAAAAAoSYAAAAAAACiJgAAAAAAAAAAAAC8IwAAAAAAAL0jAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAALwjAAAAAAAAvCMAAAAAAAAAAAAAAADwv6EmAAAAAAAAoSYAAAAAAAAAAAAAAADwv9UmAAAAAAAA1SYAAAAAAAAAAAAAAADwvw"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": " thickness,"
					},
					"IQAAANgmAAAAAAAA2SYAAAAAAAAAAAAAoyYAAAAAAACkJgAAAAAAAAAAAAC9IwAAAAAAAL4jAAAAAAAAAAAAANsmAAAAAAAA3CYAAAAAAAAAAAAApSYAAAAAAACmJgAAAAAAAAAAAAC+IwAAAAAAAL8jAAAAAAAAAAAAAN4mAAAAAAAA3yYAAAAAAAAAAAAApyYAAAAAAACoJgAAAAAAAAAAAAC/IwAAAAAAAMAjAAAAAAAAAAAAAOEmAAAAAAAA4iYAAAAAAAAAAAAAqSYAAAAAAACqJgAAAAAAAAAAAADAIwAAAAAAAMEjAAAAAAAAAAAAAOQmAAAAAAAA5SYAAAAAAAAAAAAAqyYAAAAAAACsJgAAAAAAAAAAAADBIwAAAAAAAMIjAAAAAAAAAAAAAOcmAAAAAAAA6CYAAAAAAAAAAAAArSYAAAAAAACuJgAAAAAAAAAAAADCIwAAAAAAAMMjAAAAAAAAAAAAAOomAAAAAAAA6yYAAAAAAAAAAAAAryYAAAAAAACwJgAAAAAAAAAAAADDIwAAAAAAAMQjAAAAAAAAAAAAAO0mAAAAAAAA7iYAAAAAAAAAAAAAsSYAAAAAAACyJgAAAAAAAAAAAADEIwAAAAAAAMUjAAAAAAAAAAAAAPAmAAAAAAAA8SYAAAAAAAAAAAAAsyYAAAAAAAC0JgAAAAAAAAAAAADFIwAAAAAAAMYjAAAAAAAAAAAAAPMmAAAAAAAA9CYAAAAAAAAAAAAAtSYAAAAAAAC2JgAAAAAAAAAAAADGIwAAAAAAAMcjAAAAAAAAAAAAAPYmAAAAAAAA9yYAAAAAAAAAAAAAtyYAAAAAAAC4JgAAAAAAAAAAAADHIwAAAAAAAMgjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAL0jAAAAAAAAvSMAAAAAAAAAAAAAAADwv6MmAAAAAAAAoyYAAAAAAAAAAAAAAADwv9gmAAAAAAAA2CYAAAAAAAAAAAAAAADwvw"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAPkmAAAAAAAA+iYAAAAAAAAAAAAAuSYAAAAAAAC6JgAAAAAAAAAAAADIIwAAAAAAAMkjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAMgjAAAAAAAAyCMAAAAAAAAAAAAAAADwv7kmAAAAAAAAuSYAAAAAAAAAAAAAAADwv/kmAAAAAAAA+SYAAAAAAAAAAAAAAADwvw"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "grid_"
					},
					"DwAAAPwmAAAAAAAA/SYAAAAAAAAAAAAAuyYAAAAAAAC8JgAAAAAAAAAAAADJIwAAAAAAAMojAAAAAAAAAAAAAP8mAAAAAAAAACcAAAAAAAAAAAAAvSYAAAAAAAC+JgAAAAAAAAAAAADKIwAAAAAAAMsjAAAAAAAAAAAAAAInAAAAAAAAAycAAAAAAAAAAAAAvyYAAAAAAADAJgAAAAAAAAAAAADLIwAAAAAAAMwjAAAAAAAAAAAAAAUnAAAAAAAABicAAAAAAAAAAAAAwSYAAAAAAADCJgAAAAAAAAAAAADMIwAAAAAAAM0jAAAAAAAAAAAAAAgnAAAAAAAACScAAAAAAAAAAAAAwyYAAAAAAADEJgAAAAAAAAAAAADNIwAAAAAAAM4jAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAMkjAAAAAAAAySMAAAAAAAAAAAAAAADwv7smAAAAAAAAuyYAAAAAAAAAAAAAAADwv/wmAAAAAAAA/CYAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "cell_size"
					},
					"GwAAAAsnAAAAAAAADCcAAAAAAAAAAAAAxSYAAAAAAADGJgAAAAAAAAAAAADOIwAAAAAAAM8jAAAAAAAAAAAAAA4nAAAAAAAADycAAAAAAAAAAAAAxyYAAAAAAADIJgAAAAAAAAAAAADPIwAAAAAAANAjAAAAAAAAAAAAABEnAAAAAAAAEicAAAAAAAAAAAAAySYAAAAAAADKJgAAAAAAAAAAAADQIwAAAAAAANEjAAAAAAAAAAAAABQnAAAAAAAAFScAAAAAAAAAAAAAyyYAAAAAAADMJgAAAAAAAAAAAADRIwAAAAAAANIjAAAAAAAAAAAAABcnAAAAAAAAGCcAAAAAAAAAAAAAzSYAAAAAAADOJgAAAAAAAAAAAADSIwAAAAAAANMjAAAAAAAAAAAAABonAAAAAAAAGycAAAAAAAAAAAAAzyYAAAAAAADQJgAAAAAAAAAAAADTIwAAAAAAANQjAAAAAAAAAAAAAB0nAAAAAAAAHicAAAAAAAAAAAAA0SYAAAAAAADSJgAAAAAAAAAAAADUIwAAAAAAANUjAAAAAAAAAAAAACAnAAAAAAAAIScAAAAAAAAAAAAA0yYAAAAAAADUJgAAAAAAAAAAAADVIwAAAAAAANYjAAAAAAAAAAAAACMnAAAAAAAAJCcAAAAAAAAAAAAA1SYAAAAAAADWJgAAAAAAAAAAAADWIwAAAAAAANcjAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAAM4jAAAAAAAAziMAAAAAAAAAAAAAAADwv8UmAAAAAAAAxSYAAAAAAAAAAAAAAADwvwsnAAAAAAAACycAAAAAAAAAAAAAAADwvw"
				],
				[
					279,
					1,
					"left_delete",
					null,
					"AQAAACsnAAAAAAAAKycAAAAAAAASAAAAZHJhd19hcnJvd19vbl9ncmlk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsnAAAAAAAAPScAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAHYjAAAAAAAAdyMAAAAAAAAAAAAAdyMAAAAAAAB4IwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYjAAAAAAAAdiMAAAAAAAAAAAAAAADwvw"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAHgjAAAAAAAAeSMAAAAAAAAAAAAAeSMAAAAAAAB6IwAAAAAAAAAAAAB6IwAAAAAAAHsjAAAAAAAAAAAAAHsjAAAAAAAAfCMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgjAAAAAAAAeCMAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABQjAAAAAAAAFSMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQjAAAAAAAAFCMAAAAAAAAAAAAAAADwvw"
				],
				[
					296,
					1,
					"paste",
					null,
					"AQAAABUjAAAAAAAA/SMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUjAAAAAAAAFSMAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "color,"
					},
					"BgAAALgnAAAAAAAAuScAAAAAAAAAAAAAuScAAAAAAAC6JwAAAAAAAAAAAAC6JwAAAAAAALsnAAAAAAAAAAAAALsnAAAAAAAAvCcAAAAAAAAAAAAAvCcAAAAAAAC9JwAAAAAAAAAAAAC9JwAAAAAAAL4nAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgnAAAAAAAAuCcAAAAAAAAAAAAAAADwvw"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4nAAAAAAAAvycAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4nAAAAAAAAvicAAAAAAAAAAAAAAADwvw"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "color,"
					},
					"BgAAAA4oAAAAAAAADygAAAAAAAAAAAAADygAAAAAAAAQKAAAAAAAAAAAAAAQKAAAAAAAABEoAAAAAAAAAAAAABEoAAAAAAAAEigAAAAAAAAAAAAAEigAAAAAAAATKAAAAAAAAAAAAAATKAAAAAAAABQoAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4oAAAAAAAADigAAAAAAAAAAAAAAADwvw"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQoAAAAAAAAFSgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQoAAAAAAAAFCgAAAAAAAAAAAAAAADwvw"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAIYlAAAAAAAAhyUAAAAAAAAAAAAAhyUAAAAAAACIJQAAAAAAAAAAAACIJQAAAAAAAIklAAAAAAAAAAAAAIklAAAAAAAAiiUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYlAAAAAAAAhiUAAAAAAAAAAAAAAADwvw"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIolAAAAAAAAiyUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIolAAAAAAAAiiUAAAAAAAAAAAAAAADwvw"
				],
				[
					330,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAJAlAAAAAAAAkCUAAAAAAAABAAAAMI8lAAAAAAAAjyUAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJElAAAAAAAAkSUAAAAAAAAAAAAAAADwvw"
				],
				[
					331,
					2,
					"left_delete",
					null,
					"AgAAAI4lAAAAAAAAjiUAAAAAAAABAAAAMI0lAAAAAAAAjSUAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8lAAAAAAAAjyUAAAAAAAAAAAAAAADwvw"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "0.2"
					},
					"AwAAAI0lAAAAAAAAjiUAAAAAAAAAAAAAjiUAAAAAAACPJQAAAAAAAAAAAACPJQAAAAAAAJAlAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0lAAAAAAAAjSUAAAAAAAAAAAAAAADwvw"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKIkAAAAAAAAoyQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIkAAAAAAAAoiQAAAAAAAAAAAAAAADwvw"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": " thickness,"
					},
					"CwAAAKMkAAAAAAAApCQAAAAAAAAAAAAApCQAAAAAAAClJAAAAAAAAAAAAAClJAAAAAAAAKYkAAAAAAAAAAAAAKYkAAAAAAAApyQAAAAAAAAAAAAApyQAAAAAAACoJAAAAAAAAAAAAACoJAAAAAAAAKkkAAAAAAAAAAAAAKkkAAAAAAAAqiQAAAAAAAAAAAAAqiQAAAAAAACrJAAAAAAAAAAAAACrJAAAAAAAAKwkAAAAAAAAAAAAAKwkAAAAAAAArSQAAAAAAAAAAAAArSQAAAAAAACuJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMkAAAAAAAAoyQAAAAAAAAAAAAAAADwvw"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": " color,"
					},
					"BwAAAK4kAAAAAAAAryQAAAAAAAAAAAAAryQAAAAAAACwJAAAAAAAAAAAAACwJAAAAAAAALEkAAAAAAAAAAAAALEkAAAAAAAAsiQAAAAAAAAAAAAAsiQAAAAAAACzJAAAAAAAAAAAAACzJAAAAAAAALQkAAAAAAAAAAAAALQkAAAAAAAAtSQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4kAAAAAAAAriQAAAAAAAAAAAAAAADwvw"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " grid_cell_"
					},
					"CwAAALUkAAAAAAAAtiQAAAAAAAAAAAAAtiQAAAAAAAC3JAAAAAAAAAAAAAC3JAAAAAAAALgkAAAAAAAAAAAAALgkAAAAAAAAuSQAAAAAAAAAAAAAuSQAAAAAAAC6JAAAAAAAAAAAAAC6JAAAAAAAALskAAAAAAAAAAAAALskAAAAAAAAvCQAAAAAAAAAAAAAvCQAAAAAAAC9JAAAAAAAAAAAAAC9JAAAAAAAAL4kAAAAAAAAAAAAAL4kAAAAAAAAvyQAAAAAAAAAAAAAvyQAAAAAAADAJAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUkAAAAAAAAtSQAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": "sew"
					},
					"AwAAAMAkAAAAAAAAwSQAAAAAAAAAAAAAwSQAAAAAAADCJAAAAAAAAAAAAADCJAAAAAAAAMMkAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAkAAAAAAAAwCQAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					2,
					"left_delete",
					null,
					"AgAAAMIkAAAAAAAAwiQAAAAAAAABAAAAd8EkAAAAAAAAwSQAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMkAAAAAAAAwyQAAAAAAAAAAAAAAADwvw"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "ize"
					},
					"AwAAAMEkAAAAAAAAwiQAAAAAAAAAAAAAwiQAAAAAAADDJAAAAAAAAAAAAADDJAAAAAAAAMQkAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEkAAAAAAAAwSQAAAAAAAAAAAAAAADwvw"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "\nmath."
					},
					"BgAAABMlAAAAAAAAGCUAAAAAAAAAAAAAGCUAAAAAAAAZJQAAAAAAAAAAAAAZJQAAAAAAABolAAAAAAAAAAAAABolAAAAAAAAGyUAAAAAAAAAAAAAGyUAAAAAAAAcJQAAAAAAAAAAAAAcJQAAAAAAAB0lAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMlAAAAAAAAEyUAAAAAAAAAAAAAANCHQA"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": "norm"
					},
					"BAAAAB0lAAAAAAAAHiUAAAAAAAAAAAAAHiUAAAAAAAAfJQAAAAAAAAAAAAAfJQAAAAAAACAlAAAAAAAAAAAAACAlAAAAAAAAISUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0lAAAAAAAAHSUAAAAAAAAAAAAAAADwvw"
				],
				[
					352,
					5,
					"delete_word",
					{
						"forward": false
					},
					"BQAAAB0lAAAAAAAAHSUAAAAAAAAEAAAAbm9ybRwlAAAAAAAAHCUAAAAAAAABAAAALhglAAAAAAAAGCUAAAAAAAAEAAAAbWF0aBQlAAAAAAAAFCUAAAAAAAAEAAAAICAgIBMlAAAAAAAAEyUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACElAAAAAAAAISUAAAAAAAAAAAAAAADwvw"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "\nimport\"core:"
					},
					"DQAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAADwvw"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "la"
					},
					"AgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAADwvw"
				],
				[
					363,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAC8AAAAAAAAALwAAAAAAAAACAAAAbGEuAAAAAAAAAC4AAAAAAAAAAQAAADo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAADwvw"
				],
				[
					364,
					5,
					"left_delete",
					null,
					"BQAAAC0AAAAAAAAALQAAAAAAAAABAAAAZSwAAAAAAAAALAAAAAAAAAABAAAAcisAAAAAAAAAKwAAAAAAAAABAAAAbyoAAAAAAAAAKgAAAAAAAAABAAAAYykAAAAAAAAAKQAAAAAAAAABAAAAIg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAADwvw"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					366,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACoAAAAAAAAALAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAADwvw"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "core:marg"
					},
					"CQAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					2,
					"left_delete",
					null,
					"AgAAADMAAAAAAAAAMwAAAAAAAAABAAAAZzIAAAAAAAAAMgAAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQAAAAAAAAANAAAAAAAAAAAAAAAAADwvw"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "th/la"
					},
					"BQAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAADwvw"
				],
				[
					370,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":5,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "linalg"
					},
					"AgAAADUAAAAAAAAANQAAAAAAAAACAAAAbGE1AAAAAAAAADsAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcAAAAAAAAANwAAAAAAAAAAAAAAAADwvw"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADwAAAAAAAAAPQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAADwvw"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "linalg"
					},
					"BgAAAD8lAAAAAAAAQCUAAAAAAAAEAAAAbWF0aEAlAAAAAAAAQSUAAAAAAAAAAAAAQSUAAAAAAABCJQAAAAAAAAAAAABCJQAAAAAAAEMlAAAAAAAAAAAAAEMlAAAAAAAARCUAAAAAAAAAAAAARCUAAAAAAABFJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8lAAAAAAAAQyUAAAAAAAAAAAAAAADwvw"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "\ndir_noem"
					},
					"CQAAAC4lAAAAAAAAMyUAAAAAAAAAAAAAMyUAAAAAAAA0JQAAAAAAAAAAAAA0JQAAAAAAADUlAAAAAAAAAAAAADUlAAAAAAAANiUAAAAAAAAAAAAANiUAAAAAAAA3JQAAAAAAAAAAAAA3JQAAAAAAADglAAAAAAAAAAAAADglAAAAAAAAOSUAAAAAAAAAAAAAOSUAAAAAAAA6JQAAAAAAAAAAAAA6JQAAAAAAADslAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4lAAAAAAAALiUAAAAAAAAAAAAAAADwvw"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAADslAAAAAAAAPCUAAAAAAAAAAAAAPCUAAAAAAAA9JQAAAAAAAAAAAAA9JQAAAAAAAD4lAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADslAAAAAAAAOyUAAAAAAAAAAAAAAADwvw"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAD4lAAAAAAAAPyUAAAAAAAAAAAAAPyUAAAAAAABAJQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4lAAAAAAAAPiUAAAAAAAAAAAAAAADwvw"
				],
				[
					393,
					1,
					"left_delete",
					null,
					"AQAAADklAAAAAAAAOSUAAAAAAAABAAAAZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADolAAAAAAAAOiUAAAAAAAAAAAAAAADwvw"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAADklAAAAAAAAOiUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADklAAAAAAAAOSUAAAAAAAAAAAAAAADwvw"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "[2]f32{"
					},
					"BwAAAD8lAAAAAAAAQCUAAAAAAAAAAAAAQCUAAAAAAABBJQAAAAAAAAAAAABBJQAAAAAAAEIlAAAAAAAAAAAAAEIlAAAAAAAAQyUAAAAAAAAAAAAAQyUAAAAAAABEJQAAAAAAAAAAAABEJQAAAAAAAEUlAAAAAAAAAAAAAEUlAAAAAAAARiUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8lAAAAAAAAPyUAAAAAAAAAAAAAAADwvw"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": ",1}"
					},
					"AwAAAEclAAAAAAAASCUAAAAAAAAAAAAASCUAAAAAAABJJQAAAAAAAAAAAABJJQAAAAAAAEolAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEclAAAAAAAARyUAAAAAAAAAAAAAAADwvw"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAGYlAAAAAAAAZyUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYlAAAAAAAAZiUAAAAAAAAAAAAAAIBzQA"
				],
				[
					402,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAE8lAAAAAAAAUiUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGclAAAAAAAAZyUAAAAAAAAAAAAAAADwvw"
				],
				[
					408,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"IgAAAIgoAAAAAAAAiygAAAAAAAAAAAAAMigAAAAAAAA1KAAAAAAAAAAAAADdJwAAAAAAAOAnAAAAAAAAAAAAAK4nAAAAAAAAsScAAAAAAAAAAAAApycAAAAAAACqJwAAAAAAAAAAAABUJwAAAAAAAFcnAAAAAAAAAAAAAAEnAAAAAAAABCcAAAAAAAAAAAAA7CYAAAAAAADvJgAAAAAAAAAAAADNJgAAAAAAANAmAAAAAAAAAAAAAMYmAAAAAAAAySYAAAAAAAAAAAAAdSYAAAAAAAB4JgAAAAAAAAAAAAAkJgAAAAAAACcmAAAAAAAAAAAAABAmAAAAAAAAEyYAAAAAAAAAAAAA8SUAAAAAAAD0JQAAAAAAAAAAAADUJQAAAAAAANclAAAAAAAAAAAAAKglAAAAAAAAqyUAAAAAAAAAAAAAdiUAAAAAAAB5JQAAAAAAAAAAAABLJQAAAAAAAE4lAAAAAAAAAAAAAC8lAAAAAAAAMiUAAAAAAAAAAAAAGCUAAAAAAAAbJQAAAAAAAAAAAADiJAAAAAAAAOUkAAAAAAAAAAAAAJ0kAAAAAAAAoCQAAAAAAAAAAAAAhCQAAAAAAACHJAAAAAAAAAAAAAAaJAAAAAAAAB0kAAAAAAAAAAAAABYkAAAAAAAAGSQAAAAAAAAAAAAAAyQAAAAAAAAGJAAAAAAAAAAAAADZIwAAAAAAANwjAAAAAAAAAAAAANcjAAAAAAAA2iMAAAAAAAAAAAAApiMAAAAAAACpIwAAAAAAAAAAAACjIwAAAAAAAKYjAAAAAAAAAAAAAJAjAAAAAAAAkyMAAAAAAAAAAAAAZCMAAAAAAABnIwAAAAAAAAAAAABiIwAAAAAAAGUjAAAAAAAAAAAAADEjAAAAAAAANCMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAjAAAAAAAAjCgAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"IgAAAOsoAAAAAAAA6ygAAAAAAAADAAAALy8gkigAAAAAAACSKAAAAAAAAAMAAAAvLyA6KAAAAAAAADooAAAAAAAAAwAAAC8vIAgoAAAAAAAACCgAAAAAAAADAAAALy8g/icAAAAAAAD+JwAAAAAAAAMAAAAvLyCoJwAAAAAAAKgnAAAAAAAAAwAAAC8vIFInAAAAAAAAUicAAAAAAAADAAAALy8gOicAAAAAAAA6JwAAAAAAAAMAAAAvLyAYJwAAAAAAABgnAAAAAAAAAwAAAC8vIA4nAAAAAAAADicAAAAAAAADAAAALy8guiYAAAAAAAC6JgAAAAAAAAMAAAAvLyBmJgAAAAAAAGYmAAAAAAAAAwAAAC8vIE8mAAAAAAAATyYAAAAAAAADAAAALy8gLSYAAAAAAAAtJgAAAAAAAAMAAAAvLyANJgAAAAAAAA0mAAAAAAAAAwAAAC8vIN4lAAAAAAAA3iUAAAAAAAADAAAALy8gqSUAAAAAAACpJQAAAAAAAAMAAAAvLyB7JQAAAAAAAHslAAAAAAAAAwAAAC8vIFwlAAAAAAAAXCUAAAAAAAADAAAALy8gQiUAAAAAAABCJQAAAAAAAAMAAAAvLyAJJQAAAAAAAAklAAAAAAAAAwAAAC8vIMEkAAAAAAAAwSQAAAAAAAADAAAALy8gpSQAAAAAAAClJAAAAAAAAAMAAAAvLyA4JAAAAAAAADgkAAAAAAAAAwAAAC8vIDEkAAAAAAAAMSQAAAAAAAADAAAALy8gGyQAAAAAAAAbJAAAAAAAAAMAAAAvLyDuIwAAAAAAAO4jAAAAAAAAAwAAAC8vIOkjAAAAAAAA6SMAAAAAAAADAAAALy8gtSMAAAAAAAC1IwAAAAAAAAMAAAAvLyCvIwAAAAAAAK8jAAAAAAAAAwAAAC8vIJkjAAAAAAAAmSMAAAAAAAADAAAALy8gaiMAAAAAAABqIwAAAAAAAAMAAAAvLyBlIwAAAAAAAGUjAAAAAAAAAwAAAC8vIDEjAAAAAAAAMSMAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwIwAAAAAAAPIoAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAE8lAAAAAAAATyUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnJQAAAAAAAGclAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAADMlAAAAAAAANiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIJQAAAAAAAEglAAAAAAAAAAAAAAAQckA"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAGklAAAAAAAAaSUAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqJQAAAAAAAGolAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAO0lAAAAAAAA7SUAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuJQAAAAAAAO4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAO0lAAAAAAAA7iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtJQAAAAAAAO0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\nactual_pos"
					},
					"DAAAAPMLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAD1CwAAAAAAAAAAAAD1CwAAAAAAAPYLAAAAAAAAAAAAAPYLAAAAAAAA9wsAAAAAAAAAAAAA9wsAAAAAAAD4CwAAAAAAAAAAAAD4CwAAAAAAAPkLAAAAAAAAAAAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA+gsAAAAAAAD7CwAAAAAAAAAAAAD7CwAAAAAAAPwLAAAAAAAAAAAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA/QsAAAAAAAD+CwAAAAAAAAAAAAD+CwAAAAAAAP8LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wsAAAAAAADzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "_to_grid_pos"
					},
					"DAAAAP8LAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAIMAAAAAAAAAAAAAAIMAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAACQwAAAAAAAAAAAAACQwAAAAAAAAKDAAAAAAAAAAAAAAKDAAAAAAAAAsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wsAAAAAAAD/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAAsMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAANDAAAAAAAAAAAAAANDAAAAAAAAA4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwwAAAAAAAALDAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAAA4MAAAAAAAADwwAAAAAAAAAAAAADwwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABEMAAAAAAAAAAAAABEMAAAAAAAAEgwAAAAAAAAAAAAAEgwAAAAAAAATDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgwAAAAAAAAODAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABMMAAAAAAAAFQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwwAAAAAAAATDAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "actual_pos"
					},
					"CgAAABQMAAAAAAAAFQwAAAAAAAAAAAAAFQwAAAAAAAAWDAAAAAAAAAAAAAAWDAAAAAAAABcMAAAAAAAAAAAAABcMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAZDAAAAAAAAAAAAAAZDAAAAAAAABoMAAAAAAAAAAAAABoMAAAAAAAAGwwAAAAAAAAAAAAAGwwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAB0MAAAAAAAAAAAAAB0MAAAAAAAAHgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAB4MAAAAAAAAHwwAAAAAAAAAAAAAHwwAAAAAAAAgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgwAAAAAAAAeDAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAMAAAAAAAAIQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAwAAAAAAAAgDAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACEMAAAAAAAAIwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQwAAAAAAAAhDAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAACIMAAAAAAAAIwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgwAAAAAAAAiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "f32,"
					},
					"BAAAACQMAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAmDAAAAAAAAAAAAAAmDAAAAAAAACcMAAAAAAAAAAAAACcMAAAAAAAAKAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " cell_size"
					},
					"CgAAACgMAAAAAAAAKQwAAAAAAAAAAAAAKQwAAAAAAAAqDAAAAAAAAAAAAAAqDAAAAAAAACsMAAAAAAAAAAAAACsMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAtDAAAAAAAAAAAAAAtDAAAAAAAAC4MAAAAAAAAAAAAAC4MAAAAAAAALwwAAAAAAAAAAAAALwwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADEMAAAAAAAAAAAAADEMAAAAAAAAMgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAADIMAAAAAAAAMwwAAAAAAAAAAAAAMwwAAAAAAAA0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgwAAAAAAAAyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAADQMAAAAAAAANQwAAAAAAAAAAAAANQwAAAAAAAA2DAAAAAAAAAAAAAA2DAAAAAAAADcMAAAAAAAAAAAAADcMAAAAAAAAOAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAwAAAAAAAA0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAADkMAAAAAAAAOgwAAAAAAAAAAAAAOgwAAAAAAAA7DAAAAAAAAAAAAAA7DAAAAAAAADwMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQwAAAAAAAA5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwMAAAAAAAAPQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAwAAAAAAAA8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD0MAAAAAAAAPwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQwAAAAAAAA9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAD4MAAAAAAAAPwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "f32"
					},
					"AwAAAEAMAAAAAAAAQQwAAAAAAAAAAAAAQQwAAAAAAABCDAAAAAAAAAAAAABCDAAAAAAAAEMMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAwAAAAAAABADAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEMMAAAAAAAARAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwwAAAAAAABDDAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEQMAAAAAAAARgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAwAAAAAAABEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEUMAAAAAAAARgwAAAAAAAAAAAAARgwAAAAAAABHDAAAAAAAAAAAAABGDAAAAAAAAEoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQwAAAAAAABFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAE0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgwAAAAAAABKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " actual"
					},
					"BwAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABPDAAAAAAAAAAAAABPDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAUQwAAAAAAAAAAAAAUQwAAAAAAABSDAAAAAAAAAAAAABSDAAAAAAAAFMMAAAAAAAAAAAAAFMMAAAAAAAAVAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQwAAAAAAABNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAE4MAAAAAAAATgwAAAAAAAAGAAAAYWN0dWFsSgwAAAAAAABKDAAAAAAAAAQAAAByZXQg",
					"AQAAAAAAAAABAAAAVAwAAAAAAABUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAE0MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgwAAAAAAABKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAE0MAAAAAAAATgwAAAAAAAAAAAAATgwAAAAAAABPDAAAAAAAAAAAAABPDAAAAAAAAFAMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQwAAAAAAABNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " actual_pos"
					},
					"CwAAAFAMAAAAAAAAUQwAAAAAAAAAAAAAUQwAAAAAAABSDAAAAAAAAAAAAABSDAAAAAAAAFMMAAAAAAAAAAAAAFMMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABVDAAAAAAAAAAAAABVDAAAAAAAAFYMAAAAAAAAAAAAAFYMAAAAAAAAVwwAAAAAAAAAAAAAVwwAAAAAAABYDAAAAAAAAAAAAABYDAAAAAAAAFkMAAAAAAAAAAAAAFkMAAAAAAAAWgwAAAAAAAAAAAAAWgwAAAAAAABbDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAFsMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABdDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwwAAAAAAABbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " grid_pos"
					},
					"CQAAAF0MAAAAAAAAXgwAAAAAAAAAAAAAXgwAAAAAAABfDAAAAAAAAAAAAABfDAAAAAAAAGAMAAAAAAAAAAAAAGAMAAAAAAAAYQwAAAAAAAAAAAAAYQwAAAAAAABiDAAAAAAAAAAAAABiDAAAAAAAAGMMAAAAAAAAAAAAAGMMAAAAAAAAZAwAAAAAAAAAAAAAZAwAAAAAAABlDAAAAAAAAAAAAABlDAAAAAAAAGYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQwAAAAAAABdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAF4MAAAAAAAAXgwAAAAAAAAIAAAAZ3JpZF9wb3M",
					"AQAAAAAAAAABAAAAZgwAAAAAAABmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "cell_size"
					},
					"CQAAAF4MAAAAAAAAXwwAAAAAAAAAAAAAXwwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGEMAAAAAAAAAAAAAGEMAAAAAAAAYgwAAAAAAAAAAAAAYgwAAAAAAABjDAAAAAAAAAAAAABjDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAZQwAAAAAAAAAAAAAZQwAAAAAAABmDAAAAAAAAAAAAABmDAAAAAAAAGcMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgwAAAAAAABeDAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"BwAAAGcMAAAAAAAAbAwAAAAAAAAAAAAAbAwAAAAAAABtDAAAAAAAAAAAAABtDAAAAAAAAG4MAAAAAAAAAAAAAG4MAAAAAAAAbwwAAAAAAAAAAAAAbwwAAAAAAABwDAAAAAAAAAAAAABwDAAAAAAAAHEMAAAAAAAAAAAAAHEMAAAAAAAAcgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwwAAAAAAABnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAHIMAAAAAAAAcwwAAAAAAAAAAAAAcwwAAAAAAAB0DAAAAAAAAAAAAAB0DAAAAAAAAHUMAAAAAAAAAAAAAHUMAAAAAAAAdgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "source/game.odin",
			"redo_stack":
			[
				[
					7607,
					1,
					"insert",
					{
						"characters": " //"
					},
					"RQAAANYAAAAAAAAA1gAAAAAAAAABAAAALyQBAAAAAAAAJAEAAAAAAAABAAAAL3ABAAAAAAAAcAEAAAAAAAABAAAAL7gBAAAAAAAAuAEAAAAAAAABAAAAL/wBAAAAAAAA/AEAAAAAAAABAAAALzoCAAAAAAAAOgIAAAAAAAABAAAAL3cCAAAAAAAAdwIAAAAAAAABAAAAL7ACAAAAAAAAsAIAAAAAAAABAAAAL+0CAAAAAAAA7QIAAAAAAAABAAAALysDAAAAAAAAKwMAAAAAAAABAAAAL28DAAAAAAAAbwMAAAAAAAABAAAAL7sDAAAAAAAAuwMAAAAAAAABAAAALwIEAAAAAAAAAgQAAAAAAAABAAAAL0wEAAAAAAAATAQAAAAAAAABAAAAL6IEAAAAAAAAogQAAAAAAAABAAAAL/cEAAAAAAAA9wQAAAAAAAABAAAAL0wFAAAAAAAATAUAAAAAAAABAAAAL44FAAAAAAAAjgUAAAAAAAABAAAAL8wFAAAAAAAAzAUAAAAAAAABAAAALxYGAAAAAAAAFgYAAAAAAAABAAAAL28GAAAAAAAAbwYAAAAAAAABAAAAL7QGAAAAAAAAtAYAAAAAAAABAAAALwEHAAAAAAAAAQcAAAAAAAABAAAAL9UAAAAAAAAA1QAAAAAAAAABAAAALyIBAAAAAAAAIgEAAAAAAAABAAAAL20BAAAAAAAAbQEAAAAAAAABAAAAL7QBAAAAAAAAtAEAAAAAAAABAAAAL/cBAAAAAAAA9wEAAAAAAAABAAAALzQCAAAAAAAANAIAAAAAAAABAAAAL3ACAAAAAAAAcAIAAAAAAAABAAAAL6gCAAAAAAAAqAIAAAAAAAABAAAAL+QCAAAAAAAA5AIAAAAAAAABAAAALyEDAAAAAAAAIQMAAAAAAAABAAAAL2QDAAAAAAAAZAMAAAAAAAABAAAAL68DAAAAAAAArwMAAAAAAAABAAAAL/UDAAAAAAAA9QMAAAAAAAABAAAALz4EAAAAAAAAPgQAAAAAAAABAAAAL5MEAAAAAAAAkwQAAAAAAAABAAAAL+cEAAAAAAAA5wQAAAAAAAABAAAALzsFAAAAAAAAOwUAAAAAAAABAAAAL3wFAAAAAAAAfAUAAAAAAAABAAAAL7kFAAAAAAAAuQUAAAAAAAABAAAALwIGAAAAAAAAAgYAAAAAAAABAAAAL1oGAAAAAAAAWgYAAAAAAAABAAAAL54GAAAAAAAAngYAAAAAAAABAAAAL+oGAAAAAAAA6gYAAAAAAAABAAAAL9QAAAAAAAAA1AAAAAAAAAABAAAAICABAAAAAAAAIAEAAAAAAAABAAAAIGoBAAAAAAAAagEAAAAAAAABAAAAILABAAAAAAAAsAEAAAAAAAABAAAAIPIBAAAAAAAA8gEAAAAAAAABAAAAIC4CAAAAAAAALgIAAAAAAAABAAAAIGkCAAAAAAAAaQIAAAAAAAABAAAAIKACAAAAAAAAoAIAAAAAAAABAAAAINsCAAAAAAAA2wIAAAAAAAABAAAAIBcDAAAAAAAAFwMAAAAAAAABAAAAIFkDAAAAAAAAWQMAAAAAAAABAAAAIKMDAAAAAAAAowMAAAAAAAABAAAAIOgDAAAAAAAA6AMAAAAAAAABAAAAIDAEAAAAAAAAMAQAAAAAAAABAAAAIIQEAAAAAAAAhAQAAAAAAAABAAAAINcEAAAAAAAA1wQAAAAAAAABAAAAICoFAAAAAAAAKgUAAAAAAAABAAAAIGoFAAAAAAAAagUAAAAAAAABAAAAIKYFAAAAAAAApgUAAAAAAAABAAAAIO4FAAAAAAAA7gUAAAAAAAABAAAAIEUGAAAAAAAARQYAAAAAAAABAAAAIIgGAAAAAAAAiAYAAAAAAAABAAAAINMGAAAAAAAA0wYAAAAAAAABAAAAIA",
					"AgAAAAAAAAAXAAAA1wAAAAAAAADXAAAAAAAAAAAAAAAAAPC/JgEAAAAAAAAmAQAAAAAAAAAAAAAAAPC/cwEAAAAAAABzAQAAAAAAAAAAAAAAAPC/vAEAAAAAAAC8AQAAAAAAAAAAAAAAAPC/AQIAAAAAAAABAgAAAAAAAAAAAAAAAPC/QAIAAAAAAABAAgAAAAAAAAAAAAAAAPC/fgIAAAAAAAB+AgAAAAAAAAAAAAAAAPC/uAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/9gIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/NQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/egMAAAAAAAB6AwAAAAAAAAAAAAAAAPC/xwMAAAAAAADHAwAAAAAAAAAAAAAAAPC/DwQAAAAAAAAPBAAAAAAAAAAAAAAAAPC/WgQAAAAAAABaBAAAAAAAAAAAAAAAAPC/sQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/BwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/XQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/oAUAAAAAAACgBQAAAAAAAAAAAAAAAPC/3wUAAAAAAADfBQAAAAAAAAAAAAAAAPC/KgYAAAAAAAAqBgAAAAAAAAAAAAAAAPC/hAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/ygYAAAAAAADKBgAAAAAAAAAAAAAAAPC/GAcAAAAAAAAYBwAAAAAAAAAAAAAAAPC/AQAAAAEAAAAmBAAAAAAAACYEAAAAAAAAAAAAAAAA8L8"
				],
				[
					7606,
					1,
					"insert",
					{
						"characters": "{1}"
					},
					"RQAAANMAAAAAAAAA0wAAAAAAAAABAAAAfR4BAAAAAAAAHgEAAAAAAAABAAAAfWcBAAAAAAAAZwEAAAAAAAABAAAAfawBAAAAAAAArAEAAAAAAAABAAAAfe0BAAAAAAAA7QEAAAAAAAABAAAAfSgCAAAAAAAAKAIAAAAAAAABAAAAfWICAAAAAAAAYgIAAAAAAAABAAAAfZgCAAAAAAAAmAIAAAAAAAABAAAAfdICAAAAAAAA0gIAAAAAAAABAAAAfQ0DAAAAAAAADQMAAAAAAAABAAAAfU4DAAAAAAAATgMAAAAAAAABAAAAfZcDAAAAAAAAlwMAAAAAAAABAAAAfdsDAAAAAAAA2wMAAAAAAAABAAAAfSIEAAAAAAAAIgQAAAAAAAABAAAAfXUEAAAAAAAAdQQAAAAAAAABAAAAfccEAAAAAAAAxwQAAAAAAAABAAAAfRkFAAAAAAAAGQUAAAAAAAABAAAAfVgFAAAAAAAAWAUAAAAAAAABAAAAfZMFAAAAAAAAkwUAAAAAAAABAAAAfdoFAAAAAAAA2gUAAAAAAAABAAAAfTAGAAAAAAAAMAYAAAAAAAABAAAAfXIGAAAAAAAAcgYAAAAAAAABAAAAfbwGAAAAAAAAvAYAAAAAAAABAAAAfdIAAAAAAAAA0gAAAAAAAAABAAAAMRwBAAAAAAAAHAEAAAAAAAABAAAAMWQBAAAAAAAAZAEAAAAAAAABAAAAMagBAAAAAAAAqAEAAAAAAAABAAAAMegBAAAAAAAA6AEAAAAAAAABAAAAMSICAAAAAAAAIgIAAAAAAAABAAAAMVsCAAAAAAAAWwIAAAAAAAABAAAAMZACAAAAAAAAkAIAAAAAAAABAAAAMckCAAAAAAAAyQIAAAAAAAABAAAAMQMDAAAAAAAAAwMAAAAAAAABAAAAMUMDAAAAAAAAQwMAAAAAAAABAAAAMYsDAAAAAAAAiwMAAAAAAAABAAAAMc4DAAAAAAAAzgMAAAAAAAABAAAAMRQEAAAAAAAAFAQAAAAAAAABAAAAMWYEAAAAAAAAZgQAAAAAAAABAAAAMbcEAAAAAAAAtwQAAAAAAAABAAAAMQgFAAAAAAAACAUAAAAAAAABAAAAMUYFAAAAAAAARgUAAAAAAAABAAAAMYAFAAAAAAAAgAUAAAAAAAABAAAAMcYFAAAAAAAAxgUAAAAAAAABAAAAMRsGAAAAAAAAGwYAAAAAAAABAAAAMVwGAAAAAAAAXAYAAAAAAAABAAAAMaUGAAAAAAAApQYAAAAAAAABAAAAMdEAAAAAAAAA0QAAAAAAAAABAAAAexoBAAAAAAAAGgEAAAAAAAABAAAAe2EBAAAAAAAAYQEAAAAAAAABAAAAe6QBAAAAAAAApAEAAAAAAAABAAAAe+MBAAAAAAAA4wEAAAAAAAABAAAAexwCAAAAAAAAHAIAAAAAAAABAAAAe1QCAAAAAAAAVAIAAAAAAAABAAAAe4gCAAAAAAAAiAIAAAAAAAABAAAAe8ACAAAAAAAAwAIAAAAAAAABAAAAe/kCAAAAAAAA+QIAAAAAAAABAAAAezgDAAAAAAAAOAMAAAAAAAABAAAAe38DAAAAAAAAfwMAAAAAAAABAAAAe8EDAAAAAAAAwQMAAAAAAAABAAAAewYEAAAAAAAABgQAAAAAAAABAAAAe1cEAAAAAAAAVwQAAAAAAAABAAAAe6cEAAAAAAAApwQAAAAAAAABAAAAe/cEAAAAAAAA9wQAAAAAAAABAAAAezQFAAAAAAAANAUAAAAAAAABAAAAe20FAAAAAAAAbQUAAAAAAAABAAAAe7IFAAAAAAAAsgUAAAAAAAABAAAAewYGAAAAAAAABgYAAAAAAAABAAAAe0YGAAAAAAAARgYAAAAAAAABAAAAe44GAAAAAAAAjgYAAAAAAAABAAAAew",
					"AgAAAAAAAAAXAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAAPC/IAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/agEAAAAAAABqAQAAAAAAAAAAAAAAAPC/sAEAAAAAAACwAQAAAAAAAAAAAAAAAPC/8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/LgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/aQIAAAAAAABpAgAAAAAAAAAAAAAAAPC/oAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/2wIAAAAAAADbAgAAAAAAAAAAAAAAAPC/FwMAAAAAAAAXAwAAAAAAAAAAAAAAAPC/WQMAAAAAAABZAwAAAAAAAAAAAAAAAPC/owMAAAAAAACjAwAAAAAAAAAAAAAAAPC/6AMAAAAAAADoAwAAAAAAAAAAAAAAAPC/MAQAAAAAAAAwBAAAAAAAAAAAAAAAAPC/hAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/1wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/KgUAAAAAAAAqBQAAAAAAAAAAAAAAAPC/agUAAAAAAABqBQAAAAAAAAAAAAAAAPC/pgUAAAAAAACmBQAAAAAAAAAAAAAAAPC/7gUAAAAAAADuBQAAAAAAAAAAAAAAAPC/RQYAAAAAAABFBgAAAAAAAAAAAAAAAPC/iAYAAAAAAACIBgAAAAAAAAAAAAAAAPC/0wYAAAAAAADTBgAAAAAAAAAAAAAAAPC/AQAAAAEAAAD/AwAAAAAAAP8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					7604,
					1,
					"insert",
					{
						"characters": "?"
					},
					"FwAAAM0AAAAAAAAAzQAAAAAAAAABAAAAPxUBAAAAAAAAFQEAAAAAAAABAAAAP1sBAAAAAAAAWwEAAAAAAAABAAAAP50BAAAAAAAAnQEAAAAAAAABAAAAP9sBAAAAAAAA2wEAAAAAAAABAAAAPxMCAAAAAAAAEwIAAAAAAAABAAAAP0oCAAAAAAAASgIAAAAAAAABAAAAP30CAAAAAAAAfQIAAAAAAAABAAAAP7QCAAAAAAAAtAIAAAAAAAABAAAAP+wCAAAAAAAA7AIAAAAAAAABAAAAPyoDAAAAAAAAKgMAAAAAAAABAAAAP3ADAAAAAAAAcAMAAAAAAAABAAAAP7EDAAAAAAAAsQMAAAAAAAABAAAAP/UDAAAAAAAA9QMAAAAAAAABAAAAP0UEAAAAAAAARQQAAAAAAAABAAAAP5QEAAAAAAAAlAQAAAAAAAABAAAAP+MEAAAAAAAA4wQAAAAAAAABAAAAPx8FAAAAAAAAHwUAAAAAAAABAAAAP1cFAAAAAAAAVwUAAAAAAAABAAAAP5sFAAAAAAAAmwUAAAAAAAABAAAAP+4FAAAAAAAA7gUAAAAAAAABAAAAPy0GAAAAAAAALQYAAAAAAAABAAAAP3QGAAAAAAAAdAYAAAAAAAABAAAAPw",
					"AgAAAAAAAAAXAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/FwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/XgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/oQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/GQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/UQIAAAAAAABRAgAAAAAAAAAAAAAAAPC/hQIAAAAAAACFAgAAAAAAAAAAAAAAAPC/vQIAAAAAAAC9AgAAAAAAAAAAAAAAAPC/9gIAAAAAAAD2AgAAAAAAAAAAAAAAAPC/NQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/fAMAAAAAAAB8AwAAAAAAAAAAAAAAAPC/vgMAAAAAAAC+AwAAAAAAAAAAAAAAAPC/AwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/VAQAAAAAAABUBAAAAAAAAAAAAAAAAPC/pAQAAAAAAACkBAAAAAAAAAAAAAAAAPC/9AQAAAAAAAD0BAAAAAAAAAAAAAAAAPC/MQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/agUAAAAAAABqBQAAAAAAAAAAAAAAAPC/rwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/AwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/QwYAAAAAAABDBgAAAAAAAAAAAAAAAPC/iwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/AQAAAAEAAADYAwAAAAAAANgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7602,
					1,
					"insert",
					{
						"characters": "[]u8"
					},
					"XAAAAM8AAAAAAAAAzwAAAAAAAAABAAAAOBYBAAAAAAAAFgEAAAAAAAABAAAAOFsBAAAAAAAAWwEAAAAAAAABAAAAOJwBAAAAAAAAnAEAAAAAAAABAAAAONkBAAAAAAAA2QEAAAAAAAABAAAAOBACAAAAAAAAEAIAAAAAAAABAAAAOEYCAAAAAAAARgIAAAAAAAABAAAAOHgCAAAAAAAAeAIAAAAAAAABAAAAOK4CAAAAAAAArgIAAAAAAAABAAAAOOUCAAAAAAAA5QIAAAAAAAABAAAAOCIDAAAAAAAAIgMAAAAAAAABAAAAOGcDAAAAAAAAZwMAAAAAAAABAAAAOKcDAAAAAAAApwMAAAAAAAABAAAAOOoDAAAAAAAA6gMAAAAAAAABAAAAODkEAAAAAAAAOQQAAAAAAAABAAAAOIcEAAAAAAAAhwQAAAAAAAABAAAAONUEAAAAAAAA1QQAAAAAAAABAAAAOBAFAAAAAAAAEAUAAAAAAAABAAAAOEcFAAAAAAAARwUAAAAAAAABAAAAOIoFAAAAAAAAigUAAAAAAAABAAAAONwFAAAAAAAA3AUAAAAAAAABAAAAOBoGAAAAAAAAGgYAAAAAAAABAAAAOGAGAAAAAAAAYAYAAAAAAAABAAAAOM4AAAAAAAAAzgAAAAAAAAABAAAAdRQBAAAAAAAAFAEAAAAAAAABAAAAdVgBAAAAAAAAWAEAAAAAAAABAAAAdZgBAAAAAAAAmAEAAAAAAAABAAAAddQBAAAAAAAA1AEAAAAAAAABAAAAdQoCAAAAAAAACgIAAAAAAAABAAAAdT8CAAAAAAAAPwIAAAAAAAABAAAAdXACAAAAAAAAcAIAAAAAAAABAAAAdaUCAAAAAAAApQIAAAAAAAABAAAAddsCAAAAAAAA2wIAAAAAAAABAAAAdRcDAAAAAAAAFwMAAAAAAAABAAAAdVsDAAAAAAAAWwMAAAAAAAABAAAAdZoDAAAAAAAAmgMAAAAAAAABAAAAddwDAAAAAAAA3AMAAAAAAAABAAAAdSoEAAAAAAAAKgQAAAAAAAABAAAAdXcEAAAAAAAAdwQAAAAAAAABAAAAdcQEAAAAAAAAxAQAAAAAAAABAAAAdf4EAAAAAAAA/gQAAAAAAAABAAAAdTQFAAAAAAAANAUAAAAAAAABAAAAdXYFAAAAAAAAdgUAAAAAAAABAAAAdccFAAAAAAAAxwUAAAAAAAABAAAAdQQGAAAAAAAABAYAAAAAAAABAAAAdUkGAAAAAAAASQYAAAAAAAABAAAAdc0AAAAAAAAAzQAAAAAAAAABAAAAXRIBAAAAAAAAEgEAAAAAAAABAAAAXVUBAAAAAAAAVQEAAAAAAAABAAAAXZQBAAAAAAAAlAEAAAAAAAABAAAAXc8BAAAAAAAAzwEAAAAAAAABAAAAXQQCAAAAAAAABAIAAAAAAAABAAAAXTgCAAAAAAAAOAIAAAAAAAABAAAAXWgCAAAAAAAAaAIAAAAAAAABAAAAXZwCAAAAAAAAnAIAAAAAAAABAAAAXdECAAAAAAAA0QIAAAAAAAABAAAAXQwDAAAAAAAADAMAAAAAAAABAAAAXU8DAAAAAAAATwMAAAAAAAABAAAAXY0DAAAAAAAAjQMAAAAAAAABAAAAXc4DAAAAAAAAzgMAAAAAAAABAAAAXRsEAAAAAAAAGwQAAAAAAAABAAAAXWcEAAAAAAAAZwQAAAAAAAABAAAAXbMEAAAAAAAAswQAAAAAAAABAAAAXewEAAAAAAAA7AQAAAAAAAABAAAAXSEFAAAAAAAAIQUAAAAAAAABAAAAXWIFAAAAAAAAYgUAAAAAAAABAAAAXbIFAAAAAAAAsgUAAAAAAAABAAAAXe4FAAAAAAAA7gUAAAAAAAABAAAAXTIGAAAAAAAAMgYAAAAAAAABAAAAXcwAAAAAAAAAzAAAAAAAAAABAAAAWxABAAAAAAAAEAEAAAAAAAABAAAAW1IBAAAAAAAAUgEAAAAAAAABAAAAW5ABAAAAAAAAkAEAAAAAAAABAAAAW8oBAAAAAAAAygEAAAAAAAABAAAAW/4BAAAAAAAA/gEAAAAAAAABAAAAWzECAAAAAAAAMQIAAAAAAAABAAAAW2ACAAAAAAAAYAIAAAAAAAABAAAAW5MCAAAAAAAAkwIAAAAAAAABAAAAW8cCAAAAAAAAxwIAAAAAAAABAAAAWwEDAAAAAAAAAQMAAAAAAAABAAAAW0MDAAAAAAAAQwMAAAAAAAABAAAAW4ADAAAAAAAAgAMAAAAAAAABAAAAW8ADAAAAAAAAwAMAAAAAAAABAAAAWwwEAAAAAAAADAQAAAAAAAABAAAAW1cEAAAAAAAAVwQAAAAAAAABAAAAW6IEAAAAAAAAogQAAAAAAAABAAAAW9oEAAAAAAAA2gQAAAAAAAABAAAAWw4FAAAAAAAADgUAAAAAAAABAAAAW04FAAAAAAAATgUAAAAAAAABAAAAW50FAAAAAAAAnQUAAAAAAAABAAAAW9gFAAAAAAAA2AUAAAAAAAABAAAAWxsGAAAAAAAAGwYAAAAAAAABAAAAWw",
					"AgAAAAAAAAAXAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/GAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/XgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/oAEAAAAAAACgAQAAAAAAAAAAAAAAAPC/3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/FgIAAAAAAAAWAgAAAAAAAAAAAAAAAPC/TQIAAAAAAABNAgAAAAAAAAAAAAAAAPC/gAIAAAAAAACAAgAAAAAAAAAAAAAAAPC/twIAAAAAAAC3AgAAAAAAAAAAAAAAAPC/7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/LQMAAAAAAAAtAwAAAAAAAAAAAAAAAPC/cwMAAAAAAABzAwAAAAAAAAAAAAAAAPC/tAMAAAAAAAC0AwAAAAAAAAAAAAAAAPC/+AMAAAAAAAD4AwAAAAAAAAAAAAAAAPC/SAQAAAAAAABIBAAAAAAAAAAAAAAAAPC/lwQAAAAAAACXBAAAAAAAAAAAAAAAAPC/5gQAAAAAAADmBAAAAAAAAAAAAAAAAPC/IgUAAAAAAAAiBQAAAAAAAAAAAAAAAPC/WgUAAAAAAABaBQAAAAAAAAAAAAAAAPC/ngUAAAAAAACeBQAAAAAAAAAAAAAAAPC/8QUAAAAAAADxBQAAAAAAAAAAAAAAAPC/MAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/dwYAAAAAAAB3BgAAAAAAAAAAAAAAAPC/AQAAAAEAAADLAwAAAAAAAMsDAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 70530,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6027,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAFC+AAAAAAAAUb4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUL4AAAAAAABQvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6028,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAAFG+AAAAAAAAUr4AAAAAAAAAAAAAUr4AAAAAAABTvgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUb4AAAAAAABRvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6029,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAFO+AAAAAAAAVL4AAAAAAAAAAAAAVL4AAAAAAABVvgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAU74AAAAAAABTvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6030,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAFW+AAAAAAAAVr4AAAAAAAAAAAAAVr4AAAAAAABXvgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVb4AAAAAAABVvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6032,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFW+AAAAAAAAVr4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVb4AAAAAAABVvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6036,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAJG+AAAAAAAAkb4AAAAAAAAEAAAAQkxVRZC+AAAAAAAAkL4AAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAlb4AAAAAAACVvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6037,
					2,
					"left_delete",
					null,
					"AgAAAI++AAAAAAAAj74AAAAAAAABAAAAbI6+AAAAAAAAjr4AAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAkL4AAAAAAACQvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6038,
					1,
					"insert",
					{
						"characters": "bg_tint"
					},
					"BwAAAI6+AAAAAAAAj74AAAAAAAAAAAAAj74AAAAAAACQvgAAAAAAAAAAAACQvgAAAAAAAJG+AAAAAAAAAAAAAJG+AAAAAAAAkr4AAAAAAAAAAAAAkr4AAAAAAACTvgAAAAAAAAAAAACTvgAAAAAAAJS+AAAAAAAAAAAAAJS+AAAAAAAAlb4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAjr4AAAAAAACOvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6044,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAD2+AAAAAAAAPb4AAAAAAAAEAAAAQkxVRQ",
					"AgAAAAAAAAABAAAAQb4AAAAAAABBvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6045,
					1,
					"insert",
					{
						"characters": "LIGHT"
					},
					"BQAAAD2+AAAAAAAAPr4AAAAAAAAAAAAAPr4AAAAAAAA/vgAAAAAAAAAAAAA/vgAAAAAAAEC+AAAAAAAAAAAAAEC+AAAAAAAAQb4AAAAAAAAAAAAAQb4AAAAAAABCvgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPb4AAAAAAAA9vgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6046,
					2,
					"left_delete",
					null,
					"AgAAAEG+AAAAAAAAQb4AAAAAAAABAAAAVEC+AAAAAAAAQL4AAAAAAAABAAAASA",
					"AgAAAAAAAAABAAAAQr4AAAAAAABCvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6047,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAD2+AAAAAAAAPb4AAAAAAAADAAAATElH",
					"AgAAAAAAAAABAAAAQL4AAAAAAABAvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6048,
					1,
					"insert",
					{
						"characters": "CYAN"
					},
					"BAAAAD2+AAAAAAAAPr4AAAAAAAAAAAAAPr4AAAAAAAA/vgAAAAAAAAAAAAA/vgAAAAAAAEC+AAAAAAAAAAAAAEC+AAAAAAAAQb4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPb4AAAAAAAA9vgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6049,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAD2+AAAAAAAAPb4AAAAAAAAEAAAAQ1lBTg",
					"AgAAAAAAAAABAAAAQb4AAAAAAABBvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6050,
					1,
					"insert",
					{
						"characters": "BLACK"
					},
					"BQAAAD2+AAAAAAAAPr4AAAAAAAAAAAAAPr4AAAAAAAA/vgAAAAAAAAAAAAA/vgAAAAAAAEC+AAAAAAAAAAAAAEC+AAAAAAAAQb4AAAAAAAAAAAAAQb4AAAAAAABCvgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPb4AAAAAAAA9vgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6057,
					1,
					"paste",
					null,
					"AQAAAD2+AAAAAAAARL4AAAAAAAAFAAAAQkxBQ0s",
					"AgAAAAAAAAABAAAAPb4AAAAAAABCvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6063,
					1,
					"left_delete",
					null,
					"AQAAAFq+AAAAAAAAWr4AAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAW74AAAAAAABbvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6064,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAFq+AAAAAAAAW74AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWr4AAAAAAABavgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6065,
					4,
					"left_delete",
					null,
					"BAAAAFq+AAAAAAAAWr4AAAAAAAABAAAANFm+AAAAAAAAWb4AAAAAAAABAAAAIFi+AAAAAAAAWL4AAAAAAAABAAAAPVe+AAAAAAAAV74AAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAW74AAAAAAABbvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6066,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFe+AAAAAAAAWL4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAV74AAAAAAABXvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6067,
					1,
					"insert",
					{
						"characters": " 170"
					},
					"BAAAAFi+AAAAAAAAWb4AAAAAAAAAAAAAWb4AAAAAAABavgAAAAAAAAAAAABavgAAAAAAAFu+AAAAAAAAAAAAAFu+AAAAAAAAXL4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWL4AAAAAAABYvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6072,
					1,
					"insert",
					{
						"characters": "BLACK"
					},
					"BQAAAB++AAAAAAAAIL4AAAAAAAAEAAAAR1JBWSC+AAAAAAAAIb4AAAAAAAAAAAAAIb4AAAAAAAAivgAAAAAAAAAAAAAivgAAAAAAACO+AAAAAAAAAAAAACO+AAAAAAAAJL4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH74AAAAAAAAjvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6086,
					1,
					"insert",
					{
						"characters": "WHITE"
					},
					"BQAAAB++AAAAAAAAIL4AAAAAAAAFAAAAQkxBQ0sgvgAAAAAAACG+AAAAAAAAAAAAACG+AAAAAAAAIr4AAAAAAAAAAAAAIr4AAAAAAAAjvgAAAAAAAAAAAAAjvgAAAAAAACS+AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH74AAAAAAAAkvgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6110,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAD1OAAAAAAAAPk4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPU4AAAAAAAA9TgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6111,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAD5OAAAAAAAAP04AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPk4AAAAAAAA+TgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6118,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAMVaAAAAAAAAyloAAAAAAAAAAAAAyloAAAAAAADPWgAAAAAAAAAAAADGWgAAAAAAAMZaAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAxVoAAAAAAADFWgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6119,
					1,
					"paste",
					null,
					"AQAAAMtaAAAAAAAAS2gAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAy1oAAAAAAADLWgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6142,
					1,
					"insert",
					{
						"characters": "\n2"
					},
					"AgAAAMeCAAAAAAAAyYIAAAAAAAAAAAAAyYIAAAAAAADKggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAx4IAAAAAAADHggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6143,
					1,
					"left_delete",
					null,
					"AQAAAMmCAAAAAAAAyYIAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAyoIAAAAAAADKggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6144,
					1,
					"insert",
					{
						"characters": "@level"
					},
					"BgAAAMmCAAAAAAAAyoIAAAAAAAAAAAAAyoIAAAAAAADLggAAAAAAAAAAAADLggAAAAAAAMyCAAAAAAAAAAAAAMyCAAAAAAAAzYIAAAAAAAAAAAAAzYIAAAAAAADOggAAAAAAAAAAAADOggAAAAAAAM+CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyYIAAAAAAADJggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6145,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMqCAAAAAAAAyoIAAAAAAAAFAAAAbGV2ZWw",
					"AgAAAAAAAAABAAAAz4IAAAAAAADPggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6146,
					1,
					"insert",
					{
						"characters": "statiuc"
					},
					"BwAAAMqCAAAAAAAAy4IAAAAAAAAAAAAAy4IAAAAAAADMggAAAAAAAAAAAADMggAAAAAAAM2CAAAAAAAAAAAAAM2CAAAAAAAAzoIAAAAAAAAAAAAAzoIAAAAAAADPggAAAAAAAAAAAADPggAAAAAAANCCAAAAAAAAAAAAANCCAAAAAAAA0YIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyoIAAAAAAADKggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6147,
					2,
					"left_delete",
					null,
					"AgAAANCCAAAAAAAA0IIAAAAAAAABAAAAY8+CAAAAAAAAz4IAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAA0YIAAAAAAADRggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6148,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAM+CAAAAAAAA0IIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAz4IAAAAAAADPggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6149,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANCCAAAAAAAA0YIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0IIAAAAAAADQggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6151,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMqCAAAAAAAAy4IAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyoIAAAAAAADKggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6153,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANGCAAAAAAAA0oIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0YIAAAAAAADRggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6155,
					1,
					"insert",
					{
						"characters": " level_nu"
					},
					"CQAAANKCAAAAAAAA04IAAAAAAAAAAAAA04IAAAAAAADUggAAAAAAAAAAAADUggAAAAAAANWCAAAAAAAAAAAAANWCAAAAAAAA1oIAAAAAAAAAAAAA1oIAAAAAAADXggAAAAAAAAAAAADXggAAAAAAANiCAAAAAAAAAAAAANiCAAAAAAAA2YIAAAAAAAAAAAAA2YIAAAAAAADaggAAAAAAAAAAAADaggAAAAAAANuCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0oIAAAAAAADSggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6156,
					1,
					"insert",
					{
						"characters": "mber"
					},
					"BAAAANuCAAAAAAAA3IIAAAAAAAAAAAAA3IIAAAAAAADdggAAAAAAAAAAAADdggAAAAAAAN6CAAAAAAAAAAAAAN6CAAAAAAAA34IAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA24IAAAAAAADbggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6157,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAN+CAAAAAAAA4IIAAAAAAAAAAAAA4IIAAAAAAADhggAAAAAAAAAAAADhggAAAAAAAOKCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA34IAAAAAAADfggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6158,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAOKCAAAAAAAA44IAAAAAAAAAAAAA44IAAAAAAADkggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4oIAAAAAAADiggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6160,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOSCAAAAAAAA5oIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5IIAAAAAAADkggAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6165,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAMCEAAAAAAAAw4QAAAAAAAAAAAAA5YIAAAAAAADlggAAAAAAAAIAAAAJIMGEAAAAAAAAwoQAAAAAAAAAAAAAwoQAAAAAAADDhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAwIQAAAAAAADAhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6166,
					1,
					"insert",
					{
						"characters": " level_number"
					},
					"DQAAAMOEAAAAAAAAxIQAAAAAAAAAAAAAxIQAAAAAAADFhAAAAAAAAAAAAADFhAAAAAAAAMaEAAAAAAAAAAAAAMaEAAAAAAAAx4QAAAAAAAAAAAAAx4QAAAAAAADIhAAAAAAAAAAAAADIhAAAAAAAAMmEAAAAAAAAAAAAAMmEAAAAAAAAyoQAAAAAAAAAAAAAyoQAAAAAAADLhAAAAAAAAAAAAADLhAAAAAAAAMyEAAAAAAAAAAAAAMyEAAAAAAAAzYQAAAAAAAAAAAAAzYQAAAAAAADOhAAAAAAAAAAAAADOhAAAAAAAAM+EAAAAAAAAAAAAAM+EAAAAAAAA0IQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAw4QAAAAAAADDhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6167,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAANCEAAAAAAAA0YQAAAAAAAAAAAAA0YQAAAAAAADShAAAAAAAAAAAAADShAAAAAAAANOEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0IQAAAAAAADQhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6168,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAANOEAAAAAAAA1IQAAAAAAAAAAAAA1IQAAAAAAADVhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA04QAAAAAAADThAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6169,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANWEAAAAAAAA2IQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1YQAAAAAAADVhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6170,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANiEAAAAAAAA2oQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2IQAAAAAAADYhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6171,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAANmEAAAAAAAA3IQAAAAAAAAAAAAA3IQAAAAAAADfhAAAAAAAAAAAAADahAAAAAAAANqEAAAAAAAAAgAAAAkJ2oQAAAAAAADdhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2YQAAAAAAADZhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6172,
					1,
					"insert",
					{
						"characters": "level_number"
					},
					"DAAAAN2EAAAAAAAA3oQAAAAAAAAAAAAA3oQAAAAAAADfhAAAAAAAAAAAAADfhAAAAAAAAOCEAAAAAAAAAAAAAOCEAAAAAAAA4YQAAAAAAAAAAAAA4YQAAAAAAADihAAAAAAAAAAAAADihAAAAAAAAOOEAAAAAAAAAAAAAOOEAAAAAAAA5IQAAAAAAAAAAAAA5IQAAAAAAADlhAAAAAAAAAAAAADlhAAAAAAAAOaEAAAAAAAAAAAAAOaEAAAAAAAA54QAAAAAAAAAAAAA54QAAAAAAADohAAAAAAAAAAAAADohAAAAAAAAOmEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3YQAAAAAAADdhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6173,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOmEAAAAAAAA6oQAAAAAAAAAAAAA6oQAAAAAAADrhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6YQAAAAAAADphAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6174,
					1,
					"insert",
					{
						"characters": " 4"
					},
					"AgAAAOuEAAAAAAAA7IQAAAAAAAAAAAAA7IQAAAAAAADthAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA64QAAAAAAADrhAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6175,
					1,
					"insert",
					{
						"characters": "\ncreate_level"
					},
					"DQAAAO2EAAAAAAAA8YQAAAAAAAAAAAAA8YQAAAAAAADyhAAAAAAAAAAAAADyhAAAAAAAAPOEAAAAAAAAAAAAAPOEAAAAAAAA9IQAAAAAAAAAAAAA9IQAAAAAAAD1hAAAAAAAAAAAAAD1hAAAAAAAAPaEAAAAAAAAAAAAAPaEAAAAAAAA94QAAAAAAAAAAAAA94QAAAAAAAD4hAAAAAAAAAAAAAD4hAAAAAAAAPmEAAAAAAAAAAAAAPmEAAAAAAAA+oQAAAAAAAAAAAAA+oQAAAAAAAD7hAAAAAAAAAAAAAD7hAAAAAAAAPyEAAAAAAAAAAAAAPyEAAAAAAAA/YQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA7YQAAAAAAADthAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6176,
					1,
					"insert",
					{
						"characters": "_4"
					},
					"AgAAAP2EAAAAAAAA/oQAAAAAAAAAAAAA/oQAAAAAAAD/hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/YQAAAAAAAD9hAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6177,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP+EAAAAAAAAAYUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/4QAAAAAAAD/hAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6180,
					1,
					"insert",
					{
						"characters": "\nelse"
					},
					"BQAAAAWFAAAAAAAACIUAAAAAAAAAAAAACIUAAAAAAAAJhQAAAAAAAAAAAAAJhQAAAAAAAAqFAAAAAAAAAAAAAAqFAAAAAAAAC4UAAAAAAAAAAAAAC4UAAAAAAAAMhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABYUAAAAAAAAFhQAAAAAAAAAAAAAAwG5AAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6181,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAAyFAAAAAAAADYUAAAAAAAAAAAAADYUAAAAAAAAOhQAAAAAAAAAAAAAOhQAAAAAAAA+FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADIUAAAAAAAAMhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6182,
					1,
					"insert",
					{
						"characters": " level_number"
					},
					"DQAAAA+FAAAAAAAAEIUAAAAAAAAAAAAAEIUAAAAAAAARhQAAAAAAAAAAAAARhQAAAAAAABKFAAAAAAAAAAAAABKFAAAAAAAAE4UAAAAAAAAAAAAAE4UAAAAAAAAUhQAAAAAAAAAAAAAUhQAAAAAAABWFAAAAAAAAAAAAABWFAAAAAAAAFoUAAAAAAAAAAAAAFoUAAAAAAAAXhQAAAAAAAAAAAAAXhQAAAAAAABiFAAAAAAAAAAAAABiFAAAAAAAAGYUAAAAAAAAAAAAAGYUAAAAAAAAahQAAAAAAAAAAAAAahQAAAAAAABuFAAAAAAAAAAAAABuFAAAAAAAAHIUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAD4UAAAAAAAAPhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6183,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAByFAAAAAAAAHYUAAAAAAAAAAAAAHYUAAAAAAAAehQAAAAAAAAAAAAAehQAAAAAAAB+FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHIUAAAAAAAAchQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6184,
					1,
					"insert",
					{
						"characters": " 4"
					},
					"AgAAAB+FAAAAAAAAIIUAAAAAAAAAAAAAIIUAAAAAAAAhhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH4UAAAAAAAAfhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6185,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACGFAAAAAAAAJIUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIYUAAAAAAAAhhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6186,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACSFAAAAAAAAJoUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJIUAAAAAAAAkhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6187,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAACWFAAAAAAAAKIUAAAAAAAAAAAAAKIUAAAAAAAArhQAAAAAAAAAAAAAmhQAAAAAAACaFAAAAAAAAAgAAAAkJJoUAAAAAAAAphQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJYUAAAAAAAAlhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6188,
					1,
					"insert",
					{
						"characters": "level_number"
					},
					"DAAAACmFAAAAAAAAKoUAAAAAAAAAAAAAKoUAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACyFAAAAAAAAAAAAACyFAAAAAAAALYUAAAAAAAAAAAAALYUAAAAAAAAuhQAAAAAAAAAAAAAuhQAAAAAAAC+FAAAAAAAAAAAAAC+FAAAAAAAAMIUAAAAAAAAAAAAAMIUAAAAAAAAxhQAAAAAAAAAAAAAxhQAAAAAAADKFAAAAAAAAAAAAADKFAAAAAAAAM4UAAAAAAAAAAAAAM4UAAAAAAAA0hQAAAAAAAAAAAAA0hQAAAAAAADWFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKYUAAAAAAAAphQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6189,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADWFAAAAAAAANoUAAAAAAAAAAAAANoUAAAAAAAA3hQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANYUAAAAAAAA1hQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6190,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAADeFAAAAAAAAOIUAAAAAAAAAAAAAOIUAAAAAAAA5hQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAN4UAAAAAAAA3hQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6191,
					1,
					"insert",
					{
						"characters": "\ncreate_level_"
					},
					"DgAAADmFAAAAAAAAPYUAAAAAAAAAAAAAPYUAAAAAAAA+hQAAAAAAAAAAAAA+hQAAAAAAAD+FAAAAAAAAAAAAAD+FAAAAAAAAQIUAAAAAAAAAAAAAQIUAAAAAAABBhQAAAAAAAAAAAABBhQAAAAAAAEKFAAAAAAAAAAAAAEKFAAAAAAAAQ4UAAAAAAAAAAAAAQ4UAAAAAAABEhQAAAAAAAAAAAABEhQAAAAAAAEWFAAAAAAAAAAAAAEWFAAAAAAAARoUAAAAAAAAAAAAARoUAAAAAAABHhQAAAAAAAAAAAABHhQAAAAAAAEiFAAAAAAAAAAAAAEiFAAAAAAAASYUAAAAAAAAAAAAASYUAAAAAAABKhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOYUAAAAAAAA5hQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6192,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAEqFAAAAAAAAS4UAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASoUAAAAAAABKhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6193,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEuFAAAAAAAATYUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAS4UAAAAAAABLhQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6196,
					1,
					"cut",
					null,
					"AQAAAFKFAAAAAAAAUoUAAAAAAAATAAAACQljcmVhdGVfbGV2ZWxfMygpCg",
					"AgAAAAAAAAABAAAAZIUAAAAAAABkhQAAAAAAAAAAAAAAwG5AAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6200,
					1,
					"insert",
					{
						"characters": "\nbytes_+"
					},
					"CAAAAPcFAAAAAAAA+AUAAAAAAAAAAAAA+AUAAAAAAAD5BQAAAAAAAAAAAAD5BQAAAAAAAPoFAAAAAAAAAAAAAPoFAAAAAAAA+wUAAAAAAAAAAAAA+wUAAAAAAAD8BQAAAAAAAAAAAAD8BQAAAAAAAP0FAAAAAAAAAAAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA/gUAAAAAAAD/BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9wUAAAAAAAD3BQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6201,
					1,
					"left_delete",
					null,
					"AQAAAP4FAAAAAAAA/gUAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAA/wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6202,
					1,
					"insert",
					{
						"characters": "png_spining"
					},
					"CwAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAAQGAAAAAAAABQYAAAAAAAAAAAAABQYAAAAAAAAGBgAAAAAAAAAAAAAGBgAAAAAAAAcGAAAAAAAAAAAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6203,
					7,
					"left_delete",
					null,
					"BwAAAAgGAAAAAAAACAYAAAAAAAABAAAAZwcGAAAAAAAABwYAAAAAAAABAAAAbgYGAAAAAAAABgYAAAAAAAABAAAAaQUGAAAAAAAABQYAAAAAAAABAAAAbgQGAAAAAAAABAYAAAAAAAABAAAAaQMGAAAAAAAAAwYAAAAAAAABAAAAcAIGAAAAAAAAAgYAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6204,
					1,
					"insert",
					{
						"characters": "fg_"
					},
					"AwAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAAUGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6205,
					3,
					"left_delete",
					null,
					"AwAAAAQGAAAAAAAABAYAAAAAAAABAAAAXwMGAAAAAAAAAwYAAAAAAAABAAAAZwIGAAAAAAAAAgYAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6206,
					1,
					"insert",
					{
						"characters": "spinning_"
					},
					"CQAAAAIGAAAAAAAAAwYAAAAAAAAAAAAAAwYAAAAAAAAEBgAAAAAAAAAAAAAEBgAAAAAAAAUGAAAAAAAAAAAAAAUGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAHBgAAAAAAAAAAAAAHBgAAAAAAAAgGAAAAAAAAAAAAAAgGAAAAAAAACQYAAAAAAAAAAAAACQYAAAAAAAAKBgAAAAAAAAAAAAAKBgAAAAAAAAsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAgYAAAAAAAACBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6207,
					1,
					"insert",
					{
						"characters": "fg_decoration"
					},
					"DQAAAAsGAAAAAAAADAYAAAAAAAAAAAAADAYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAQBgAAAAAAAAAAAAAQBgAAAAAAABEGAAAAAAAAAAAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACwYAAAAAAAALBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6208,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAABgGAAAAAAAAGQYAAAAAAAAAAAAAGQYAAAAAAAAaBgAAAAAAAAAAAAAaBgAAAAAAABsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGAYAAAAAAAAYBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6209,
					1,
					"insert",
					{
						"characters": " #load"
					},
					"BgAAABsGAAAAAAAAHAYAAAAAAAAAAAAAHAYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB4GAAAAAAAAAAAAAB4GAAAAAAAAHwYAAAAAAAAAAAAAHwYAAAAAAAAgBgAAAAAAAAAAAAAgBgAAAAAAACEGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6210,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACEGAAAAAAAAIwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6211,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACIGAAAAAAAAJAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIgYAAAAAAAAiBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6212,
					1,
					"insert",
					{
						"characters": "../assets/"
					},
					"CgAAACMGAAAAAAAAJAYAAAAAAAAAAAAAJAYAAAAAAAAlBgAAAAAAAAAAAAAlBgAAAAAAACYGAAAAAAAAAAAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAAoBgAAAAAAACkGAAAAAAAAAAAAACkGAAAAAAAAKgYAAAAAAAAAAAAAKgYAAAAAAAArBgAAAAAAAAAAAAArBgAAAAAAACwGAAAAAAAAAAAAACwGAAAAAAAALQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6213,
					1,
					"insert",
					{
						"characters": "spinning_"
					},
					"CQAAAC0GAAAAAAAALgYAAAAAAAAAAAAALgYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADAGAAAAAAAAAAAAADAGAAAAAAAAMQYAAAAAAAAAAAAAMQYAAAAAAAAyBgAAAAAAAAAAAAAyBgAAAAAAADMGAAAAAAAAAAAAADMGAAAAAAAANAYAAAAAAAAAAAAANAYAAAAAAAA1BgAAAAAAAAAAAAA1BgAAAAAAADYGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6214,
					1,
					"left_delete",
					null,
					"AQAAADUGAAAAAAAANQYAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6215,
					1,
					"insert",
					{
						"characters": "-fg-decoration"
					},
					"DgAAADUGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA3BgAAAAAAAAAAAAA3BgAAAAAAADgGAAAAAAAAAAAAADgGAAAAAAAAOQYAAAAAAAAAAAAAOQYAAAAAAAA6BgAAAAAAAAAAAAA6BgAAAAAAADsGAAAAAAAAAAAAADsGAAAAAAAAPAYAAAAAAAAAAAAAPAYAAAAAAAA9BgAAAAAAAAAAAAA9BgAAAAAAAD4GAAAAAAAAAAAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABABgAAAAAAAAAAAABABgAAAAAAAEEGAAAAAAAAAAAAAEEGAAAAAAAAQgYAAAAAAAAAAAAAQgYAAAAAAABDBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANQYAAAAAAAA1BgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6216,
					1,
					"insert",
					{
						"characters": ".png"
					},
					"BAAAAEMGAAAAAAAARAYAAAAAAAAAAAAARAYAAAAAAABFBgAAAAAAAAAAAABFBgAAAAAAAEYGAAAAAAAAAAAAAEYGAAAAAAAARwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQwYAAAAAAABDBgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6222,
					1,
					"left_delete",
					null,
					"AQAAAIjvAAAAAAAAiO8AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAie8AAAAAAACJ7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6223,
					1,
					"insert",
					{
						"characters": "\nrl.Draw"
					},
					"CAAAAIjvAAAAAAAAku8AAAAAAAAAAAAAku8AAAAAAACT7wAAAAAAAAAAAACT7wAAAAAAAJTvAAAAAAAAAAAAAJTvAAAAAAAAle8AAAAAAAAAAAAAle8AAAAAAACW7wAAAAAAAAAAAACW7wAAAAAAAJfvAAAAAAAAAAAAAJfvAAAAAAAAmO8AAAAAAAAAAAAAmO8AAAAAAACZ7wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAiO8AAAAAAACI7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6224,
					1,
					"insert",
					{
						"characters": "Texture"
					},
					"BwAAAJnvAAAAAAAAmu8AAAAAAAAAAAAAmu8AAAAAAACb7wAAAAAAAAAAAACb7wAAAAAAAJzvAAAAAAAAAAAAAJzvAAAAAAAAne8AAAAAAAAAAAAAne8AAAAAAACe7wAAAAAAAAAAAACe7wAAAAAAAJ/vAAAAAAAAAAAAAJ/vAAAAAAAAoO8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAme8AAAAAAACZ7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6227,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD3vAAAAAAAAPu8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPe8AAAAAAAA97wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6230,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKHvAAAAAAAAo+8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoe8AAAAAAACh7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6231,
					1,
					"insert",
					{
						"characters": "gmem.textures"
					},
					"DQAAAKLvAAAAAAAAo+8AAAAAAAAAAAAAo+8AAAAAAACk7wAAAAAAAAAAAACk7wAAAAAAAKXvAAAAAAAAAAAAAKXvAAAAAAAApu8AAAAAAAAAAAAApu8AAAAAAACn7wAAAAAAAAAAAACn7wAAAAAAAKjvAAAAAAAAAAAAAKjvAAAAAAAAqe8AAAAAAAAAAAAAqe8AAAAAAACq7wAAAAAAAAAAAACq7wAAAAAAAKvvAAAAAAAAAAAAAKvvAAAAAAAArO8AAAAAAAAAAAAArO8AAAAAAACt7wAAAAAAAAAAAACt7wAAAAAAAK7vAAAAAAAAAAAAAK7vAAAAAAAAr+8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAou8AAAAAAACi7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6232,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAK/vAAAAAAAAse8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAr+8AAAAAAACv7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6233,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALDvAAAAAAAAse8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAsO8AAAAAAACw7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6248,
					1,
					"insert",
					{
						"characters": "\nSpinmn"
					},
					"BwAAANAQAAAAAAAA0hAAAAAAAAAAAAAA0hAAAAAAAADTEAAAAAAAAAAAAADTEAAAAAAAANQQAAAAAAAAAAAAANQQAAAAAAAA1RAAAAAAAAAAAAAA1RAAAAAAAADWEAAAAAAAAAAAAADWEAAAAAAAANcQAAAAAAAAAAAAANcQAAAAAAAA2BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0BAAAAAAAADQEAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6249,
					2,
					"left_delete",
					null,
					"AgAAANcQAAAAAAAA1xAAAAAAAAABAAAAbtYQAAAAAAAA1hAAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAA2BAAAAAAAADYEAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6250,
					1,
					"insert",
					{
						"characters": "ning_Dec"
					},
					"CAAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANkQAAAAAAAAAAAAANkQAAAAAAAA2hAAAAAAAAAAAAAA2hAAAAAAAADbEAAAAAAAAAAAAADbEAAAAAAAANwQAAAAAAAAAAAAANwQAAAAAAAA3RAAAAAAAAAAAAAA3RAAAAAAAADeEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1hAAAAAAAADWEAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6251,
					1,
					"insert",
					{
						"characters": "oration,"
					},
					"CAAAAN4QAAAAAAAA3xAAAAAAAAAAAAAA3xAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOEQAAAAAAAAAAAAAOEQAAAAAAAA4hAAAAAAAAAAAAAA4hAAAAAAAADjEAAAAAAAAAAAAADjEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA5RAAAAAAAAAAAAAA5RAAAAAAAADmEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3hAAAAAAAADeEAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6267,
					1,
					"insert",
					{
						"characters": "\n.Spn"
					},
					"BQAAAOF/AAAAAAAA538AAAAAAAAAAAAA538AAAAAAADofwAAAAAAAAAAAADofwAAAAAAAOl/AAAAAAAAAAAAAOl/AAAAAAAA6n8AAAAAAAAAAAAA6n8AAAAAAADrfwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4X8AAAAAAADhfwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6268,
					1,
					"left_delete",
					null,
					"AQAAAOp/AAAAAAAA6n8AAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAA638AAAAAAADrfwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6269,
					1,
					"insert",
					{
						"characters": "inning_Decoration"
					},
					"EQAAAOp/AAAAAAAA638AAAAAAAAAAAAA638AAAAAAADsfwAAAAAAAAAAAADsfwAAAAAAAO1/AAAAAAAAAAAAAO1/AAAAAAAA7n8AAAAAAAAAAAAA7n8AAAAAAADvfwAAAAAAAAAAAADvfwAAAAAAAPB/AAAAAAAAAAAAAPB/AAAAAAAA8X8AAAAAAAAAAAAA8X8AAAAAAADyfwAAAAAAAAAAAADyfwAAAAAAAPN/AAAAAAAAAAAAAPN/AAAAAAAA9H8AAAAAAAAAAAAA9H8AAAAAAAD1fwAAAAAAAAAAAAD1fwAAAAAAAPZ/AAAAAAAAAAAAAPZ/AAAAAAAA938AAAAAAAAAAAAA938AAAAAAAD4fwAAAAAAAAAAAAD4fwAAAAAAAPl/AAAAAAAAAAAAAPl/AAAAAAAA+n8AAAAAAAAAAAAA+n8AAAAAAAD7fwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6n8AAAAAAADqfwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6270,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPt/AAAAAAAA/H8AAAAAAAAAAAAA/H8AAAAAAAD9fwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+38AAAAAAAD7fwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6271,
					1,
					"insert",
					{
						"characters": " bytes_p"
					},
					"CAAAAP1/AAAAAAAA/n8AAAAAAAAAAAAA/n8AAAAAAAD/fwAAAAAAAAAAAAD/fwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/X8AAAAAAAD9fwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6272,
					1,
					"insert",
					{
						"characters": "ng_game"
					},
					"BwAAAAWAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAADIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6273,
					1,
					"insert",
					{
						"characters": "_bh"
					},
					"AwAAAAyAAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6274,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAA+AAAAAAAAAEYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6275,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABCAAAAAAAAAEYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEIAAAAAAAAAQgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6278,
					1,
					"left_delete",
					null,
					"AQAAAA6AAAAAAAAADoAAAAAAAAABAAAAaA",
					"AgAAAAAAAAABAAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6279,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAA6AAAAAAAAAD4AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADoAAAAAAAAAOgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6283,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABKAAAAAAAAAE4AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEoAAAAAAAAASgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6299,
					1,
					"insert",
					{
						"characters": "Spinning_"
					},
					"CQAAAPnvAAAAAAAA+u8AAAAAAAAAAAAA+u8AAAAAAAD77wAAAAAAAAAAAAD77wAAAAAAAPzvAAAAAAAAAAAAAPzvAAAAAAAA/e8AAAAAAAAAAAAA/e8AAAAAAAD+7wAAAAAAAAAAAAD+7wAAAAAAAP/vAAAAAAAAAAAAAP/vAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAALwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+e8AAAAAAAD57wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6300,
					1,
					"insert",
					{
						"characters": "Decoration"
					},
					"CgAAAALwAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6302,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA3wAAAAAAAADvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6303,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA7wAAAAAAAAD/AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADvAAAAAAAAAO8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6304,
					1,
					"insert",
					{
						"characters": "640"
					},
					"AwAAAA/wAAAAAAAAEPAAAAAAAAAAAAAAEPAAAAAAAAAR8AAAAAAAAAAAAAAR8AAAAAAAABLwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6305,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABLwAAAAAAAAE/AAAAAAAAAAAAAAE/AAAAAAAAAU8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEvAAAAAAAAAS8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6306,
					1,
					"insert",
					{
						"characters": " 50,"
					},
					"BAAAABTwAAAAAAAAFfAAAAAAAAAAAAAAFfAAAAAAAAAW8AAAAAAAAAAAAAAW8AAAAAAAABfwAAAAAAAAAAAAABfwAAAAAAAAGPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFPAAAAAAAAAU8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6307,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABjwAAAAAAAAGfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGPAAAAAAAAAY8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6308,
					1,
					"insert",
					{
						"characters": "360"
					},
					"AwAAABnwAAAAAAAAGvAAAAAAAAAAAAAAGvAAAAAAAAAb8AAAAAAAAAAAAAAb8AAAAAAAABzwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGfAAAAAAAAAZ8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6309,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAABzwAAAAAAAAHfAAAAAAAAAAAAAAHfAAAAAAAAAe8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHPAAAAAAAAAc8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6310,
					1,
					"insert",
					{
						"characters": "  05"
					},
					"BAAAAB7wAAAAAAAAH/AAAAAAAAAAAAAAH/AAAAAAAAAg8AAAAAAAAAAAAAAg8AAAAAAAACHwAAAAAAAAAAAAACHwAAAAAAAAIvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHvAAAAAAAAAe8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6311,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACLwAAAAAAAAI/AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIvAAAAAAAAAi8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6312,
					1,
					"insert",
					{
						"characters": " rl.WHITE"
					},
					"CQAAACPwAAAAAAAAJPAAAAAAAAAAAAAAJPAAAAAAAAAl8AAAAAAAAAAAAAAl8AAAAAAAACbwAAAAAAAAAAAAACbwAAAAAAAAJ/AAAAAAAAAAAAAAJ/AAAAAAAAAo8AAAAAAAAAAAAAAo8AAAAAAAACnwAAAAAAAAAAAAACnwAAAAAAAAKvAAAAAAAAAAAAAAKvAAAAAAAAAr8AAAAAAAAAAAAAAr8AAAAAAAACzwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAI/AAAAAAAAAj8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6315,
					1,
					"insert",
					{
						"characters": "\nrl.DrawT"
					},
					"CQAAANHvAAAAAAAA2+8AAAAAAAAAAAAA2+8AAAAAAADc7wAAAAAAAAAAAADc7wAAAAAAAN3vAAAAAAAAAAAAAN3vAAAAAAAA3u8AAAAAAAAAAAAA3u8AAAAAAADf7wAAAAAAAAAAAADf7wAAAAAAAODvAAAAAAAAAAAAAODvAAAAAAAA4e8AAAAAAAAAAAAA4e8AAAAAAADi7wAAAAAAAAAAAADi7wAAAAAAAOPvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0e8AAAAAAADR7wAAAAAAAAAAAAAAkIlAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6316,
					1,
					"insert",
					{
						"characters": "exture"
					},
					"BgAAAOPvAAAAAAAA5O8AAAAAAAAAAAAA5O8AAAAAAADl7wAAAAAAAAAAAADl7wAAAAAAAObvAAAAAAAAAAAAAObvAAAAAAAA5+8AAAAAAAAAAAAA5+8AAAAAAADo7wAAAAAAAAAAAADo7wAAAAAAAOnvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4+8AAAAAAADj7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6317,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOnvAAAAAAAA6+8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6e8AAAAAAADp7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6318,
					1,
					"insert",
					{
						"characters": "gmem.textures"
					},
					"DQAAAOrvAAAAAAAA6+8AAAAAAAAAAAAA6+8AAAAAAADs7wAAAAAAAAAAAADs7wAAAAAAAO3vAAAAAAAAAAAAAO3vAAAAAAAA7u8AAAAAAAAAAAAA7u8AAAAAAADv7wAAAAAAAAAAAADv7wAAAAAAAPDvAAAAAAAAAAAAAPDvAAAAAAAA8e8AAAAAAAAAAAAA8e8AAAAAAADy7wAAAAAAAAAAAADy7wAAAAAAAPPvAAAAAAAAAAAAAPPvAAAAAAAA9O8AAAAAAAAAAAAA9O8AAAAAAAD17wAAAAAAAAAAAAD17wAAAAAAAPbvAAAAAAAAAAAAAPbvAAAAAAAA9+8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6u8AAAAAAADq7wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6319,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPfvAAAAAAAA+e8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9+8AAAAAAAD37wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6320,
					1,
					"insert",
					{
						"characters": ".Spinning"
					},
					"CQAAAPjvAAAAAAAA+e8AAAAAAAAAAAAA+e8AAAAAAAD67wAAAAAAAAAAAAD67wAAAAAAAPvvAAAAAAAAAAAAAPvvAAAAAAAA/O8AAAAAAAAAAAAA/O8AAAAAAAD97wAAAAAAAAAAAAD97wAAAAAAAP7vAAAAAAAAAAAAAP7vAAAAAAAA/+8AAAAAAAAAAAAA/+8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+O8AAAAAAAD47wAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6321,
					1,
					"insert",
					{
						"characters": "_Decoration"
					},
					"CwAAAAHwAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAM8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6323,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA3wAAAAAAAADvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6324,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAA7wAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAQ8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADvAAAAAAAAAO8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6325,
					1,
					"insert",
					{
						"characters": " 10"
					},
					"AwAAABDwAAAAAAAAEfAAAAAAAAAAAAAAEfAAAAAAAAAS8AAAAAAAAAAAAAAS8AAAAAAAABPwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEPAAAAAAAAAQ8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6326,
					3,
					"left_delete",
					null,
					"AwAAABLwAAAAAAAAEvAAAAAAAAABAAAAMBHwAAAAAAAAEfAAAAAAAAABAAAAMRDwAAAAAAAAEPAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAE/AAAAAAAAAT8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6327,
					1,
					"insert",
					{
						"characters": "100,"
					},
					"BAAAABDwAAAAAAAAEfAAAAAAAAAAAAAAEfAAAAAAAAAS8AAAAAAAAAAAAAAS8AAAAAAAABPwAAAAAAAAAAAAABPwAAAAAAAAFPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEPAAAAAAAAAQ8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABTwAAAAAAAAFfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFPAAAAAAAAAU8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6330,
					2,
					"left_delete",
					null,
					"AgAAABLwAAAAAAAAEvAAAAAAAAABAAAAMBHwAAAAAAAAEfAAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAE/AAAAAAAAAT8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6331,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAABHwAAAAAAAAEvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEfAAAAAAAAAR8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6332,
					2,
					"left_delete",
					null,
					"AgAAABHwAAAAAAAAEfAAAAAAAAABAAAANRDwAAAAAAAAEPAAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAEvAAAAAAAAAS8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6333,
					1,
					"insert",
					{
						"characters": "50"
					},
					"AgAAABDwAAAAAAAAEfAAAAAAAAAAAAAAEfAAAAAAAAAS8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEPAAAAAAAAAQ8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6335,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABPwAAAAAAAAFPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAE/AAAAAAAAAT8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6336,
					1,
					"insert",
					{
						"characters": "360-590"
					},
					"BwAAABTwAAAAAAAAFfAAAAAAAAAAAAAAFfAAAAAAAAAW8AAAAAAAAAAAAAAW8AAAAAAAABfwAAAAAAAAAAAAABfwAAAAAAAAGPAAAAAAAAAAAAAAGPAAAAAAAAAZ8AAAAAAAAAAAAAAZ8AAAAAAAABrwAAAAAAAAAAAAABrwAAAAAAAAG/AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFPAAAAAAAAAU8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6337,
					2,
					"left_delete",
					null,
					"AgAAABrwAAAAAAAAGvAAAAAAAAABAAAAMBnwAAAAAAAAGfAAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAG/AAAAAAAAAb8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6338,
					1,
					"insert",
					{
						"characters": "0,"
					},
					"AgAAABnwAAAAAAAAGvAAAAAAAAAAAAAAGvAAAAAAAAAb8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGfAAAAAAAAAZ8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6339,
					1,
					"insert",
					{
						"characters": " rlWHITE"
					},
					"CAAAABvwAAAAAAAAHPAAAAAAAAAAAAAAHPAAAAAAAAAd8AAAAAAAAAAAAAAd8AAAAAAAAB7wAAAAAAAAAAAAAB7wAAAAAAAAH/AAAAAAAAAAAAAAH/AAAAAAAAAg8AAAAAAAAAAAAAAg8AAAAAAAACHwAAAAAAAAAAAAACHwAAAAAAAAIvAAAAAAAAAAAAAAIvAAAAAAAAAj8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAG/AAAAAAAAAb8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6341,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAB7wAAAAAAAAH/AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHvAAAAAAAAAe8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6363,
					7,
					"left_delete",
					null,
					"BwAAAA6AAAAAAAAADoAAAAAAAAABAAAAZw2AAAAAAAAADYAAAAAAAAABAAAAYgyAAAAAAAAADIAAAAAAAAABAAAAXwuAAAAAAAAAC4AAAAAAAAABAAAAZQqAAAAAAAAACoAAAAAAAAABAAAAbQmAAAAAAAAACYAAAAAAAAABAAAAYQiAAAAAAAAACIAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6364,
					1,
					"insert",
					{
						"characters": "spinning_deco"
					},
					"DQAAAAiAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6365,
					1,
					"insert",
					{
						"characters": "ration"
					},
					"BgAAABWAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6370,
					1,
					"insert",
					{
						"characters": "fg_"
					},
					"AwAAABGAAAAAAAAAEoAAAAAAAAAAAAAAEoAAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABSAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEYAAAAAAAAARgAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6381,
					1,
					"left_delete",
					null,
					"AQAAAITwAAAAAAAAhPAAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAhfAAAAAAAACF8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6383,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIXwAAAAAAAAhvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhfAAAAAAAACF8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6391,
					2,
					"left_delete",
					null,
					"AgAAACjwAAAAAAAAKPAAAAAAAAABAAAAMCfwAAAAAAAAJ/AAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAKfAAAAAAAAAp8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6392,
					1,
					"insert",
					{
						"characters": "100"
					},
					"AwAAACfwAAAAAAAAKPAAAAAAAAAAAAAAKPAAAAAAAAAp8AAAAAAAAAAAAAAp8AAAAAAAACrwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJ/AAAAAAAAAn8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6394,
					3,
					"left_delete",
					null,
					"AwAAACnwAAAAAAAAKfAAAAAAAAABAAAAMCjwAAAAAAAAKPAAAAAAAAABAAAAMCfwAAAAAAAAJ/AAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAKvAAAAAAAAAq8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6395,
					1,
					"insert",
					{
						"characters": "90"
					},
					"AgAAACfwAAAAAAAAKPAAAAAAAAAAAAAAKPAAAAAAAAAp8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJ/AAAAAAAAAn8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6398,
					2,
					"left_delete",
					null,
					"AgAAAIXwAAAAAAAAhfAAAAAAAAABAAAAMITwAAAAAAAAhPAAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAhvAAAAAAAACG8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6399,
					1,
					"insert",
					{
						"characters": "90"
					},
					"AgAAAITwAAAAAAAAhfAAAAAAAAAAAAAAhfAAAAAAAACG8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAhPAAAAAAAACE8AAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6410,
					3,
					"delete_word",
					{
						"forward": false
					},
					"AwAAAMJqAAAAAAAAwmoAAAAAAAABAAAAMMFqAAAAAAAAwWoAAAAAAAABAAAALr5qAAAAAAAAvmoAAAAAAAADAAAAMTYw",
					"AgAAAAAAAAABAAAAw2oAAAAAAADDagAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6411,
					1,
					"insert",
					{
						"characters": "gmem.music_b"
					},
					"DAAAAL5qAAAAAAAAv2oAAAAAAAAAAAAAv2oAAAAAAADAagAAAAAAAAAAAADAagAAAAAAAMFqAAAAAAAAAAAAAMFqAAAAAAAAwmoAAAAAAAAAAAAAwmoAAAAAAADDagAAAAAAAAAAAADDagAAAAAAAMRqAAAAAAAAAAAAAMRqAAAAAAAAxWoAAAAAAAAAAAAAxWoAAAAAAADGagAAAAAAAAAAAADGagAAAAAAAMdqAAAAAAAAAAAAAMdqAAAAAAAAyGoAAAAAAAAAAAAAyGoAAAAAAADJagAAAAAAAAAAAADJagAAAAAAAMpqAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvmoAAAAAAAC+agAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6412,
					1,
					"insert",
					{
						"characters": "pm"
					},
					"AgAAAMpqAAAAAAAAy2oAAAAAAAAAAAAAy2oAAAAAAADMagAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAymoAAAAAAADKagAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6418,
					1,
					"left_delete",
					null,
					"AgAAAHCvAAAAAAAAcK8AAAAAAAAFAAAAMTYwLjAOrwAAAAAAAA6vAAAAAAAABQAAADE2MC4w",
					"AgAAAAAAAAACAAAADq8AAAAAAAATrwAAAAAAAAAAAAAAAPC/cK8AAAAAAAB1rwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6419,
					1,
					"insert",
					{
						"characters": "gmem.music_bpm"
					},
					"HAAAAGuvAAAAAAAAbK8AAAAAAAAAAAAADq8AAAAAAAAPrwAAAAAAAAAAAABtrwAAAAAAAG6vAAAAAAAAAAAAAA+vAAAAAAAAEK8AAAAAAAAAAAAAb68AAAAAAABwrwAAAAAAAAAAAAAQrwAAAAAAABGvAAAAAAAAAAAAAHGvAAAAAAAAcq8AAAAAAAAAAAAAEa8AAAAAAAASrwAAAAAAAAAAAABzrwAAAAAAAHSvAAAAAAAAAAAAABKvAAAAAAAAE68AAAAAAAAAAAAAda8AAAAAAAB2rwAAAAAAAAAAAAATrwAAAAAAABSvAAAAAAAAAAAAAHevAAAAAAAAeK8AAAAAAAAAAAAAFK8AAAAAAAAVrwAAAAAAAAAAAAB5rwAAAAAAAHqvAAAAAAAAAAAAABWvAAAAAAAAFq8AAAAAAAAAAAAAe68AAAAAAAB8rwAAAAAAAAAAAAAWrwAAAAAAABevAAAAAAAAAAAAAH2vAAAAAAAAfq8AAAAAAAAAAAAAF68AAAAAAAAYrwAAAAAAAAAAAAB/rwAAAAAAAICvAAAAAAAAAAAAABivAAAAAAAAGa8AAAAAAAAAAAAAga8AAAAAAACCrwAAAAAAAAAAAAAZrwAAAAAAABqvAAAAAAAAAAAAAIOvAAAAAAAAhK8AAAAAAAAAAAAAGq8AAAAAAAAbrwAAAAAAAAAAAACFrwAAAAAAAIavAAAAAAAAAAAAABuvAAAAAAAAHK8AAAAAAAAAAAAA",
					"AgAAAAAAAAACAAAADq8AAAAAAAAOrwAAAAAAAAAAAAAAAPC/a68AAAAAAABrrwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6422,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMq8AAAAAAAAyrwAAAAAAAAFAAAAMTYwLjA",
					"AgAAAAAAAAABAAAAyrwAAAAAAADPvAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6423,
					1,
					"insert",
					{
						"characters": "gmem.music_b"
					},
					"DAAAAMq8AAAAAAAAy7wAAAAAAAAAAAAAy7wAAAAAAADMvAAAAAAAAAAAAADMvAAAAAAAAM28AAAAAAAAAAAAAM28AAAAAAAAzrwAAAAAAAAAAAAAzrwAAAAAAADPvAAAAAAAAAAAAADPvAAAAAAAANC8AAAAAAAAAAAAANC8AAAAAAAA0bwAAAAAAAAAAAAA0bwAAAAAAADSvAAAAAAAAAAAAADSvAAAAAAAANO8AAAAAAAAAAAAANO8AAAAAAAA1LwAAAAAAAAAAAAA1LwAAAAAAADVvAAAAAAAAAAAAADVvAAAAAAAANa8AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAyrwAAAAAAADKvAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6424,
					1,
					"insert",
					{
						"characters": "pm"
					},
					"AgAAANa8AAAAAAAA17wAAAAAAAAAAAAA17wAAAAAAADYvAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA1rwAAAAAAADWvAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6431,
					1,
					"insert",
					{
						"characters": "\nig"
					},
					"AwAAADNuAAAAAAAAOG4AAAAAAAAAAAAAOG4AAAAAAAA5bgAAAAAAAAAAAAA5bgAAAAAAADpuAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAM24AAAAAAAAzbgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6432,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADpuAAAAAAAAO24AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOm4AAAAAAAA6bgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6433,
					2,
					"left_delete",
					null,
					"AgAAADpuAAAAAAAAOm4AAAAAAAABAAAAIDluAAAAAAAAOW4AAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAO24AAAAAAAA7bgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6434,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAADluAAAAAAAAOm4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOW4AAAAAAAA5bgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6435,
					2,
					"left_delete",
					null,
					"AgAAADluAAAAAAAAOW4AAAAAAAABAAAAZjhuAAAAAAAAOG4AAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAOm4AAAAAAAA6bgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6438,
					1,
					"left_delete",
					null,
					"AgAAAEpuAAAAAAAASm4AAAAAAAABAAAAMzRuAAAAAAAANG4AAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAS24AAAAAAABLbgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6439,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAEZuAAAAAAAAR24AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARm4AAAAAAABGbgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6458,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAFrNAAAAAAAAXc0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAec0AAAAAAAB5zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6461,
					1,
					"cut",
					null,
					"AQAAAPXMAAAAAAAA9cwAAAAAAAAlAAAAICAgICAgICBybC5DbGVhckJhY2tncm91bmQocmwuV0hJVEUpCg",
					"AgAAAAAAAAABAAAAGc0AAAAAAAAZzQAAAAAAAAAAAAAAEHdAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6464,
					1,
					"paste",
					null,
					"AQAAAPbMAAAAAAAAG80AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9swAAAAAAAD2zAAAAAAAAAAAAAAAAAAAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6467,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABTNAAAAAAAAFM0AAAAAAAAFAAAAV0hJVEU",
					"AgAAAAAAAAABAAAAGc0AAAAAAAAZzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6468,
					1,
					"insert",
					{
						"characters": "SKYBLUE"
					},
					"BwAAABTNAAAAAAAAFc0AAAAAAAAAAAAAFc0AAAAAAAAWzQAAAAAAAAAAAAAWzQAAAAAAABfNAAAAAAAAAAAAABfNAAAAAAAAGM0AAAAAAAAAAAAAGM0AAAAAAAAZzQAAAAAAAAAAAAAZzQAAAAAAABrNAAAAAAAAAAAAABrNAAAAAAAAG80AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFM0AAAAAAAAUzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6470,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAABvNAAAAAAAAHM0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAG80AAAAAAAAbzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6475,
					1,
					"left_delete",
					null,
					"AQAAABvNAAAAAAAAG80AAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAHM0AAAAAAAAczQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6482,
					1,
					"insert",
					{
						"characters": "BLUE"
					},
					"BAAAABTNAAAAAAAAFc0AAAAAAAAHAAAAU0tZQkxVRRXNAAAAAAAAFs0AAAAAAAAAAAAAFs0AAAAAAAAXzQAAAAAAAAAAAAAXzQAAAAAAABjNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFM0AAAAAAAAbzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6484,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAABTNAAAAAAAAFM0AAAAAAAAEAAAAQkxVRQ",
					"AgAAAAAAAAABAAAAGM0AAAAAAAAYzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6485,
					3,
					"left_delete",
					null,
					"AwAAABPNAAAAAAAAE80AAAAAAAABAAAALhLNAAAAAAAAEs0AAAAAAAABAAAAbBHNAAAAAAAAEc0AAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAFM0AAAAAAAAUzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6487,
					1,
					"reindent",
					null,
					"AQAAAPXMAAAAAAAA/cwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9cwAAAAAAAD1zAAAAAAAAAAAAAAAwG1AAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6488,
					1,
					"insert",
					{
						"characters": "\ncolor"
					},
					"BwAAAP3MAAAAAAAABs0AAAAAAAAAAAAA9cwAAAAAAAD1zAAAAAAAAAgAAAAgICAgICAgIP7MAAAAAAAA/8wAAAAAAAAAAAAA/8wAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAAHNAAAAAAAAAAAAAAHNAAAAAAAAAs0AAAAAAAAAAAAAAs0AAAAAAAADzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/cwAAAAAAAD9zAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6489,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAAPNAAAAAAAABM0AAAAAAAAAAAAABM0AAAAAAAAFzQAAAAAAAAAAAAAFzQAAAAAAAAbNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAA80AAAAAAAADzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6490,
					1,
					"insert",
					{
						"characters": " rl.SKY"
					},
					"BwAAAAbNAAAAAAAAB80AAAAAAAAAAAAAB80AAAAAAAAIzQAAAAAAAAAAAAAIzQAAAAAAAAnNAAAAAAAAAAAAAAnNAAAAAAAACs0AAAAAAAAAAAAACs0AAAAAAAALzQAAAAAAAAAAAAALzQAAAAAAAAzNAAAAAAAAAAAAAAzNAAAAAAAADc0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABs0AAAAAAAAGzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6491,
					1,
					"insert",
					{
						"characters": "BLUE"
					},
					"BAAAAA3NAAAAAAAADs0AAAAAAAAAAAAADs0AAAAAAAAPzQAAAAAAAAAAAAAPzQAAAAAAABDNAAAAAAAAAAAAABDNAAAAAAAAEc0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADc0AAAAAAAANzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6492,
					1,
					"insert",
					{
						"characters": "\ncolor"
					},
					"BgAAABHNAAAAAAAAGs0AAAAAAAAAAAAAGs0AAAAAAAAbzQAAAAAAAAAAAAAbzQAAAAAAABzNAAAAAAAAAAAAABzNAAAAAAAAHc0AAAAAAAAAAAAAHc0AAAAAAAAezQAAAAAAAAAAAAAezQAAAAAAAB/NAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEc0AAAAAAAARzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6493,
					1,
					"insert",
					{
						"characters": "r."
					},
					"AgAAAB/NAAAAAAAAIM0AAAAAAAAAAAAAIM0AAAAAAAAhzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH80AAAAAAAAfzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6494,
					2,
					"left_delete",
					null,
					"AgAAACDNAAAAAAAAIM0AAAAAAAABAAAALh/NAAAAAAAAH80AAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAIc0AAAAAAAAhzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6495,
					1,
					"insert",
					{
						"characters": ".r"
					},
					"AgAAAB/NAAAAAAAAIM0AAAAAAAAAAAAAIM0AAAAAAAAhzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH80AAAAAAAAfzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6496,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAACHNAAAAAAAAIs0AAAAAAAAAAAAAIs0AAAAAAAAjzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIc0AAAAAAAAhzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6497,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACPNAAAAAAAAJM0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAI80AAAAAAAAjzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6498,
					1,
					"left_delete",
					null,
					"AQAAACPNAAAAAAAAI80AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAJM0AAAAAAAAkzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6499,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACPNAAAAAAAAJM0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAI80AAAAAAAAjzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6500,
					1,
					"insert",
					{
						"characters": " 10"
					},
					"AwAAACTNAAAAAAAAJc0AAAAAAAAAAAAAJc0AAAAAAAAmzQAAAAAAAAAAAAAmzQAAAAAAACfNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJM0AAAAAAAAkzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6502,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACfNAAAAAAAAMM0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJ80AAAAAAAAnzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6503,
					2,
					"paste",
					null,
					"AgAAACjNAAAAAAAAPs0AAAAAAAAAAAAAPs0AAAAAAABUzQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMM0AAAAAAAAwzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6506,
					1,
					"left_delete",
					null,
					"AgAAADbNAAAAAAAANs0AAAAAAAABAAAAclPNAAAAAAAAU80AAAAAAAAIAAAAICAgICAgICA",
					"AgAAAAAAAAABAAAAN80AAAAAAAA3zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6507,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADbNAAAAAAAAN80AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANs0AAAAAAAA2zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6509,
					1,
					"left_delete",
					null,
					"AQAAAEzNAAAAAAAATM0AAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAATc0AAAAAAABNzQAAAAAAAAAAAAAAgGBAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6510,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAEzNAAAAAAAATc0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAATM0AAAAAAABMzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6514,
					1,
					"insert",
					{
						"characters": "color"
					},
					"BQAAAHDNAAAAAAAAcc0AAAAAAAAAAAAAcc0AAAAAAAByzQAAAAAAAAAAAAByzQAAAAAAAHPNAAAAAAAAAAAAAHPNAAAAAAAAdM0AAAAAAAAAAAAAdM0AAAAAAAB1zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcM0AAAAAAABwzQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6518,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAC4FAAAAAAAALgUAAAAAAAADAAAALy8g",
					"AgAAAAAAAAABAAAAbwUAAAAAAABvBQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6520,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHoFAAAAAAAAfQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAuAUAAAAAAAC4BQAAAAAAAAAAAAAACIFAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6537,
					1,
					"insert",
					{
						"characters": "rl.LIGHTGRAY"
					},
					"DAAAAHDNAAAAAAAAcc0AAAAAAAAFAAAAY29sb3JxzQAAAAAAAHLNAAAAAAAAAAAAAHLNAAAAAAAAc80AAAAAAAAAAAAAc80AAAAAAAB0zQAAAAAAAAAAAAB0zQAAAAAAAHXNAAAAAAAAAAAAAHXNAAAAAAAAds0AAAAAAAAAAAAAds0AAAAAAAB3zQAAAAAAAAAAAAB3zQAAAAAAAHjNAAAAAAAAAAAAAHjNAAAAAAAAec0AAAAAAAAAAAAAec0AAAAAAAB6zQAAAAAAAAAAAAB6zQAAAAAAAHvNAAAAAAAAAAAAAHvNAAAAAAAAfM0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcM0AAAAAAAB1zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6554,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHGzAAAAAAAAdLMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfbMAAAAAAAB9swAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6569,
					1,
					"insert",
					{
						"characters": "BLACK"
					},
					"BQAAAHbNAAAAAAAAd80AAAAAAAAJAAAATElHSFRHUkFZd80AAAAAAAB4zQAAAAAAAAAAAAB4zQAAAAAAAHnNAAAAAAAAAAAAAHnNAAAAAAAAes0AAAAAAAAAAAAAes0AAAAAAAB7zQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAds0AAAAAAAB/zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6577,
					1,
					"insert",
					{
						"characters": "LIGHTGRAY"
					},
					"CQAAAHbNAAAAAAAAd80AAAAAAAAFAAAAQkxBQ0t3zQAAAAAAAHjNAAAAAAAAAAAAAHjNAAAAAAAAec0AAAAAAAAAAAAAec0AAAAAAAB6zQAAAAAAAAAAAAB6zQAAAAAAAHvNAAAAAAAAAAAAAHvNAAAAAAAAfM0AAAAAAAAAAAAAfM0AAAAAAAB9zQAAAAAAAAAAAAB9zQAAAAAAAH7NAAAAAAAAAAAAAH7NAAAAAAAAf80AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAds0AAAAAAAB7zQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6609,
					2,
					"left_delete",
					null,
					"AgAAAEVdAAAAAAAARV0AAAAAAAABAAAAMkRdAAAAAAAARF0AAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAARl0AAAAAAABGXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6621,
					2,
					"left_delete",
					null,
					"AgAAACleAAAAAAAAKV4AAAAAAAABAAAAMiheAAAAAAAAKF4AAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAKl4AAAAAAAAqXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6624,
					2,
					"left_delete",
					null,
					"AgAAAK1eAAAAAAAArV4AAAAAAAABAAAAMqxeAAAAAAAArF4AAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAArl4AAAAAAACuXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6629,
					1,
					"left_delete",
					null,
					"AQAAAB9fAAAAAAAAH18AAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAIF8AAAAAAAAgXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6630,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAB9fAAAAAAAAIF8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAH18AAAAAAAAfXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6633,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAK9eAAAAAAAAtF4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAr14AAAAAAACvXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6638,
					2,
					"left_delete",
					null,
					"AwAAAHteAAAAAAAAe14AAAAAAAAQAAAAUGxheV9Tb3VuZF9FdmVudKBeAAAAAAAAoF4AAAAAAAAEAAAACQkJIHpeAAAAAAAAel4AAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAe14AAAAAAACLXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6649,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAABJfAAAAAAAAF18AAAAAAAAAAAAAF18AAAAAAAAcXwAAAAAAAAAAAAATXwAAAAAAABNfAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAAEl8AAAAAAAASXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6650,
					1,
					"paste",
					null,
					"AQAAABhfAAAAAAAAyGEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGF8AAAAAAAAYXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6653,
					3,
					"unindent",
					null,
					"AwAAABRfAAAAAAAAFF8AAAAAAAABAAAACRRfAAAAAAAAFF8AAAAAAAABAAAACRRfAAAAAAAAFF8AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAG18AAAAAAAAbXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6659,
					2,
					"left_delete",
					null,
					"AgAAAIRfAAAAAAAAhF8AAAAAAAABAAAANYNfAAAAAAAAg18AAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAhV8AAAAAAACFXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6661,
					1,
					"insert",
					{
						"characters": "*2"
					},
					"AgAAAPVfAAAAAAAA9l8AAAAAAAAAAAAA9l8AAAAAAAD3XwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9V8AAAAAAAD1XwAAAAAAAAAAAAAAXJBAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6663,
					2,
					"left_delete",
					null,
					"AgAAAGlgAAAAAAAAaWAAAAAAAAABAAAAMmhgAAAAAAAAaGAAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAamAAAAAAAABqYAAAAAAAAAAAAAAAoJBAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6666,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAANtgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADlYAAAAAAAAAAAAADcYAAAAAAAANxgAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAA22AAAAAAAADbYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6669,
					1,
					"left_delete",
					null,
					"AgAAABJfAAAAAAAAEl8AAAAAAAABAAAACtxgAAAAAAAA3GAAAAAAAAAEAAAACQkJIA",
					"AgAAAAAAAAABAAAAE18AAAAAAAATXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6674,
					1,
					"left_delete",
					null,
					"AQAAANtgAAAAAAAA22AAAAAAAADpAAAACgoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudCwgfSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiozfSw",
					"AgAAAAAAAAABAAAAxGEAAAAAAADbYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6681,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAANpgAAAAAAAA32AAAAAAAAAAAAAA32AAAAAAAADkYAAAAAAAAAAAAADbYAAAAAAAANtgAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAA2mAAAAAAAADaYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6682,
					1,
					"paste",
					null,
					"AQAAAOBgAAAAAAAAF2MAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4GAAAAAAAADgYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6687,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"FgAAAAVqAAAAAAAACGoAAAAAAAAAAAAAAWoAAAAAAAAEagAAAAAAAAAAAACOaQAAAAAAAJFpAAAAAAAAAAAAABtpAAAAAAAAHmkAAAAAAAAAAAAApmgAAAAAAACpaAAAAAAAAAAAAABBaAAAAAAAAERoAAAAAAAAAAAAADJoAAAAAAAANWgAAAAAAAAAAAAALWgAAAAAAAAwaAAAAAAAAAAAAAC6ZwAAAAAAAL1nAAAAAAAAAAAAADNnAAAAAAAANmcAAAAAAAAAAAAAwGYAAAAAAADDZgAAAAAAAAAAAABNZgAAAAAAAFBmAAAAAAAAAAAAANplAAAAAAAA3WUAAAAAAAAAAAAAZmUAAAAAAABpZQAAAAAAAAAAAAACZQAAAAAAAAVlAAAAAAAAAAAAAPJkAAAAAAAA9WQAAAAAAAAAAAAA7mQAAAAAAADxZAAAAAAAAAAAAAB7ZAAAAAAAAH5kAAAAAAAAAAAAAAhkAAAAAAAAC2QAAAAAAAAAAAAAk2MAAAAAAACWYwAAAAAAAAAAAAAuYwAAAAAAADFjAAAAAAAAAAAAAB9jAAAAAAAAImMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHWMAAAAAAAASagAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6704,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAABZjAAAAAAAAG2MAAAAAAAAAAAAAG2MAAAAAAAAgYwAAAAAAAAAAAAAXYwAAAAAAABdjAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAAFmMAAAAAAAAWYwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6705,
					1,
					"paste",
					null,
					"AQAAABxjAAAAAAAAVGUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHGMAAAAAAAAcYwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6706,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAFRlAAAAAAAAWWUAAAAAAAAAAAAAWWUAAAAAAABeZQAAAAAAAAAAAABVZQAAAAAAAFVlAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAAVGUAAAAAAABUZQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6707,
					1,
					"paste",
					null,
					"AQAAAFplAAAAAAAAkmcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWmUAAAAAAABaZQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6708,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAJJnAAAAAAAAl2cAAAAAAAAAAAAAl2cAAAAAAACcZwAAAAAAAAAAAACTZwAAAAAAAJNnAAAAAAAABAAAAAkJCSA",
					"AgAAAAAAAAABAAAAkmcAAAAAAACSZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6709,
					1,
					"paste",
					null,
					"AQAAAJhnAAAAAAAA0GkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAmGcAAAAAAACYZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6733,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAPdXAAAAAAAA+VcAAAAAAAAAAAAA+VcAAAAAAAD7VwAAAAAAAAAAAAD4VwAAAAAAAPhXAAAAAAAAAQAAAAk",
					"AgAAAAAAAAABAAAA91cAAAAAAAD3VwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6734,
					1,
					"paste",
					null,
					"AQAAAPpXAAAAAAAACl0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+lcAAAAAAAD6VwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6735,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAApdAAAAAAAADF0AAAAAAAAAAAAADF0AAAAAAAAOXQAAAAAAAAAAAAALXQAAAAAAAAtdAAAAAAAAAQAAAAk",
					"AgAAAAAAAAABAAAACl0AAAAAAAAKXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6736,
					1,
					"paste",
					null,
					"AQAAAA1dAAAAAAAAHWIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADV0AAAAAAAANXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6737,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAB1iAAAAAAAAH2IAAAAAAAAAAAAAH2IAAAAAAAAhYgAAAAAAAAAAAAAeYgAAAAAAAB5iAAAAAAAAAQAAAAk",
					"AgAAAAAAAAABAAAAHWIAAAAAAAAdYgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6738,
					1,
					"paste",
					null,
					"AQAAACBiAAAAAAAAMGcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIGIAAAAAAAAgYgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6739,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAADBnAAAAAAAAMmcAAAAAAAAAAAAAMmcAAAAAAAA0ZwAAAAAAAAAAAAAxZwAAAAAAADFnAAAAAAAAAQAAAAk",
					"AgAAAAAAAAABAAAAMGcAAAAAAAAwZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6740,
					1,
					"paste",
					null,
					"AQAAADNnAAAAAAAAQ2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAM2cAAAAAAAAzZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6741,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAENsAAAAAAAARWwAAAAAAAAAAAAARWwAAAAAAABHbAAAAAAAAAAAAABEbAAAAAAAAERsAAAAAAAAAQAAAAk",
					"AgAAAAAAAAABAAAAQ2wAAAAAAABDbAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6742,
					1,
					"paste",
					null,
					"AQAAAEZsAAAAAAAAVnEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARmwAAAAAAABGbAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6765,
					1,
					"insert",
					{
						"characters": "\ngmem.track"
					},
					"CwAAACh0AAAAAAAAKnQAAAAAAAAAAAAAKnQAAAAAAAArdAAAAAAAAAAAAAArdAAAAAAAACx0AAAAAAAAAAAAACx0AAAAAAAALXQAAAAAAAAAAAAALXQAAAAAAAAudAAAAAAAAAAAAAAudAAAAAAAAC90AAAAAAAAAAAAAC90AAAAAAAAMHQAAAAAAAAAAAAAMHQAAAAAAAAxdAAAAAAAAAAAAAAxdAAAAAAAADJ0AAAAAAAAAAAAADJ0AAAAAAAAM3QAAAAAAAAAAAAAM3QAAAAAAAA0dAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKHQAAAAAAAAodAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6766,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":34,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "track_time_ms_previous"
					},
					"AgAAAC90AAAAAAAAL3QAAAAAAAAFAAAAdHJhY2svdAAAAAAAAEV0AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANHQAAAAAAAA0dAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6767,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEV0AAAAAAAARnQAAAAAAAAAAAAARnQAAAAAAABHdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARXQAAAAAAABFdAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6768,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAEd0AAAAAAAASHQAAAAAAAAAAAAASHQAAAAAAABJdAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAR3QAAAAAAABHdAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6778,
					1,
					"left_delete",
					null,
					"AQAAAB1PAAAAAAAAHU8AAAAAAADgAQAACgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnQsIC5QbGF5X1NvdW5kX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0s",
					"AgAAAAAAAAABAAAA/VAAAAAAAAAdTwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6784,
					1,
					"left_delete",
					null,
					"AQAAAAVRAAAAAAAABVEAAAAAAABxHgAACgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDIKCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDIKCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDIKCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDIKCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDIKCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSkKCgljdXJzb3IueCArPSAyCgljdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCQkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJCSkKCWN1cnNvci54ICs9IDI",
					"AgAAAAAAAAABAAAABVEAAAAAAAB2bwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6787,
					1,
					"insert",
					{
						"characters": "\n\nfo"
					},
					"BQAAAARRAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAIUQAAAAAAAAAAAAAFUQAAAAAAAAVRAAAAAAAAAQAAAAkHUQAAAAAAAAhRAAAAAAAAAAAAAAhRAAAAAAAACVEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABFEAAAAAAAAEUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6788,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAAlRAAAAAAAAClEAAAAAAAAAAAAAClEAAAAAAAALUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACVEAAAAAAAAJUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6789,
					2,
					"left_delete",
					null,
					"AgAAAApRAAAAAAAAClEAAAAAAAABAAAAcglRAAAAAAAACVEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAC1EAAAAAAAALUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6790,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAAlRAAAAAAAAClEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACVEAAAAAAAAJUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6791,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAApRAAAAAAAAC1EAAAAAAAAAAAAAC1EAAAAAAAAMUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAClEAAAAAAAAKUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6792,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAxRAAAAAAAADVEAAAAAAAAAAAAADVEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA9RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADFEAAAAAAAAMUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6793,
					1,
					"insert",
					{
						"characters": " .."
					},
					"AwAAAA9RAAAAAAAAEFEAAAAAAAAAAAAAEFEAAAAAAAARUQAAAAAAAAAAAAARUQAAAAAAABJRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAD1EAAAAAAAAPUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6794,
					2,
					"left_delete",
					null,
					"AgAAABFRAAAAAAAAEVEAAAAAAAABAAAALhBRAAAAAAAAEFEAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAElEAAAAAAAASUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6795,
					1,
					"insert",
					{
						"characters": "0..<"
					},
					"BAAAABBRAAAAAAAAEVEAAAAAAAAAAAAAEVEAAAAAAAASUQAAAAAAAAAAAAASUQAAAAAAABNRAAAAAAAAAAAAABNRAAAAAAAAFFEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEFEAAAAAAAAQUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6796,
					1,
					"insert",
					{
						"characters": "30"
					},
					"AgAAABRRAAAAAAAAFVEAAAAAAAAAAAAAFVEAAAAAAAAWUQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFFEAAAAAAAAUUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6797,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABZRAAAAAAAAGFEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAFlEAAAAAAAAWUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6798,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABhRAAAAAAAAGlEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGFEAAAAAAAAYUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6799,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAABlRAAAAAAAAG1EAAAAAAAAAAAAAG1EAAAAAAAAdUQAAAAAAAAAAAAAaUQAAAAAAABpRAAAAAAAAAQAAAAkaUQAAAAAAABxRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGVEAAAAAAAAZUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6805,
					1,
					"paste_and_indent",
					null,
					"AQAAABxRAAAAAAAAZlQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHFEAAAAAAAAcUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6811,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAACRRAAAAAAAAJVEAAAAAAAAMAAAAc3RhcnRfaGFuZGxl",
					"AgAAAAAAAAABAAAAJFEAAAAAAAAwUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6819,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAHJRAAAAAAAAclEAAAAAAAACAAAAe31lUQAAAAAAAGVRAAAAAAAADQAAAEVudGl0eV9IYW5kbGU",
					"AgAAAAAAAAABAAAAdFEAAAAAAAB0UQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6820,
					1,
					"insert",
					{
						"characters": "end_handle"
					},
					"CgAAAGVRAAAAAAAAZlEAAAAAAAAAAAAAZlEAAAAAAABnUQAAAAAAAAAAAABnUQAAAAAAAGhRAAAAAAAAAAAAAGhRAAAAAAAAaVEAAAAAAAAAAAAAaVEAAAAAAABqUQAAAAAAAAAAAABqUQAAAAAAAGtRAAAAAAAAAAAAAGtRAAAAAAAAbFEAAAAAAAAAAAAAbFEAAAAAAABtUQAAAAAAAAAAAABtUQAAAAAAAG5RAAAAAAAAAAAAAG5RAAAAAAAAb1EAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZVEAAAAAAABlUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6825,
					1,
					"left_delete",
					null,
					"AQAAAO9RAAAAAAAA71EAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAA8FEAAAAAAADwUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6826,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAO9RAAAAAAAA8FEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA71EAAAAAAADvUQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6840,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAD6LAAAAAAAAP4sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPosAAAAAAAA+iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6843,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEOLAAAAAAAARIsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQ4sAAAAAAABDiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6846,
					1,
					"left_delete",
					null,
					"AQAAADuLAAAAAAAAO4sAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6847,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAADuLAAAAAAAAPIsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAO4sAAAAAAAA7iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6850,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAEWLAAAAAAAARosAAAAAAAAAAAAARosAAAAAAABHiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARYsAAAAAAABFiwAAAAAAAP///////+9/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6851,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEeLAAAAAAAASIsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAR4sAAAAAAABHiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6852,
					1,
					"left_delete",
					null,
					"AQAAAEeLAAAAAAAAR4sAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAASIsAAAAAAABIiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6853,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAEeLAAAAAAAASIsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAR4sAAAAAAABHiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6854,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAEiLAAAAAAAASYsAAAAAAAAAAAAASYsAAAAAAABKiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASIsAAAAAAABIiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6855,
					1,
					"insert",
					{
						"characters": " dont"
					},
					"BQAAAEqLAAAAAAAAS4sAAAAAAAAAAAAAS4sAAAAAAABMiwAAAAAAAAAAAABMiwAAAAAAAE2LAAAAAAAAAAAAAE2LAAAAAAAATosAAAAAAAAAAAAATosAAAAAAABPiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAASosAAAAAAABKiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6856,
					1,
					"insert",
					{
						"characters": " think"
					},
					"BgAAAE+LAAAAAAAAUIsAAAAAAAAAAAAAUIsAAAAAAABRiwAAAAAAAAAAAABRiwAAAAAAAFKLAAAAAAAAAAAAAFKLAAAAAAAAU4sAAAAAAAAAAAAAU4sAAAAAAABUiwAAAAAAAAAAAABUiwAAAAAAAFWLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAT4sAAAAAAABPiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6857,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAFWLAAAAAAAAVosAAAAAAAAAAAAAVosAAAAAAABXiwAAAAAAAAAAAABXiwAAAAAAAFiLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVYsAAAAAAABViwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6858,
					1,
					"insert",
					{
						"characters": " need"
					},
					"BQAAAFiLAAAAAAAAWYsAAAAAAAAAAAAAWYsAAAAAAABaiwAAAAAAAAAAAABaiwAAAAAAAFuLAAAAAAAAAAAAAFuLAAAAAAAAXIsAAAAAAAAAAAAAXIsAAAAAAABdiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWIsAAAAAAABYiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6859,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAF2LAAAAAAAAXosAAAAAAAAAAAAAXosAAAAAAABfiwAAAAAAAAAAAABfiwAAAAAAAGCLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXYsAAAAAAABdiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6860,
					1,
					"insert",
					{
						"characters": " anymroe."
					},
					"CQAAAGCLAAAAAAAAYYsAAAAAAAAAAAAAYYsAAAAAAABiiwAAAAAAAAAAAABiiwAAAAAAAGOLAAAAAAAAAAAAAGOLAAAAAAAAZIsAAAAAAAAAAAAAZIsAAAAAAABliwAAAAAAAAAAAABliwAAAAAAAGaLAAAAAAAAAAAAAGaLAAAAAAAAZ4sAAAAAAAAAAAAAZ4sAAAAAAABoiwAAAAAAAAAAAABoiwAAAAAAAGmLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYIsAAAAAAABgiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6861,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAGmLAAAAAAAAaosAAAAAAAAAAAAAaosAAAAAAABriwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAaYsAAAAAAABpiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6862,
					1,
					"insert",
					{
						"characters": " just"
					},
					"BQAAAGuLAAAAAAAAbIsAAAAAAAAAAAAAbIsAAAAAAABtiwAAAAAAAAAAAABtiwAAAAAAAG6LAAAAAAAAAAAAAG6LAAAAAAAAb4sAAAAAAAAAAAAAb4sAAAAAAABwiwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAa4sAAAAAAABriwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6863,
					1,
					"insert",
					{
						"characters": " made"
					},
					"BQAAAHCLAAAAAAAAcYsAAAAAAAAAAAAAcYsAAAAAAAByiwAAAAAAAAAAAAByiwAAAAAAAHOLAAAAAAAAAAAAAHOLAAAAAAAAdIsAAAAAAAAAAAAAdIsAAAAAAAB1iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcIsAAAAAAABwiwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6864,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAHWLAAAAAAAAdosAAAAAAAAAAAAAdosAAAAAAAB3iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdYsAAAAAAAB1iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6865,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAHeLAAAAAAAAeIsAAAAAAAAAAAAAeIsAAAAAAAB5iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAd4sAAAAAAAB3iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6866,
					2,
					"left_delete",
					null,
					"AgAAAHiLAAAAAAAAeIsAAAAAAAABAAAAdHeLAAAAAAAAd4sAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAeYsAAAAAAAB5iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6867,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAHeLAAAAAAAAeIsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAd4sAAAAAAAB3iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6868,
					1,
					"insert",
					{
						"characters": " really"
					},
					"BwAAAHiLAAAAAAAAeYsAAAAAAAAAAAAAeYsAAAAAAAB6iwAAAAAAAAAAAAB6iwAAAAAAAHuLAAAAAAAAAAAAAHuLAAAAAAAAfIsAAAAAAAAAAAAAfIsAAAAAAAB9iwAAAAAAAAAAAAB9iwAAAAAAAH6LAAAAAAAAAAAAAH6LAAAAAAAAf4sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAeIsAAAAAAAB4iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6869,
					1,
					"insert",
					{
						"characters": " big"
					},
					"BAAAAH+LAAAAAAAAgIsAAAAAAAAAAAAAgIsAAAAAAACBiwAAAAAAAAAAAACBiwAAAAAAAIKLAAAAAAAAAAAAAIKLAAAAAAAAg4sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAf4sAAAAAAAB/iwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6881,
					1,
					"insert",
					{
						"characters": "\n\nfor"
					},
					"CAAAAFpmAAAAAAAAXWYAAAAAAAAAAAAAW2YAAAAAAABbZgAAAAAAAAIAAAAJCVtmAAAAAAAAXGYAAAAAAAAAAAAAXGYAAAAAAABeZgAAAAAAAAAAAABbZgAAAAAAAFtmAAAAAAAAAQAAAAldZgAAAAAAAF5mAAAAAAAAAAAAAF5mAAAAAAAAX2YAAAAAAAAAAAAAX2YAAAAAAABgZgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWmYAAAAAAABaZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6882,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAGBmAAAAAAAAYWYAAAAAAAAAAAAAYWYAAAAAAABiZgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYGYAAAAAAABgZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6883,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAGJmAAAAAAAAY2YAAAAAAAAAAAAAY2YAAAAAAABkZgAAAAAAAAAAAABkZgAAAAAAAGVmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYmYAAAAAAABiZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6884,
					1,
					"insert",
					{
						"characters": " 0..<"
					},
					"BQAAAGVmAAAAAAAAZmYAAAAAAAAAAAAAZmYAAAAAAABnZgAAAAAAAAAAAABnZgAAAAAAAGhmAAAAAAAAAAAAAGhmAAAAAAAAaWYAAAAAAAAAAAAAaWYAAAAAAABqZgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZWYAAAAAAABlZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6885,
					1,
					"insert",
					{
						"characters": "30"
					},
					"AgAAAGpmAAAAAAAAa2YAAAAAAAAAAAAAa2YAAAAAAABsZgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAamYAAAAAAABqZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6886,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGxmAAAAAAAAbmYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbGYAAAAAAABsZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6887,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG5mAAAAAAAAcGYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbmYAAAAAAABuZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6888,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAG9mAAAAAAAAcWYAAAAAAAAAAAAAcWYAAAAAAABzZgAAAAAAAAAAAABwZgAAAAAAAHBmAAAAAAAAAQAAAAlwZgAAAAAAAHJmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAb2YAAAAAAABvZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6889,
					1,
					"paste",
					null,
					"AQAAAHJmAAAAAAAAqWgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcmYAAAAAAAByZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6895,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAG9mAAAAAAAAcmYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAb2YAAAAAAABvZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6896,
					1,
					"paste",
					null,
					"AQAAAHJmAAAAAAAA5GYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAcmYAAAAAAAByZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6901,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAHpmAAAAAAAAe2YAAAAAAAAMAAAAc3RhcnRfaGFuZGxl",
					"AgAAAAAAAAABAAAAemYAAAAAAACGZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6905,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAMhmAAAAAAAAyGYAAAAAAAACAAAAe327ZgAAAAAAALtmAAAAAAAADQAAAEVudGl0eV9IYW5kbGU",
					"AgAAAAAAAAABAAAAymYAAAAAAADKZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6906,
					1,
					"insert",
					{
						"characters": "end_na"
					},
					"BgAAALtmAAAAAAAAvGYAAAAAAAAAAAAAvGYAAAAAAAC9ZgAAAAAAAAAAAAC9ZgAAAAAAAL5mAAAAAAAAAAAAAL5mAAAAAAAAv2YAAAAAAAAAAAAAv2YAAAAAAADAZgAAAAAAAAAAAADAZgAAAAAAAMFmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAu2YAAAAAAAC7ZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6907,
					2,
					"left_delete",
					null,
					"AgAAAMBmAAAAAAAAwGYAAAAAAAABAAAAYb9mAAAAAAAAv2YAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAwWYAAAAAAADBZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6908,
					1,
					"insert",
					{
						"characters": "handle"
					},
					"BgAAAL9mAAAAAAAAwGYAAAAAAAAAAAAAwGYAAAAAAADBZgAAAAAAAAAAAADBZgAAAAAAAMJmAAAAAAAAAAAAAMJmAAAAAAAAw2YAAAAAAAAAAAAAw2YAAAAAAADEZgAAAAAAAAAAAADEZgAAAAAAAMVmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAv2YAAAAAAAC/ZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6912,
					1,
					"insert",
					{
						"characters": "\n)"
					},
					"AgAAAA5pAAAAAAAAE2kAAAAAAAAAAAAAE2kAAAAAAAAUaQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADmkAAAAAAAAOaQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6919,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANhmAAAAAAAA2WYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2GYAAAAAAADYZgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6924,
					1,
					"unindent",
					null,
					"BQAAAEhnAAAAAAAASGcAAAAAAAABAAAAILpnAAAAAAAAumcAAAAAAAABAAAACSxoAAAAAAAALGgAAAAAAAABAAAACZxoAAAAAAAAnGgAAAAAAAABAAAACQxpAAAAAAAADGkAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAFWkAAAAAAABMZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6926,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEtnAAAAAAAATGcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAS2cAAAAAAABLZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6927,
					2,
					"unindent",
					null,
					"AgAAAEhnAAAAAAAASGcAAAAAAAABAAAACUhnAAAAAAAASGcAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAATGcAAAAAAABMZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6931,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAEtnAAAAAAAATGcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAS2cAAAAAAABLZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6934,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAL1nAAAAAAAAvmcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvWcAAAAAAAC9ZwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6937,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADBoAAAAAAAAMWgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAMGgAAAAAAAAwaAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6940,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKFoAAAAAAAAomgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoWgAAAAAAAChaAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6943,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABNpAAAAAAAAFGkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAE2kAAAAAAAATaQAAAAAAAAAAAAAAgFpAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6945,
					1,
					"unindent",
					null,
					"AQAAAA9pAAAAAAAAD2kAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAEmkAAAAAAAASaQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6946,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABFpAAAAAAAAEmkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEWkAAAAAAAARaQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6952,
					2,
					"left_delete",
					null,
					"AgAAACNbAAAAAAAAI1sAAAAAAAAzCwAACgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjN9LAogCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYsfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2fSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTZ9LAoKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqM30sCiAJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nix9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTZ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nn0sCgoJCQkgCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjN9LAogCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYsfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2fSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTZ9LAoKCQkJIAkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiozfSwKIAkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2LH0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nn0sCgkJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2fSwKCgkJCSAJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqM30sCiAJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nix9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCQkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTZ9LAoJCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nn0sCgoiWwAAAAAAACJbAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAVmYAAAAAAAAjWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6956,
					1,
					"left_delete",
					null,
					"AQAAAORdAAAAAAAA5F0AAAAAAAA3BwAACgkvLyBjdXJzb3IueCArPSAyCgkvLyBjdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCS8vIAkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCS8vIAkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkvLyAJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJLy8gCSkKCS8vIGN1cnNvci54ICs9IDIKCgkvLyBjdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsMH0sIAoJLy8gCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyLH0sCgkvLyAJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJLy8gCQkgRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyfSwKCS8vIAkJIEVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqMn0sCgkvLyAJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50LCAuUGxheV9Tb3VuZF9FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NioyIH0sCgkvLyAJCSBFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJLy8gCSkKCgkvLyBjdXJzb3IueCArPSAyCgkvLyBjdXJzb3IsIF8sIGVuZF9oYW5kbGUgPSBjcmVhdGVfZW50aXRpZXNfd2l0aF9jdXJzb3JfYW5kX3NldF9uZXh0KGN1cnNvciwgZW5kX2hhbmRsZSwgWzJdZjMyezIsIDB9LCAKCS8vIAkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjIgfSwKCS8vIAkJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuVW5pY3ljbGUxLCBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2IH0sCgkvLyAJCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlVuaWN5Y2xlMSwgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5NiB9LAoJLy8gCSkKCS8vIGN1cnNvci54ICs9IDI",
					"AgAAAAAAAAABAAAAG2UAAAAAAADkXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6974,
					1,
					"left_delete",
					null,
					"AQAAAOZ+AAAAAAAA5n4AAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAA534AAAAAAADnfgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					6975,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAOZ+AAAAAAAA534AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5n4AAAAAAADmfgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7004,
					1,
					"left_delete",
					null,
					"AQAAAFVZAAAAAAAAVVkAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAVlkAAAAAAABWWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7005,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAFVZAAAAAAAAVlkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVVkAAAAAAABVWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7044,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAAJ4HAQAAAAAAoAcBAAAAAAAAAAAAoAcBAAAAAAChBwEAAAAAAAAAAAChBwEAAAAAAKIHAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAngcBAAAAAACeBwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7045,
					1,
					"insert",
					{
						"characters": " depending"
					},
					"CgAAAKIHAQAAAAAAowcBAAAAAAAAAAAAowcBAAAAAACkBwEAAAAAAAAAAACkBwEAAAAAAKUHAQAAAAAAAAAAAKUHAQAAAAAApgcBAAAAAAAAAAAApgcBAAAAAACnBwEAAAAAAAAAAACnBwEAAAAAAKgHAQAAAAAAAAAAAKgHAQAAAAAAqQcBAAAAAAAAAAAAqQcBAAAAAACqBwEAAAAAAAAAAACqBwEAAAAAAKsHAQAAAAAAAAAAAKsHAQAAAAAArAcBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAogcBAAAAAACiBwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7046,
					1,
					"insert",
					{
						"characters": " on"
					},
					"AwAAAKwHAQAAAAAArQcBAAAAAAAAAAAArQcBAAAAAACuBwEAAAAAAAAAAACuBwEAAAAAAK8HAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArAcBAAAAAACsBwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7047,
					1,
					"insert",
					{
						"characters": " level,"
					},
					"BwAAAK8HAQAAAAAAsAcBAAAAAAAAAAAAsAcBAAAAAACxBwEAAAAAAAAAAACxBwEAAAAAALIHAQAAAAAAAAAAALIHAQAAAAAAswcBAAAAAAAAAAAAswcBAAAAAAC0BwEAAAAAAAAAAAC0BwEAAAAAALUHAQAAAAAAAAAAALUHAQAAAAAAtgcBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArwcBAAAAAACvBwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7048,
					1,
					"insert",
					{
						"characters": " set"
					},
					"BAAAALYHAQAAAAAAtwcBAAAAAAAAAAAAtwcBAAAAAAC4BwEAAAAAAAAAAAC4BwEAAAAAALkHAQAAAAAAAAAAALkHAQAAAAAAugcBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAtgcBAAAAAAC2BwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7049,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAALoHAQAAAAAAuwcBAAAAAAAAAAAAuwcBAAAAAAC8BwEAAAAAAAAAAAC8BwEAAAAAAL0HAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAugcBAAAAAAC6BwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7050,
					1,
					"insert",
					{
						"characters": " here"
					},
					"BQAAAL0HAQAAAAAAvgcBAAAAAAAAAAAAvgcBAAAAAAC/BwEAAAAAAAAAAAC/BwEAAAAAAMAHAQAAAAAAAAAAAMAHAQAAAAAAwQcBAAAAAAAAAAAAwQcBAAAAAADCBwEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAvQcBAAAAAAC9BwEAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7073,
					1,
					"reindent",
					null,
					"AQAAANd7AAAAAAAA2HsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA13sAAAAAAADXewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7074,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANh7AAAAAAAA2nsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2HsAAAAAAADYewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7075,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAANl7AAAAAAAA23sAAAAAAAAAAAAA23sAAAAAAADdewAAAAAAAAAAAADaewAAAAAAANp7AAAAAAAAAQAAAAnaewAAAAAAANx7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2XsAAAAAAADZewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7077,
					1,
					"insert",
					{
						"characters": " //"
					},
					"BAAAANl7AAAAAAAA2nsAAAAAAAAAAAAA23sAAAAAAADbewAAAAAAAAIAAAAJCdp7AAAAAAAA23sAAAAAAAAAAAAA23sAAAAAAADcewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2XsAAAAAAADZewAAAAAAAAAAAAAAgFFAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7078,
					1,
					"insert",
					{
						"characters": " check"
					},
					"BgAAANx7AAAAAAAA3XsAAAAAAAAAAAAA3XsAAAAAAADeewAAAAAAAAAAAADeewAAAAAAAN97AAAAAAAAAAAAAN97AAAAAAAA4HsAAAAAAAAAAAAA4HsAAAAAAADhewAAAAAAAAAAAADhewAAAAAAAOJ7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3HsAAAAAAADcewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7079,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAAOJ7AAAAAAAA43sAAAAAAAAAAAAA43sAAAAAAADkewAAAAAAAAAAAADkewAAAAAAAOV7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA4nsAAAAAAADiewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7080,
					1,
					"insert",
					{
						"characters": " track"
					},
					"BgAAAOV7AAAAAAAA5nsAAAAAAAAAAAAA5nsAAAAAAADnewAAAAAAAAAAAADnewAAAAAAAOh7AAAAAAAAAAAAAOh7AAAAAAAA6XsAAAAAAAAAAAAA6XsAAAAAAADqewAAAAAAAAAAAADqewAAAAAAAOt7AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5XsAAAAAAADlewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7081,
					1,
					"insert",
					{
						"characters": " over"
					},
					"BQAAAOt7AAAAAAAA7HsAAAAAAAAAAAAA7HsAAAAAAADtewAAAAAAAAAAAADtewAAAAAAAO57AAAAAAAAAAAAAO57AAAAAAAA73sAAAAAAAAAAAAA73sAAAAAAADwewAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA63sAAAAAAADrewAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7103,
					1,
					"indent",
					null,
					"FAAAAPV7AAAAAAAA9nsAAAAAAAAAAAAALHwAAAAAAAAtfAAAAAAAAAAAAABpfAAAAAAAAGp8AAAAAAAAAAAAAGx8AAAAAAAAbXwAAAAAAAAAAAAAP30AAAAAAABAfQAAAAAAAAAAAABCfQAAAAAAAEN9AAAAAAAAAAAAAFV9AAAAAAAAVn0AAAAAAAAAAAAAWX0AAAAAAABafQAAAAAAAAAAAAB3fQAAAAAAAHh9AAAAAAAAAAAAAJp9AAAAAAAAm30AAAAAAAAAAAAAsn0AAAAAAACzfQAAAAAAAAAAAAC3fQAAAAAAALh9AAAAAAAAAAAAAMx9AAAAAAAAzX0AAAAAAAAAAAAA4X0AAAAAAADifQAAAAAAAAAAAADmfQAAAAAAAOd9AAAAAAAAAAAAAAN+AAAAAAAABH4AAAAAAAAAAAAACH4AAAAAAAAJfgAAAAAAAAAAAAAdfgAAAAAAAB5+AAAAAAAAAAAAADJ+AAAAAAAAM34AAAAAAAAAAAAAN34AAAAAAAA4fgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA9XsAAAAAAAAnfgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7104,
					1,
					"cut",
					null,
					"AQAAAPV7AAAAAAAA9XsAAAAAAABGAgAACQlsZW5ndGhfb2ZfdHJhY2sgOj0gcmwuR2V0TXVzaWNUaW1lTGVuZ3RoKGdtZW0ubXVzaWMpCgkJY3VycmVudF90aW1lX2luX3RyYWNrIDo9IHJsLkdldE11c2ljVGltZVBsYXllZChnbWVtLm11c2ljKQoJCQoJCW11c2ljX2lzX292ZXIgOj0gY3VycmVudF90aW1lX2luX3RyYWNrICsgMC4zID49IGxlbmd0aF9vZl90cmFjayAvLyBhZGRlZCBhZGRpdGlvbmFsIHRpbWUgaGVyZSBiZWNhdXNlIHJheWxpYiB3aWxsIHdhbnQgdG8gbG9vcCB0aGUgc29uZyBhbmQgaW0gbm90IHF1aXRlIHN1cmUgaWYgdGhlcmUgYSB3YXkgdG8gdGVsbCBpZiB0aGUgc29uZyBqdXN0IGZpbmlzZWQuLi4KCQkKCQlpZiBtdXNpY19pc19vdmVyCgkJewoJCQkvLyBoYW5kbGUgdGhpcyBjYXNlIGJldHRlcgoJCQlnbWVtLnRyYWNrX3RpbWVfbXNfcHJldmlvdXMgPSAwCgkJCWlmIGxldmVsX251bWJlciA9PSAzCgkJCXsKCQkJCWxldmVsX251bWJlciA9IDQKCQkJCWNyZWF0ZV9sZXZlbF80KCkKCQkJfQoJCQllbHNlIGlmIGxldmVsX251bWJlciA9PSA0CgkJCXsKCQkJCWxldmVsX251bWJlciA9IDMKCQkJCWNyZWF0ZV9sZXZlbF8zKCkKCQkJfQoJCX0K",
					"AgAAAAAAAAABAAAA9XsAAAAAAAA7fgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7106,
					1,
					"paste_and_indent",
					null,
					"AQAAAPF7AAAAAAAAN34AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA8XsAAAAAAADxewAAAAAAAAAAAAAAAAAAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7108,
					1,
					"left_delete",
					null,
					"AQAAADZ+AAAAAAAANn4AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAN34AAAAAAAA3fgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7114,
					1,
					"insert",
					{
						"characters": "\ncalibrat"
					},
					"CQAAAOqmAAAAAAAA9KYAAAAAAAAAAAAA9KYAAAAAAAD1pgAAAAAAAAAAAAD1pgAAAAAAAPamAAAAAAAAAAAAAPamAAAAAAAA96YAAAAAAAAAAAAA96YAAAAAAAD4pgAAAAAAAAAAAAD4pgAAAAAAAPmmAAAAAAAAAAAAAPmmAAAAAAAA+qYAAAAAAAAAAAAA+qYAAAAAAAD7pgAAAAAAAAAAAAD7pgAAAAAAAPymAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6qYAAAAAAADqpgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7115,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAPymAAAAAAAA/aYAAAAAAAAAAAAA/aYAAAAAAAD+pgAAAAAAAAAAAAD+pgAAAAAAAP+mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/KYAAAAAAAD8pgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7116,
					1,
					"insert",
					{
						"characters": "_adjust"
					},
					"BwAAAP+mAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAABpwAAAAAAAAAAAAABpwAAAAAAAAKnAAAAAAAAAAAAAAKnAAAAAAAAA6cAAAAAAAAAAAAAA6cAAAAAAAAEpwAAAAAAAAAAAAAEpwAAAAAAAAWnAAAAAAAAAAAAAAWnAAAAAAAABqcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA/6YAAAAAAAD/pgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7117,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAAanAAAAAAAAB6cAAAAAAAAAAAAAB6cAAAAAAAAIpwAAAAAAAAAAAAAIpwAAAAAAAAmnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABqcAAAAAAAAGpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7118,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAmnAAAAAAAACqcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACacAAAAAAAAJpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7119,
					1,
					"insert",
					{
						"characters": "0."
					},
					"AgAAAAqnAAAAAAAAC6cAAAAAAAAAAAAAC6cAAAAAAAAMpwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACqcAAAAAAAAKpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7120,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAAynAAAAAAAADacAAAAAAAAAAAAADacAAAAAAAAOpwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADKcAAAAAAAAMpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7122,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAAynAAAAAAAADKcAAAAAAAACAAAAMTYLpwAAAAAAAAunAAAAAAAAAQAAAC4",
					"AgAAAAAAAAABAAAADqcAAAAAAAAOpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7123,
					1,
					"left_delete",
					null,
					"AQAAAAqnAAAAAAAACqcAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAC6cAAAAAAAALpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7124,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAAqnAAAAAAAAC6cAAAAAAAAAAAAAC6cAAAAAAAAMpwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACqcAAAAAAAAKpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7126,
					1,
					"insert",
					{
						"characters": "\ntracjk"
					},
					"BwAAAAynAAAAAAAAFqcAAAAAAAAAAAAAFqcAAAAAAAAXpwAAAAAAAAAAAAAXpwAAAAAAABinAAAAAAAAAAAAABinAAAAAAAAGacAAAAAAAAAAAAAGacAAAAAAAAapwAAAAAAAAAAAAAapwAAAAAAABunAAAAAAAAAAAAABunAAAAAAAAHKcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADKcAAAAAAAAMpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7127,
					2,
					"left_delete",
					null,
					"AgAAABunAAAAAAAAG6cAAAAAAAABAAAAaxqnAAAAAAAAGqcAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAHKcAAAAAAAAcpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7128,
					1,
					"insert",
					{
						"characters": "K-tim"
					},
					"BQAAABqnAAAAAAAAG6cAAAAAAAAAAAAAG6cAAAAAAAAcpwAAAAAAAAAAAAAcpwAAAAAAAB2nAAAAAAAAAAAAAB2nAAAAAAAAHqcAAAAAAAAAAAAAHqcAAAAAAAAfpwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGqcAAAAAAAAapwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7129,
					5,
					"left_delete",
					null,
					"BQAAAB6nAAAAAAAAHqcAAAAAAAABAAAAbR2nAAAAAAAAHacAAAAAAAABAAAAaRynAAAAAAAAHKcAAAAAAAABAAAAdBunAAAAAAAAG6cAAAAAAAABAAAALRqnAAAAAAAAGqcAAAAAAAABAAAASw",
					"AgAAAAAAAAABAAAAH6cAAAAAAAAfpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7130,
					1,
					"insert",
					{
						"characters": "k_time_ms_c"
					},
					"CwAAABqnAAAAAAAAG6cAAAAAAAAAAAAAG6cAAAAAAAAcpwAAAAAAAAAAAAAcpwAAAAAAAB2nAAAAAAAAAAAAAB2nAAAAAAAAHqcAAAAAAAAAAAAAHqcAAAAAAAAfpwAAAAAAAAAAAAAfpwAAAAAAACCnAAAAAAAAAAAAACCnAAAAAAAAIacAAAAAAAAAAAAAIacAAAAAAAAipwAAAAAAAAAAAAAipwAAAAAAACOnAAAAAAAAAAAAACOnAAAAAAAAJKcAAAAAAAAAAAAAJKcAAAAAAAAlpwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGqcAAAAAAAAapwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7131,
					1,
					"insert",
					{
						"characters": "urrent"
					},
					"BgAAACWnAAAAAAAAJqcAAAAAAAAAAAAAJqcAAAAAAAAnpwAAAAAAAAAAAAAnpwAAAAAAACinAAAAAAAAAAAAACinAAAAAAAAKacAAAAAAAAAAAAAKacAAAAAAAAqpwAAAAAAAAAAAAAqpwAAAAAAACunAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJacAAAAAAAAlpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7132,
					1,
					"insert",
					{
						"characters": " -="
					},
					"AwAAACunAAAAAAAALKcAAAAAAAAAAAAALKcAAAAAAAAtpwAAAAAAAAAAAAAtpwAAAAAAAC6nAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAK6cAAAAAAAArpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7133,
					1,
					"insert",
					{
						"characters": " calibration"
					},
					"DAAAAC6nAAAAAAAAL6cAAAAAAAAAAAAAL6cAAAAAAAAwpwAAAAAAAAAAAAAwpwAAAAAAADGnAAAAAAAAAAAAADGnAAAAAAAAMqcAAAAAAAAAAAAAMqcAAAAAAAAzpwAAAAAAAAAAAAAzpwAAAAAAADSnAAAAAAAAAAAAADSnAAAAAAAANacAAAAAAAAAAAAANacAAAAAAAA2pwAAAAAAAAAAAAA2pwAAAAAAADenAAAAAAAAAAAAADenAAAAAAAAOKcAAAAAAAAAAAAAOKcAAAAAAAA5pwAAAAAAAAAAAAA5pwAAAAAAADqnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAALqcAAAAAAAAupwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7134,
					1,
					"insert",
					{
						"characters": "_adjust"
					},
					"BwAAADqnAAAAAAAAO6cAAAAAAAAAAAAAO6cAAAAAAAA8pwAAAAAAAAAAAAA8pwAAAAAAAD2nAAAAAAAAAAAAAD2nAAAAAAAAPqcAAAAAAAAAAAAAPqcAAAAAAAA/pwAAAAAAAAAAAAA/pwAAAAAAAECnAAAAAAAAAAAAAECnAAAAAAAAQacAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOqcAAAAAAAA6pwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7139,
					1,
					"insert",
					{
						"characters": "u64("
					},
					"BAAAAAqnAAAAAAAAC6cAAAAAAAAAAAAAC6cAAAAAAAAMpwAAAAAAAAAAAAAMpwAAAAAAAA2nAAAAAAAAAAAAAA2nAAAAAAAADqcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACqcAAAAAAAAKpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7141,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABCnAAAAAAAAEacAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAEKcAAAAAAAAQpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7148,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKmxAAAAAAAAqrEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqbEAAAAAAACpsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7149,
					1,
					"paste",
					null,
					"AQAAAKqxAAAAAAAABrIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAqrEAAAAAAACqsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7155,
					2,
					"left_delete",
					null,
					"AgAAAM6xAAAAAAAAzrEAAAAAAAABAAAANs2xAAAAAAAAzbEAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAz7EAAAAAAADPsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7156,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAM2xAAAAAAAAzrEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzbEAAAAAAADNsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7159,
					2,
					"left_delete",
					null,
					"AgAAAA+nAAAAAAAAD6cAAAAAAAABAAAANg6nAAAAAAAADqcAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAEKcAAAAAAAAQpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7160,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAA6nAAAAAAAAD6cAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADqcAAAAAAAAOpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7167,
					1,
					"left_delete",
					null,
					"AQAAAA6nAAAAAAAADqcAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAD6cAAAAAAAAPpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7168,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAA6nAAAAAAAAD6cAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADqcAAAAAAAAOpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7185,
					1,
					"left_delete",
					null,
					"AQAAAMyxAAAAAAAAzLEAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAzbEAAAAAAADNsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7186,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMyxAAAAAAAAzbEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzLEAAAAAAADMsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7194,
					2,
					"left_delete",
					null,
					"AgAAAFuzAAAAAAAAW7MAAAAAAAATAAAALyByb3VnaGx5IDEwIGZyYW1lc1qzAAAAAAAAWrMAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAbrMAAAAAAABbswAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7197,
					3,
					"left_delete",
					null,
					"AwAAAGeyAAAAAAAAZ7IAAAAAAAATAAAALyByb3VnaGx5IDEwIGZyYW1lc2ayAAAAAAAAZrIAAAAAAAABAAAAL2WyAAAAAAAAZbIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAerIAAAAAAABnsgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7233,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAA+nAAAAAAAAEKcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAD6cAAAAAAAAPpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7234,
					2,
					"left_delete",
					null,
					"AgAAAA+nAAAAAAAAD6cAAAAAAAABAAAAMw6nAAAAAAAADqcAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAEKcAAAAAAAAQpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7235,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAA6nAAAAAAAAD6cAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAADqcAAAAAAAAOpwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7252,
					1,
					"left_delete",
					null,
					"AQAAAMyxAAAAAAAAzLEAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAzbEAAAAAAADNsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7253,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMyxAAAAAAAAzbEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzLEAAAAAAADMsQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7267,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAD19AAAAAAAAQH0AAAAAAAAAAAAAQH0AAAAAAABDfQAAAAAAAAAAAAA+fQAAAAAAAD59AAAAAAAAAgAAAAkJ",
					"AgAAAAAAAAABAAAAPX0AAAAAAAA9fQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7269,
					1,
					"reindent",
					null,
					"AQAAAD59AAAAAAAAQH0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAPn0AAAAAAAA+fQAAAAAAAAAAAAAAgFFAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7270,
					1,
					"insert",
					{
						"characters": "force_other"
					},
					"DAAAAEB9AAAAAAAAQX0AAAAAAAAAAAAAQn0AAAAAAABCfQAAAAAAAAIAAAAJCUF9AAAAAAAAQn0AAAAAAAAAAAAAQn0AAAAAAABDfQAAAAAAAAAAAABDfQAAAAAAAER9AAAAAAAAAAAAAER9AAAAAAAARX0AAAAAAAAAAAAARX0AAAAAAABGfQAAAAAAAAAAAABGfQAAAAAAAEd9AAAAAAAAAAAAAEd9AAAAAAAASH0AAAAAAAAAAAAASH0AAAAAAABJfQAAAAAAAAAAAABJfQAAAAAAAEp9AAAAAAAAAAAAAEp9AAAAAAAAS30AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQH0AAAAAAABAfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7271,
					1,
					"insert",
					{
						"characters": "_level"
					},
					"BgAAAEt9AAAAAAAATH0AAAAAAAAAAAAATH0AAAAAAABNfQAAAAAAAAAAAABNfQAAAAAAAE59AAAAAAAAAAAAAE59AAAAAAAAT30AAAAAAAAAAAAAT30AAAAAAABQfQAAAAAAAAAAAABQfQAAAAAAAFF9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAS30AAAAAAABLfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7272,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAFF9AAAAAAAAUn0AAAAAAAAAAAAAUn0AAAAAAABTfQAAAAAAAAAAAABTfQAAAAAAAFR9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAUX0AAAAAAABRfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7273,
					1,
					"insert",
					{
						"characters": " rl.Is"
					},
					"BgAAAFR9AAAAAAAAVX0AAAAAAAAAAAAAVX0AAAAAAABWfQAAAAAAAAAAAABWfQAAAAAAAFd9AAAAAAAAAAAAAFd9AAAAAAAAWH0AAAAAAAAAAAAAWH0AAAAAAABZfQAAAAAAAAAAAABZfQAAAAAAAFp9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVH0AAAAAAABUfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7274,
					1,
					"insert",
					{
						"characters": "KeyPResse"
					},
					"CQAAAFp9AAAAAAAAW30AAAAAAAAAAAAAW30AAAAAAABcfQAAAAAAAAAAAABcfQAAAAAAAF19AAAAAAAAAAAAAF19AAAAAAAAXn0AAAAAAAAAAAAAXn0AAAAAAABffQAAAAAAAAAAAABffQAAAAAAAGB9AAAAAAAAAAAAAGB9AAAAAAAAYX0AAAAAAAAAAAAAYX0AAAAAAABifQAAAAAAAAAAAABifQAAAAAAAGN9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAWn0AAAAAAABafQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7275,
					5,
					"left_delete",
					null,
					"BQAAAGJ9AAAAAAAAYn0AAAAAAAABAAAAZWF9AAAAAAAAYX0AAAAAAAABAAAAc2B9AAAAAAAAYH0AAAAAAAABAAAAc199AAAAAAAAX30AAAAAAAABAAAAZV59AAAAAAAAXn0AAAAAAAABAAAAUg",
					"AgAAAAAAAAABAAAAY30AAAAAAABjfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7276,
					1,
					"insert",
					{
						"characters": "ressed"
					},
					"BgAAAF59AAAAAAAAX30AAAAAAAAAAAAAX30AAAAAAABgfQAAAAAAAAAAAABgfQAAAAAAAGF9AAAAAAAAAAAAAGF9AAAAAAAAYn0AAAAAAAAAAAAAYn0AAAAAAABjfQAAAAAAAAAAAABjfQAAAAAAAGR9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAXn0AAAAAAABefQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7277,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGR9AAAAAAAAZn0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZH0AAAAAAABkfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7278,
					1,
					"insert",
					{
						"characters": ".L"
					},
					"AgAAAGV9AAAAAAAAZn0AAAAAAAAAAAAAZn0AAAAAAABnfQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZX0AAAAAAABlfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7281,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAHx9AAAAAAAAfX0AAAAAAAAAAAAAfX0AAAAAAAB+fQAAAAAAAAAAAAB+fQAAAAAAAH99AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAfH0AAAAAAAB8fQAAAAAAAAAAAAAAYHpAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7282,
					1,
					"insert",
					{
						"characters": " force_other"
					},
					"DAAAAH99AAAAAAAAgH0AAAAAAAAAAAAAgH0AAAAAAACBfQAAAAAAAAAAAACBfQAAAAAAAIJ9AAAAAAAAAAAAAIJ9AAAAAAAAg30AAAAAAAAAAAAAg30AAAAAAACEfQAAAAAAAAAAAACEfQAAAAAAAIV9AAAAAAAAAAAAAIV9AAAAAAAAhn0AAAAAAAAAAAAAhn0AAAAAAACHfQAAAAAAAAAAAACHfQAAAAAAAIh9AAAAAAAAAAAAAIh9AAAAAAAAiX0AAAAAAAAAAAAAiX0AAAAAAACKfQAAAAAAAAAAAACKfQAAAAAAAIt9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAf30AAAAAAAB/fQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7283,
					1,
					"insert",
					{
						"characters": "_level"
					},
					"BgAAAIt9AAAAAAAAjH0AAAAAAAAAAAAAjH0AAAAAAACNfQAAAAAAAAAAAACNfQAAAAAAAI59AAAAAAAAAAAAAI59AAAAAAAAj30AAAAAAAAAAAAAj30AAAAAAACQfQAAAAAAAAAAAACQfQAAAAAAAJF9AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAi30AAAAAAACLfQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7310,
					1,
					"insert",
					{
						"characters": "\n)"
					},
					"AgAAAMpZAAAAAAAAz1kAAAAAAAAAAAAAz1kAAAAAAADQWQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAylkAAAAAAADKWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7312,
					1,
					"unindent",
					null,
					"AQAAAMtZAAAAAAAAy1kAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAz1kAAAAAAADPWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7314,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAM9ZAAAAAAAA01kAAAAAAAAAAAAA0FkAAAAAAADQWQAAAAAAAAMAAAAJCSDQWQAAAAAAANFZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAz1kAAAAAAADPWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7322,
					1,
					"paste",
					null,
					"AQAAANNZAAAAAAAARVoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA01kAAAAAAADTWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7326,
					1,
					"insert",
					{
						"characters": "cursor.x"
					},
					"CAAAANFZAAAAAAAA0lkAAAAAAAAAAAAA0lkAAAAAAADTWQAAAAAAAAAAAADTWQAAAAAAANRZAAAAAAAAAAAAANRZAAAAAAAA1VkAAAAAAAAAAAAA1VkAAAAAAADWWQAAAAAAAAAAAADWWQAAAAAAANdZAAAAAAAAAAAAANdZAAAAAAAA2FkAAAAAAAAAAAAA2FkAAAAAAADZWQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA0VkAAAAAAADRWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7327,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAANlZAAAAAAAA2lkAAAAAAAAAAAAA2lkAAAAAAADbWQAAAAAAAAAAAADbWQAAAAAAANxZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA2VkAAAAAAADZWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7328,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAANxZAAAAAAAA3VkAAAAAAAAAAAAA3VkAAAAAAADeWQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA3FkAAAAAAADcWQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7333,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"BAAAAFVaAAAAAAAAV1oAAAAAAAAAAAAAVloAAAAAAABWWgAAAAAAAAEAAAAJVloAAAAAAABYWgAAAAAAAAAAAABYWgAAAAAAAFlaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAVVoAAAAAAABVWgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7340,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAGpeAAAAAAAAbl4AAAAAAAAAAAAAbl4AAAAAAAByXgAAAAAAAAAAAABrXgAAAAAAAGteAAAAAAAAAwAAAAkgCQ",
					"AgAAAAAAAAABAAAAal4AAAAAAABqXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7341,
					1,
					"paste",
					null,
					"AQAAAG9eAAAAAAAArWEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAb14AAAAAAABvXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7344,
					1,
					"indent",
					null,
					"BgAAAMxfAAAAAAAAzV8AAAAAAAAAAAAA3F8AAAAAAADdXwAAAAAAAAAAAABUYAAAAAAAAFVgAAAAAAAAAAAAAMdgAAAAAAAAyGAAAAAAAAAAAAAAOWEAAAAAAAA6YQAAAAAAAAAAAACuYQAAAAAAAK9hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAzV8AAAAAAACsYQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7353,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAEFaAAAAAAAAQVoAAAAAAAACAAAAe300WgAAAAAAADRaAAAAAAAADQAAAEVudGl0eV9IYW5kbGU",
					"AgAAAAAAAAABAAAAQ1oAAAAAAABDWgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7354,
					1,
					"insert",
					{
						"characters": "END_HANDLE"
					},
					"CgAAADRaAAAAAAAANVoAAAAAAAAAAAAANVoAAAAAAAA2WgAAAAAAAAAAAAA2WgAAAAAAADdaAAAAAAAAAAAAADdaAAAAAAAAOFoAAAAAAAAAAAAAOFoAAAAAAAA5WgAAAAAAAAAAAAA5WgAAAAAAADpaAAAAAAAAAAAAADpaAAAAAAAAO1oAAAAAAAAAAAAAO1oAAAAAAAA8WgAAAAAAAAAAAAA8WgAAAAAAAD1aAAAAAAAAAAAAAD1aAAAAAAAAPloAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANFoAAAAAAAA0WgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7355,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADRaAAAAAAAANFoAAAAAAAAKAAAARU5EX0hBTkRMRQ",
					"AgAAAAAAAAABAAAAPloAAAAAAAA+WgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7356,
					1,
					"insert",
					{
						"characters": "end_handle"
					},
					"CgAAADRaAAAAAAAANVoAAAAAAAAAAAAANVoAAAAAAAA2WgAAAAAAAAAAAAA2WgAAAAAAADdaAAAAAAAAAAAAADdaAAAAAAAAOFoAAAAAAAAAAAAAOFoAAAAAAAA5WgAAAAAAAAAAAAA5WgAAAAAAADpaAAAAAAAAAAAAADpaAAAAAAAAO1oAAAAAAAAAAAAAO1oAAAAAAAA8WgAAAAAAAAAAAAA8WgAAAAAAAD1aAAAAAAAAAAAAAD1aAAAAAAAAPloAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANFoAAAAAAAA0WgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7361,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOhZAAAAAAAA6VkAAAAAAAAMAAAAc3RhcnRfaGFuZGxl",
					"AgAAAAAAAAABAAAA6FkAAAAAAAD0WQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7367,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAMBeAAAAAAAAwF4AAAAAAAACAAAAe32zXgAAAAAAALNeAAAAAAAADQAAAEVudGl0eV9IYW5kbGU",
					"AgAAAAAAAAABAAAAwl4AAAAAAADCXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7368,
					1,
					"insert",
					{
						"characters": "end_handle"
					},
					"CgAAALNeAAAAAAAAtF4AAAAAAAAAAAAAtF4AAAAAAAC1XgAAAAAAAAAAAAC1XgAAAAAAALZeAAAAAAAAAAAAALZeAAAAAAAAt14AAAAAAAAAAAAAt14AAAAAAAC4XgAAAAAAAAAAAAC4XgAAAAAAALleAAAAAAAAAAAAALleAAAAAAAAul4AAAAAAAAAAAAAul4AAAAAAAC7XgAAAAAAAAAAAAC7XgAAAAAAALxeAAAAAAAAAAAAALxeAAAAAAAAvV4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAs14AAAAAAACzXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7377,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAACpgAAAAAAAAKmAAAAAAAAACAAAAe30dYAAAAAAAAB1gAAAAAAAADQAAAEVudGl0eV9IYW5kbGU",
					"AgAAAAAAAAABAAAALGAAAAAAAAAsYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7378,
					1,
					"insert",
					{
						"characters": "end_handle"
					},
					"CgAAAB1gAAAAAAAAHmAAAAAAAAAAAAAAHmAAAAAAAAAfYAAAAAAAAAAAAAAfYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAIWAAAAAAAAAAAAAAIWAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAACNgAAAAAAAAAAAAACNgAAAAAAAAJGAAAAAAAAAAAAAAJGAAAAAAAAAlYAAAAAAAAAAAAAAlYAAAAAAAACZgAAAAAAAAAAAAACZgAAAAAAAAJ2AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHWAAAAAAAAAdYAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7382,
					1,
					"left_delete",
					null,
					"AQAAALVbAAAAAAAAtVsAAAAAAAClAgAACgkJY3Vyc29yLCBfLCBlbmRfaGFuZGxlID0gY3JlYXRlX2VudGl0aWVzX3dpdGhfY3Vyc29yX2FuZF9zZXRfbmV4dChjdXJzb3IsIGVuZF9oYW5kbGUsIFsyXWYzMnsyLDB9LCAKCQkgCUVudGl0eSB7IHNwcml0ZV9kYXRhID0gLlBlcnNvbiwgIGJlaGF2aW9ycyA9IHsuRmFjZV9CaXNjdWl0LCAuTXVzaWNfRXZlbnR9LCBkZWx0YV90aW1lX2luX211c2ljX3RpY2tzID0gOTYqM30sCgkJIAlFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2LH0sCgkJIAlFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2KjJ9LAoJCSAJRW50aXR5IHsgc3ByaXRlX2RhdGEgPSAuUGVyc29uLCAgYmVoYXZpb3JzID0gey5GYWNlX0Jpc2N1aXQsIC5NdXNpY19FdmVudH0sIGRlbHRhX3RpbWVfaW5fbXVzaWNfdGlja3MgPSA5Nn0sCgkJIAlFbnRpdHkgeyBzcHJpdGVfZGF0YSA9IC5QZXJzb24sICBiZWhhdmlvcnMgPSB7LkZhY2VfQmlzY3VpdCwgLk11c2ljX0V2ZW50fSwgZGVsdGFfdGltZV9pbl9tdXNpY190aWNrcyA9IDk2fSwKCSAJKQk",
					"AgAAAAAAAAABAAAAWl4AAAAAAAC1WwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7385,
					1,
					"left_delete",
					null,
					"AQAAALVbAAAAAAAAtVsAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAtlsAAAAAAAC2WwAAAAAAAAAAAAAAAEZAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7395,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAMFbAAAAAAAAwlsAAAAAAAAMAAAAc3RhcnRfaGFuZGxl",
					"AgAAAAAAAAABAAAAwVsAAAAAAADNWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7398,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAACBdAAAAAAAAIV0AAAAAAAAMAAAAc3RhcnRfaGFuZGxl",
					"AgAAAAAAAAABAAAAIF0AAAAAAAAsXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7404,
					1,
					"left_delete",
					null,
					"AQAAANpeAAAAAAAA2l4AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAA214AAAAAAADbXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7406,
					1,
					"insert",
					{
						"characters": "\ncursor.x"
					},
					"CQAAANteAAAAAAAA3l4AAAAAAAAAAAAA3l4AAAAAAADfXgAAAAAAAAAAAADfXgAAAAAAAOBeAAAAAAAAAAAAAOBeAAAAAAAA4V4AAAAAAAAAAAAA4V4AAAAAAADiXgAAAAAAAAAAAADiXgAAAAAAAONeAAAAAAAAAAAAAONeAAAAAAAA5F4AAAAAAAAAAAAA5F4AAAAAAADlXgAAAAAAAAAAAADlXgAAAAAAAOZeAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA214AAAAAAADbXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7407,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAAOZeAAAAAAAA514AAAAAAAAAAAAA514AAAAAAADoXgAAAAAAAAAAAADoXgAAAAAAAOleAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA5l4AAAAAAADmXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7408,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAOleAAAAAAAA6l4AAAAAAAAAAAAA6l4AAAAAAADrXgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA6V4AAAAAAADpXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7412,
					1,
					"left_delete",
					null,
					"AQAAAItcAAAAAAAAi1wAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAjFwAAAAAAACMXAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7413,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAItcAAAAAAAAjFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAi1wAAAAAAACLXAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7420,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKBbAAAAAAAAo1sAAAAAAAAAAAAAoVsAAAAAAAChWwAAAAAAAAIAAAAJCaFbAAAAAAAAolsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAoFsAAAAAAACgWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7421,
					1,
					"paste",
					null,
					"AQAAAKFbAAAAAAAAsFsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAolsAAAAAAACiWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7439,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"BAAAAGK1AAAAAAAAY7UAAAAAAAAAAAAAsFsAAAAAAACwWwAAAAAAAAEAAAAJYrUAAAAAAABjtQAAAAAAAAAAAABjtQAAAAAAAGS1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAYrUAAAAAAABitQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7440,
					1,
					"insert",
					{
						"characters": " rl.IsKey"
					},
					"CQAAAGS1AAAAAAAAZbUAAAAAAAAAAAAAZbUAAAAAAABmtQAAAAAAAAAAAABmtQAAAAAAAGe1AAAAAAAAAAAAAGe1AAAAAAAAaLUAAAAAAAAAAAAAaLUAAAAAAABptQAAAAAAAAAAAABptQAAAAAAAGq1AAAAAAAAAAAAAGq1AAAAAAAAa7UAAAAAAAAAAAAAa7UAAAAAAABstQAAAAAAAAAAAABstQAAAAAAAG21AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAZLUAAAAAAABktQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7441,
					1,
					"insert",
					{
						"characters": "Pressed"
					},
					"BwAAAG21AAAAAAAAbrUAAAAAAAAAAAAAbrUAAAAAAABvtQAAAAAAAAAAAABvtQAAAAAAAHC1AAAAAAAAAAAAAHC1AAAAAAAAcbUAAAAAAAAAAAAAcbUAAAAAAABytQAAAAAAAAAAAABytQAAAAAAAHO1AAAAAAAAAAAAAHO1AAAAAAAAdLUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAbbUAAAAAAABttQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7442,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHS1AAAAAAAAdrUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdLUAAAAAAAB0tQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7443,
					1,
					"insert",
					{
						"characters": ".UP"
					},
					"AwAAAHW1AAAAAAAAdrUAAAAAAAAAAAAAdrUAAAAAAAB3tQAAAAAAAAAAAAB3tQAAAAAAAHi1AAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAdbUAAAAAAAB1tQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7449,
					1,
					"left_delete",
					null,
					"AQAAAPpeAAAAAAAA+l4AAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAA+14AAAAAAAD7XgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7450,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAPpeAAAAAAAA+14AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+l4AAAAAAAD6XgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7456,
					1,
					"left_delete",
					null,
					"AQAAAK5bAAAAAAAArlsAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAr1sAAAAAAACvWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7457,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAK5bAAAAAAAAr1sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArlsAAAAAAACuWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7459,
					1,
					"left_delete",
					null,
					"AQAAAK5bAAAAAAAArlsAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAr1sAAAAAAACvWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7460,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAK5bAAAAAAAAr1sAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAArlsAAAAAAACuWwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7465,
					2,
					"left_delete",
					null,
					"AgAAAPteAAAAAAAA+14AAAAAAAABAAAACvpeAAAAAAAA+l4AAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAA/F4AAAAAAAD7XgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7466,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAPpeAAAAAAAA+14AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAA+l4AAAAAAAD6XgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7473,
					1,
					"insert",
					{
						"characters": "\n)"
					},
					"AgAAAABeAAAAAAAABV4AAAAAAAAAAAAABV4AAAAAAAAGXgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAF4AAAAAAAAAXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7474,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAZeAAAAAAAAC14AAAAAAAAAAAAAB14AAAAAAAAHXgAAAAAAAAQAAAAJCQkJB14AAAAAAAAJXgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABl4AAAAAAAAGXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7476,
					1,
					"unindent",
					null,
					"AQAAAAFeAAAAAAAAAV4AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAA14AAAAAAAADXgAAAAAAAAAAAAAAgFFAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7479,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAAVeAAAAAAAABl4AAAAAAAAAAAAAB14AAAAAAAAHXgAAAAAAAAIAAAAJCQ",
					"AgAAAAAAAAABAAAABV4AAAAAAAAFXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7482,
					1,
					"unindent",
					null,
					"AQAAAAFeAAAAAAAAAV4AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAABF4AAAAAAAAEXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7485,
					1,
					"unindent",
					null,
					"AQAAAI5dAAAAAAAAjl0AAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAkl0AAAAAAACSXQAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7494,
					1,
					"paste",
					null,
					"AQAAAAheAAAAAAAAal4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACF4AAAAAAAAIXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7495,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGpeAAAAAAAAbV4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAal4AAAAAAABqXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7500,
					1,
					"unindent",
					null,
					"AgAAAGteAAAAAAAAa14AAAAAAAABAAAACdxeAAAAAAAA3F4AAAAAAAABAAAACQ",
					"AgAAAAAAAAACAAAAcF4AAAAAAABwXgAAAAAAAAAAAAAAAPC/4l4AAAAAAADiXgAAAAAAAAAAAAAAwGJAAQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7506,
					1,
					"reindent",
					null,
					"AQAAAAVeAAAAAAAAB14AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAABV4AAAAAAAAFXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7507,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAdeAAAAAAAACl4AAAAAAAAAAAAABV4AAAAAAAAFXgAAAAAAAAIAAAAJCQ",
					"AgAAAAAAAAABAAAAB14AAAAAAAAHXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7508,
					1,
					"paste",
					null,
					"AQAAAAZeAAAAAAAAFl4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAACF4AAAAAAAAIXgAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7512,
					1,
					"left_delete",
					null,
					"AgAAAHVfAAAAAAAAdV8AAAAAAAABAAAANBZeAAAAAAAAFl4AAAAAAAACAAAACQk",
					"AgAAAAAAAAABAAAAdl8AAAAAAAB2XwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7513,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAHNfAAAAAAAAdF8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAc18AAAAAAABzXwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7527,
					1,
					"insert",
					{
						"characters": "\n\nlevel"
					},
					"CAAAABwPAAAAAAAAIQ8AAAAAAAAAAAAAIQ8AAAAAAAAmDwAAAAAAAAAAAAAdDwAAAAAAAB0PAAAAAAAABAAAACAgICAiDwAAAAAAACMPAAAAAAAAAAAAACMPAAAAAAAAJA8AAAAAAAAAAAAAJA8AAAAAAAAlDwAAAAAAAAAAAAAlDwAAAAAAACYPAAAAAAAAAAAAACYPAAAAAAAAJw8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAHA8AAAAAAAAcDwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7528,
					1,
					"insert",
					{
						"characters": "_index_current"
					},
					"DgAAACcPAAAAAAAAKA8AAAAAAAAAAAAAKA8AAAAAAAApDwAAAAAAAAAAAAApDwAAAAAAACoPAAAAAAAAAAAAACoPAAAAAAAAKw8AAAAAAAAAAAAAKw8AAAAAAAAsDwAAAAAAAAAAAAAsDwAAAAAAAC0PAAAAAAAAAAAAAC0PAAAAAAAALg8AAAAAAAAAAAAALg8AAAAAAAAvDwAAAAAAAAAAAAAvDwAAAAAAADAPAAAAAAAAAAAAADAPAAAAAAAAMQ8AAAAAAAAAAAAAMQ8AAAAAAAAyDwAAAAAAAAAAAAAyDwAAAAAAADMPAAAAAAAAAAAAADMPAAAAAAAANA8AAAAAAAAAAAAANA8AAAAAAAA1DwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAJw8AAAAAAAAnDwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7529,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAADUPAAAAAAAANg8AAAAAAAAAAAAANg8AAAAAAAA3DwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANQ8AAAAAAAA1DwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7530,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcPAAAAAAAAOA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANw8AAAAAAAA3DwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7531,
					1,
					"insert",
					{
						"characters": "u32,"
					},
					"BAAAADgPAAAAAAAAOQ8AAAAAAAAAAAAAOQ8AAAAAAAA6DwAAAAAAAAAAAAA6DwAAAAAAADsPAAAAAAAAAAAAADsPAAAAAAAAPA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAOA8AAAAAAAA4DwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7535,
					1,
					"insert",
					{
						"characters": "\n\nbytes"
					},
					"CAAAABgnAAAAAAAAGicAAAAAAAAAAAAAGicAAAAAAAAcJwAAAAAAAAAAAAAZJwAAAAAAABknAAAAAAAAAQAAAAkbJwAAAAAAABwnAAAAAAAAAAAAABwnAAAAAAAAHScAAAAAAAAAAAAAHScAAAAAAAAeJwAAAAAAAAAAAAAeJwAAAAAAAB8nAAAAAAAAAAAAAB8nAAAAAAAAICcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAGCcAAAAAAAAYJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7536,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAACAnAAAAAAAAIScAAAAAAAAAAAAAIScAAAAAAAAiJwAAAAAAAAAAAAAiJwAAAAAAACMnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAICcAAAAAAAAgJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7537,
					1,
					"insert",
					{
						"characters": " #load"
					},
					"BgAAACMnAAAAAAAAJCcAAAAAAAAAAAAAJCcAAAAAAAAlJwAAAAAAAAAAAAAlJwAAAAAAACYnAAAAAAAAAAAAACYnAAAAAAAAJycAAAAAAAAAAAAAJycAAAAAAAAoJwAAAAAAAAAAAAAoJwAAAAAAACknAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAIycAAAAAAAAjJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7538,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACknAAAAAAAAKycAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKScAAAAAAAApJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7539,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAConAAAAAAAALCcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKicAAAAAAAAqJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7540,
					1,
					"insert",
					{
						"characters": "../assets/"
					},
					"CgAAACsnAAAAAAAALCcAAAAAAAAAAAAALCcAAAAAAAAtJwAAAAAAAAAAAAAtJwAAAAAAAC4nAAAAAAAAAAAAAC4nAAAAAAAALycAAAAAAAAAAAAALycAAAAAAAAwJwAAAAAAAAAAAAAwJwAAAAAAADEnAAAAAAAAAAAAADEnAAAAAAAAMicAAAAAAAAAAAAAMicAAAAAAAAzJwAAAAAAAAAAAAAzJwAAAAAAADQnAAAAAAAAAAAAADQnAAAAAAAANScAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAKycAAAAAAAArJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7541,
					1,
					"insert",
					{
						"characters": "giant-biscuit."
					},
					"DgAAADUnAAAAAAAANicAAAAAAAAAAAAANicAAAAAAAA3JwAAAAAAAAAAAAA3JwAAAAAAADgnAAAAAAAAAAAAADgnAAAAAAAAOScAAAAAAAAAAAAAOScAAAAAAAA6JwAAAAAAAAAAAAA6JwAAAAAAADsnAAAAAAAAAAAAADsnAAAAAAAAPCcAAAAAAAAAAAAAPCcAAAAAAAA9JwAAAAAAAAAAAAA9JwAAAAAAAD4nAAAAAAAAAAAAAD4nAAAAAAAAPycAAAAAAAAAAAAAPycAAAAAAABAJwAAAAAAAAAAAABAJwAAAAAAAEEnAAAAAAAAAAAAAEEnAAAAAAAAQicAAAAAAAAAAAAAQicAAAAAAABDJwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAANScAAAAAAAA1JwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7542,
					1,
					"insert",
					{
						"characters": "png"
					},
					"AwAAAEMnAAAAAAAARCcAAAAAAAAAAAAARCcAAAAAAABFJwAAAAAAAAAAAABFJwAAAAAAAEYnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAQycAAAAAAABDJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7545,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEcnAAAAAAAASScAAAAAAAAAAAAASCcAAAAAAABIJwAAAAAAAAEAAAAJSCcAAAAAAABKJwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAARycAAAAAAABHJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7547,
					3,
					"left_delete",
					null,
					"AwAAAEknAAAAAAAASScAAAAAAAABAAAACUgnAAAAAAAASCcAAAAAAAABAAAACUcnAAAAAAAARycAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAASicAAAAAAABKJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7562,
					1,
					"left_delete",
					null,
					"AQAAABonAAAAAAAAGicAAAAAAAAvAAAACWJ5dGVzIDo9ICNsb2FkKCIuLi9hc3NldHMvZ2lhbnQtYmlzY3VpdC5wbmciKQo",
					"AgAAAAAAAAABAAAAGicAAAAAAABJJwAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7570,
					1,
					"left_delete",
					null,
					"AQAAAPQAAAAAAAAA9AAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/AQAAAAEAAACYAwAAAAAAAJgDAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "source/examples/hot_script.odin",
			"settings":
			{
				"buffer_size": 2004,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAjgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBQAAAAAAAI4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAJAFAAAAAAAA1AcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQBQAAAAAAAJAFAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "source/examples/biscuit_toss_example.odin",
			"settings":
			{
				"buffer_size": 21125,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "package game"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAdlIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYAAAAAAAAAlgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "../"
					},
					"AwAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAL8AAAAAAAAAvwAAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "example"
					},
					"BwAAAAgAAAAAAAAACQAAAAAAAAAEAAAAZ2FtZQkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgAAAAAAAAADAAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAKBkQA"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAACLAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAACOAAAAAAAAAI8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkAAAAAAAAAiQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					30,
					2,
					"left_delete",
					null,
					"AgAAAI4AAAAAAAAAjgAAAAAAAAABAAAAdI0AAAAAAAAAjQAAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI8AAAAAAAAAjwAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "rt"
					},
					"AgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0AAAAAAAAAjQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "source/handle_array.odin",
			"settings":
			{
				"buffer_size": 2690,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "package game"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAcgoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "package"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "Root_Handle"
					},
					"CwAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAVQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " Handle"
					},
					"BwAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMAAAAAAAAAYwAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGoAAAAAAAAAbAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoAAAAAAAAAagAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "idx"
					},
					"AwAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsAAAAAAAAAawAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4AAAAAAAAAbgAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAG4AAAAAAAAAbgAAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8AAAAAAAAAbwAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4AAAAAAAAAbgAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " 0,"
					},
					"AwAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " gen"
					},
					"BAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMAAAAAAAAAcwAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcAAAAAAAAAdwAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkAAAAAAAAAeQAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAFUAAAAAAAAAVQAAAAAAAAAoAAAAUm9vdF9IYW5kbGUgOjogSGFuZGxle2lkeCA9IDAsIGdlbiA9IDB9Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUAAAAAAAAAfQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/C/odin-windows-amd64-dev-2025-03/vendor/raylib/raylib.odin",
			"settings":
			{
				"buffer_size": 139997,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 825 files for \"src\"\n\nC:\\Users\\johnb\\source\\repos\\odin-base\\build_default.bat:\n    1  echo Building game.exe\n    2  \n    3: odin build  src/main_default -debug -out:game.exe -vet-shadowing\n\nC:\\Users\\johnb\\source\\repos\\odin-base\\build_hot_reload.bat:\n   51  :: monitors this file and does the hot reload when it changes.\n   52  echo Building %name%.dll\n   53: :: odin build src -vet-unused -vet-unused-variables -vet-unused-imports -vet-shadowing -debug -define:RAYLIB_SHARED=true -build-mode:dll -out:%OUT_DIR%/%name%.dll -pdb-name:%GAME_PDBS_DIR%\\%name%_%PDB_NUMBER%.pdb > nul\n   54: odin build src -debug -define:RAYLIB_SHARED=true -build-mode:dll -out:%OUT_DIR%/%name%.dll -pdb-name:%GAME_PDBS_DIR%\\%name%_%PDB_NUMBER%.pdb > nul\n   55  IF %ERRORLEVEL% NEQ 0 exit /b 1\n   56  \n   ..\n   62  :: Build game.exe, which starts the program and loads game.dll och does the logic for hot reloading.\n   63  echo Building %EXE%\n   64: odin build src\\main_hot_reload -debug -out:%OUT_DIR%\\%EXE% -pdb-name:%OUT_DIR%\\main_hot_reload.pdb\n   65  IF %ERRORLEVEL% NEQ 0 exit /b 1\n   66  \n\nC:\\Users\\johnb\\source\\repos\\odin-base\\build_web.bat:\n   17  ::\n   18  :: Note that there is a rayGUI equivalent: -define:RAYGUI_WASM_LIB=env.o\n   19: odin build src\\main_web -target:js_wasm32 -build-mode:obj -define:RAYLIB_WASM_LIB=env.o -define:RAYGUI_WASM_LIB=env.o  -out:%OUT_DIR%\\game.o\n   20  IF %ERRORLEVEL% NEQ 0 exit /b 1\n   21  \n   ..\n   30  :: index_template.html contains the javascript code that calls the procedures in\n   31  :: source/main_web/main_web.odin\n   32: set flags=-sUSE_GLFW=3 -sWASM_BIGINT -sASYNCIFY -g -sALLOW_MEMORY_GROWTH=1 -sINITIAL_HEAP=16777216 -sSTACK_SIZE=65536  -sWARN_ON_UNDEFINED_SYMBOLS=0 -sASSERTIONS --shell-file src\\main_web\\index_template.html\n   33  \n   34  :: For debugging: Add `-g` to `emcc` (gives better error callstack in chrome)\n\nC:\\Users\\johnb\\source\\repos\\odin-base\\source\\game.odin:\n  466  \t\trl.ClearBackground(rl.BLACK)\n  467  \n  468: \t\tsrc := rl.Rectangle{ 0, 0, f32(gmem.game_render_target.texture.width), f32(-gmem.game_render_target.texture.height) }\n  469  \t\t\n  470  \t\tscale := min(screen_width/global_game_view_pixels_width, screen_height/global_game_view_pixels_height)\n  ...\n  474  \n  475  \t\tdst := rl.Rectangle{(screen_width - window_scaled_width)/2, (screen_height - window_scaled_height)/2, window_scaled_width, window_scaled_height}\n  476: \t\trl.DrawTexturePro(gmem.game_render_target.texture, src, dst, [2]f32{0,0}, 0, rl.WHITE)\n  477  \n  478  \t\trl.EndDrawing()\n\nC:\\Users\\johnb\\source\\repos\\odin-base\\source\\main_web\\index_template.html:\n   29  <body>\n   30  \t<canvas class=\"game_canvas\" id=\"canvas\" oncontextmenu=\"event.preventDefault()\" tabindex=\"-1\" onmousedown=\"event.target.focus()\" onkeydown=\"event.preventDefault()\"></canvas>\n   31: \t<script type=\"text/javascript\" src=\"odin.js\"></script>\n   32  \t<script>\n   33  \t\tvar odinMemoryInterface = new odin.WasmMemoryInterface();\n\nC:\\Users\\johnb\\source\\repos\\odin-base\\source\\rlgrid\\grid.odin:\n   84  \n   85  \n   86: draw_sprite_sheet_clip_on_grid :: proc(sprite_sheet: rl.Texture2D, src_grid_pos, dst_grid_pos: [2]f32, src_cell_size, dst_cell_size, rotation: f32) \n   87  {\n   88: \tsrc_rect := get_grid_cell_rectangle(src_grid_pos, src_cell_size)\n   89  \tdst_rect := get_grid_cell_rectangle(dst_grid_pos, dst_cell_size)\n   90  \tdst_midpoint := [2]f32{dst_rect.width / 2, dst_rect.height / 2}\n   91  \tdst_rect.x += dst_midpoint.x\n   92  \tdst_rect.y += dst_midpoint.y\n   93: \trl.DrawTexturePro(sprite_sheet, src_rect, dst_rect, [2]f32{dst_midpoint.x, dst_midpoint.y}, rotation, rl.WHITE)\n   94  }\n   95  \n   ..\n  104   * inputs:\n  105   * - tex: Source Texture to take a clip out of\n  106:  * - src_rectangle: The clip dimensions in grid coordinates of the source texture's grid\n  107:  * - src_grid_cell_size: The cell size of the source texture's grid. For example, maybe the sprites each take up 16 x 16 pixels. In this case, src_grid_cell_size will be 16\n  108:  * - dst_rectangle: The destination that the clip should be drawn at on wherever the render target is pointing to. If the dst_rectangle is smaller than the src_rectangle, the sprite will be shrunk. If the dst_rectangle is larger than the src_rectangle, then it will be stretched larger. \n  109   * - dst_grid_cell_size: The cell size of the render target's grid. So if we are rendering to a grid where each cell is 32 x 32 pixels, the value will be 32\n  110   * - rotation: the rotation in degrees to rotate the sprite on the render target\n  111   * \n  112   * **/\n  113: draw_grid_texture_clip_on_grid :: proc(tex: rl.Texture2D, src_rectangle: rl.Rectangle, src_grid_cell_size: f32, dst_rectangle: rl.Rectangle, dst_grid_cell_size, rotation: f32, flip_x : bool = false, flip_y: bool = false) \n  114  {\n  115: \tsrc_rect := get_rectangle_on_grid(src_rectangle, src_grid_cell_size)\n  116  \tif flip_x\n  117  \t{\n  118: \t\tsrc_rect.width = -src_rect.width\n  119  \t}\n  120  \telse if flip_y\n  121  \t{\n  122: \t\tsrc_rect.height = -src_rect.height\n  123  \t}\n  124  \n  ...\n  131  \n  132  \t// rl.DrawCircleV(rotation_origin, 5, rl.RED)\n  133: \trl.DrawTexturePro(tex, src_rect, dst_rect, rotation_origin, rotation, rl.WHITE)\n  134  \t// rl.DrawCircleV([2]f32{dst_rect.x, dst_rect.y}, 5, rl.RED)\n  135  \t// rl.DrawLineV(rotation_origin, [2]f32{dst_rect.x, dst_rect.y}, rl.WHITE)\n\nC:\\odin-windows-amd64-dev-2025-03\\vendor\\raylib\\raylib.odin:\n   51  \t*       [rmodels] tinyobj_loader_c (Syoyo Fujita) for models loading (OBJ, MTL)\n   52  \t*       [rmodels] cgltf (Johannes Kuhlmann) for models loading (glTF)\n   53: \t*       [rmodels] m3d (bzt) for models loading (M3D, https://bztsrc.gitlab.io/model3d)\n   54  \t*       [rmodels] vox_loader (Johann Nadalutti) for models loading (VOX)\n   55  \t*       [raudio] dr_wav (David Reid) for WAV audio file loading\n   ..\n  831  \tSUBTRACT_COLORS,                  // Blend textures subtracting colors (alternative)\n  832  \tALPHA_PREMULTIPLY,                // Blend premultiplied textures considering alpha\n  833: \tCUSTOM,                           // Blend textures using custom src/dst factors (use rlSetBlendFactors())\n  834: \tCUSTOM_SEPARATE,                  // Blend textures using custom rgb/alpha separate src/dst factors (use rlSetBlendFactorsSeparate())\n  835  }\n  836  \n  ...\n 1389  \tImageDrawTriangleFan    :: proc(dst: ^Image, points: [^]Vector2, pointCount: c.int, color: Color) ---                                    // Draw a triangle fan defined by points within an image (first vertex is the center)\n 1390  \tImageDrawTriangleStrip  :: proc(dst: ^Image, points: [^]Vector2, pointCount: c.int, color: Color) ---                                    // Draw a triangle strip defined by points within an image\n 1391: \tImageDraw               :: proc(dst: ^Image, src: Image, srcRec, dstRec: Rectangle, tint: Color) ---                                     // Draw a source image within a destination image (tint applied to source)\n 1392  \tImageDrawText           :: proc(dst: ^Image, text: cstring, posX, posY: c.int, fontSize: c.int, color: Color) ---                        // Draw text (using default font) within an image (destination)\n 1393  \tImageDrawTextEx         :: proc(dst: ^Image, font: Font, text: cstring, position: Vector2, fontSize: f32, spacing: f32, tint: Color) --- // Draw text (custom sprite font) within an image (destination)\n ....\n 1435  \tColorContrast       :: proc(color: Color, contrast: f32) -> Color ---               // Get color with contrast correction, contrast values between -1.0f and 1.0f\n 1436  \tColorAlpha          :: proc(color: Color, alpha: f32) -> Color ---                  // Get color with alpha applied, alpha goes from 0.0f to 1.0f\n 1437: \tColorAlphaBlend     :: proc(dst, src, tint: Color) -> Color ---                     // Get src alpha-blended into dst color with tint\n 1438  \tColorLerp           :: proc(color1, color2: Color, factor: f32) -> Color ---        // Get color lerp interpolation between two colors, factor [0.0f..1.0f]\n 1439  \tGetColor            :: proc(hexValue: c.uint) -> Color ---                          // Get Color structure from hexadecimal value\n 1440: \tGetPixelColor       :: proc(srcPtr: rawptr, format: PixelFormat) -> Color ---       // Get Color from a source pixel pointer of certain format\n 1441  \tSetPixelColor       :: proc(dstPtr: rawptr, color: Color, format: PixelFormat) ---  // Set color formatted into destination pixel pointer\n 1442  \tGetPixelDataSize    :: proc(width, height: c.int, format: PixelFormat) -> c.int --- // Get pixel data size in bytes for certain format\n ....\n 1496  \t// NOTE: Some strings allocate memory internally for returned strings, just be careful!\n 1497  \n 1498: \tTextCopy      :: proc(dst: [^]byte, src: cstring) -> c.int ---                               // Copy one string to another, returns bytes copied\n 1499  \tTextIsEqual   :: proc(text1, text2: cstring) -> bool ---                                     // Check if two text string are equal\n 1500  \tTextLength    :: proc(text: cstring) -> c.uint ---                                           // Get text length, checks for '\\0' ending\n\nC:\\odin-windows-amd64-dev-2025-03\\vendor\\raylib\\README.md:\n    1: <img align=\"left\" src=\"https://github.com/raysan5/raylib/blob/master/logo/raylib_logo_animation.gif\" width=\"288px\">\n    2  \n    3  **raylib is a simple and easy-to-use library to enjoy videogames programming.**\n    .\n   37  features\n   38  --------\n   39:   - **NO external dependencies**, all required libraries are [bundled into raylib](https://github.com/raysan5/raylib/tree/master/src/external)\n   40    - Multiple platforms supported: **Windows, Linux, MacOS, RPI, Android, HTML5... and more!**\n   41    - Written in plain C code (C99) using PascalCase/camelCase notation\n   42    - Hardware accelerated with OpenGL (**1.1, 2.1, 3.3, 4.3, ES 2.0 or ES 3.0**)\n   43:   - **Unique OpenGL abstraction layer** (usable as standalone module): [rlgl](https://github.com/raysan5/raylib/blob/master/src/rlgl.h)\n   44    - Multiple **Fonts** formats supported (TTF, Image fonts, AngelCode fonts)\n   45    - Multiple texture formats supported, including **compressed formats** (DXT, ETC, ASTC)\n   ..\n   48    - **Animated 3D models** supported (skeletal bones animation) (IQM)\n   49    - Shaders support, including model and **postprocessing** shaders.\n   50:   - **Powerful math module** for Vector, Matrix and Quaternion operations: [raymath](https://github.com/raysan5/raylib/blob/master/src/raymath.h)\n   51    - Audio loading and playing with streaming support (WAV, OGG, MP3, FLAC, XM, MOD)\n   52    - **VR stereo rendering** support with configurable HMD device parameters\n   ..\n  141  raylib is licensed under an unmodified zlib/libpng license, which is an OSI-certified, BSD-like license that allows static linking with closed source software. Check [LICENSE](LICENSE) for further details.\n  142  \n  143: raylib uses internally some libraries for window/graphics/inputs management and also to support different file formats loading, all those libraries are embedded with and are available in [src/external](https://github.com/raysan5/raylib/tree/master/src/external) directory. Check [raylib dependencies LICENSES](https://github.com/raysan5/raylib/wiki/raylib-dependencies) on raylib Wiki for details.\n  144  \n\nC:\\odin-windows-amd64-dev-2025-03\\vendor\\raylib\\linux\\libraylib.so.5.5.0:\n    <binary>\n\nC:\\odin-windows-amd64-dev-2025-03\\vendor\\raylib\\linux\\libraylib.so.550:\n    <binary>\n\nC:\\odin-windows-amd64-dev-2025-03\\vendor\\raylib\\rlgl\\rlgl.odin:\n  243  ZERO                                 :: 0           // GL_ZERO\n  244  ONE                                  :: 1           // GL_ONE\n  245: SRC_COLOR                            :: 0x0300      // GL_SRC_COLOR\n  246: ONE_MINUS_SRC_COLOR                  :: 0x0301      // GL_ONE_MINUS_SRC_COLOR\n  247: SRC_ALPHA                            :: 0x0302      // GL_SRC_ALPHA\n  248: ONE_MINUS_SRC_ALPHA                  :: 0x0303      // GL_ONE_MINUS_SRC_ALPHA\n  249  DST_ALPHA                            :: 0x0304      // GL_DST_ALPHA\n  250  ONE_MINUS_DST_ALPHA                  :: 0x0305      // GL_ONE_MINUS_DST_ALPHA\n  251  DST_COLOR                            :: 0x0306      // GL_DST_COLOR\n  252  ONE_MINUS_DST_COLOR                  :: 0x0307      // GL_ONE_MINUS_DST_COLOR\n  253: SRC_ALPHA_SATURATE                   :: 0x0308      // GL_SRC_ALPHA_SATURATE\n  254  CONSTANT_COLOR                       :: 0x8001      // GL_CONSTANT_COLOR\n  255  ONE_MINUS_CONSTANT_COLOR             :: 0x8002      // GL_ONE_MINUS_CONSTANT_COLOR\n  ...\n  267  BLEND_EQUATION_ALPHA                 :: 0x883D      // GL_BLEND_EQUATION_ALPHA\n  268  BLEND_DST_RGB                        :: 0x80C8      // GL_BLEND_DST_RGB\n  269: BLEND_SRC_RGB                        :: 0x80C9      // GL_BLEND_SRC_RGB\n  270  BLEND_DST_ALPHA                      :: 0x80CA      // GL_BLEND_DST_ALPHA\n  271: BLEND_SRC_ALPHA                      :: 0x80CB      // GL_BLEND_SRC_ALPHA\n  272  BLEND_COLOR                          :: 0x8005      // GL_BLEND_COLOR\n  273  \n  ...\n  439  \tDisableFramebuffer :: proc() ---                                            // Disable render texture (fbo), return to default framebuffer\n  440  \tActiveDrawBuffers  :: proc(count: c.int) ---                                // Activate multiple draw color buffers\n  441: \tBlitFramebuffer\t :: proc(srcX, srcY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight, bufferMask: c.int) --- // Blit active framebuffer to main framebuffer\n  442  \n  443  \t// General render state\n  ...\n  470  \tCheckErrors             :: proc() ---                                                                      // Check and log OpenGL error codes\n  471  \tSetBlendMode            :: proc(mode: c.int) ---                                                           // Set blending mode\n  472: \tSetBlendFactors         :: proc(glSrcFactor, glDstFactor, glEquation: c.int) ---                           // Set blending mode factor and equation (using OpenGL factors)\n  473: \tSetBlendFactorsSeparate :: proc(glSrcRGB, glDstRGB, glSrcAlpha, glDstAlpha, glEqRGB, glEqAlpha: c.int) --- // Set blending mode factors and equations separately (using OpenGL factors)\n  474  \n  475  \t//------------------------------------------------------------------------------------\n  ...\n  563  \tBindShaderBuffer    :: proc(id: c.uint, index: c.uint) ---                                           // Bind SSBO buffer\n  564  \tReadShaderBuffer    :: proc(id: c.uint, dest: rawptr, count: c.uint, offset: c.uint) ---             // Read SSBO buffer data (GPU->CPU)\n  565: \tCopyShaderBuffer    :: proc(destId, srcId: c.uint, destOffset, srcOffset: c.uint, count: c.uint) --- // Copy SSBO data between buffers\n  566  \tGetShaderBufferSize :: proc(id: c.uint) -> c.uint ---                                                // Get SSBO buffer size\n  567  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\c\\libc\\stdarg.odin:\n   12  \t@(link_name=\"llvm.va_start\") _va_start :: proc(arglist: ^i8) ---\n   13  \t@(link_name=\"llvm.va_end\")   _va_end   :: proc(arglist: ^i8) ---\n   14: \t@(link_name=\"llvm.va_copy\")  _va_copy  :: proc(dst, src: ^i8) ---\n   15  }\n   16  \n   ..\n   25  }\n   26  \n   27: va_copy :: #force_inline proc(dst, src: ^va_list) {\n   28: \t_va_copy(cast(^i8)dst, cast(^i8)src)\n   29  }\n   30  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\c\\libc\\wchar.odin:\n   68  \twcscspn   :: proc(s1, s2: [^]wchar_t) -> size_t ---\n   69  \twcspbrk   :: proc(s1, s2: [^]wchar_t) -> [^]wchar_t ---\n   70: \twcsrchr   :: proc(s: [^]wchar_t, c: wchar_t) -> [^]wchar_t ---\n   71  \twcsspn    :: proc(s1, s2: [^]wchar_t) -> size_t ---\n   72  \twcsstr    :: proc(s1, s2: [^]wchar_t) -> [^]wchar_t ---\n   ..\n   94  \n   95  \t// 7.29.6.4 Restartable multibyte/wide string conversion functions\n   96: \tmbsrtowcs :: proc(dst: [^]wchar_t, src: ^cstring, len: size_t, ps: ^mbstate_t) -> size_t ---\n   97: \twcsrtombs :: proc(dst: ^char, src: ^[^]wchar_t, len: size_t, ps: ^mbstate_t) -> size_t ---\n   98  }\n   99  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_aes\\ct64\\api.odin:\n   20  }\n   21  \n   22: // encrypt_block sets `dst` to `AES-ECB-Encrypt(src)`.\n   23: encrypt_block :: proc(ctx: ^Context, dst, src: []byte) {\n   24  \tq: [8]u64\n   25: \tload_blockx1(&q, src)\n   26  \t_encrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   27  \tstore_blockx1(dst, &q)\n   28  }\n   29  \n   30: // encrypt_block sets `dst` to `AES-ECB-Decrypt(src)`.\n   31: decrypt_block :: proc(ctx: ^Context, dst, src: []byte) {\n   32  \tq: [8]u64\n   33: \tload_blockx1(&q, src)\n   34  \t_decrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   35  \tstore_blockx1(dst, &q)\n   36  }\n   37  \n   38: // encrypt_blocks sets `dst` to `AES-ECB-Encrypt(src[0], .. src[n])`.\n   39: encrypt_blocks :: proc(ctx: ^Context, dst, src: [][]byte) {\n   40  \tq: [8]u64 = ---\n   41: \tsrc, dst := src, dst\n   42  \n   43: \tn := len(src)\n   44  \tfor n > 4 {\n   45: \t\tload_blocks(&q, src[0:4])\n   46  \t\t_encrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   47  \t\tstore_blocks(dst[0:4], &q)\n   48  \n   49: \t\tsrc = src[4:]\n   50  \t\tdst = dst[4:]\n   51  \t\tn -= 4\n   52  \t}\n   53  \tif n > 0 {\n   54: \t\tload_blocks(&q, src)\n   55  \t\t_encrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   56  \t\tstore_blocks(dst, &q)\n   ..\n   58  }\n   59  \n   60: // decrypt_blocks sets dst to `AES-ECB-Decrypt(src[0], .. src[n])`.\n   61: decrypt_blocks :: proc(ctx: ^Context, dst, src: [][]byte) {\n   62  \tq: [8]u64 = ---\n   63: \tsrc, dst := src, dst\n   64  \n   65: \tn := len(src)\n   66  \tfor n > 4 {\n   67: \t\tload_blocks(&q, src[0:4])\n   68  \t\t_decrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   69  \t\tstore_blocks(dst[0:4], &q)\n   70  \n   71: \t\tsrc = src[4:]\n   72  \t\tdst = dst[4:]\n   73  \t\tn -= 4\n   74  \t}\n   75  \tif n > 0 {\n   76: \t\tload_blocks(&q, src)\n   77  \t\t_decrypt(&q, ctx._sk_exp[:], ctx._num_rounds)\n   78  \t\tstore_blocks(dst, &q)\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_aes\\ct64\\ghash.odin:\n   82  \n   83  \tfor l > 0 {\n   84: \t\tsrc: []byte = ---\n   85  \t\tif l >= _aes.GHASH_BLOCK_SIZE {\n   86: \t\t\tsrc = buf\n   87  \t\t\tbuf = buf[_aes.GHASH_BLOCK_SIZE:]\n   88  \t\t\tl -= _aes.GHASH_BLOCK_SIZE\n   ..\n   90  \t\t\ttmp: [_aes.GHASH_BLOCK_SIZE]byte\n   91  \t\t\tcopy(tmp[:], buf)\n   92: \t\t\tsrc = tmp[:]\n   93  \t\t\tl = 0\n   94  \t\t}\n   95: \t\ty1 ~= endian.unchecked_get_u64be(src)\n   96: \t\ty0 ~= endian.unchecked_get_u64be(src[8:])\n   97  \n   98  \t\ty0r := rev64(y0)\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_aes\\ct64\\helpers.odin:\n    5  import \"core:encoding/endian\"\n    6  \n    7: load_blockx1 :: proc \"contextless\" (q: ^[8]u64, src: []byte) {\n    8: \tif len(src) != _aes.BLOCK_SIZE {\n    9  \t\tintrinsics.trap()\n   10  \t}\n   11  \n   12  \tw: [4]u32 = ---\n   13: \tw[0] = endian.unchecked_get_u32le(src[0:])\n   14: \tw[1] = endian.unchecked_get_u32le(src[4:])\n   15: \tw[2] = endian.unchecked_get_u32le(src[8:])\n   16: \tw[3] = endian.unchecked_get_u32le(src[12:])\n   17  \tq[0], q[4] = interleave_in(w[:])\n   18  \torthogonalize(q)\n   ..\n   32  }\n   33  \n   34: load_blocks :: proc \"contextless\" (q: ^[8]u64, src: [][]byte) {\n   35: \tif n := len(src); n > STRIDE || n == 0 {\n   36  \t\tintrinsics.trap()\n   37  \t}\n   38  \n   39  \tw: [4]u32 = ---\n   40: \tfor s, i in src {\n   41  \t\tif len(s) != _aes.BLOCK_SIZE {\n   42  \t\t\tintrinsics.trap()\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_aes\\hw_intel\\ghash.odin:\n  242  \t// Process 1 block at a time\n  243  \tfor l > 0 {\n  244: \t\tsrc: []byte = ---\n  245  \t\tif l >= _aes.GHASH_BLOCK_SIZE {\n  246: \t\t\tsrc = buf\n  247  \t\t\tbuf = buf[_aes.GHASH_BLOCK_SIZE:]\n  248  \t\t\tl -= _aes.GHASH_BLOCK_SIZE\n  ...\n  250  \t\t\ttmp: [_aes.GHASH_BLOCK_SIZE]byte\n  251  \t\t\tcopy(tmp[:], buf)\n  252: \t\t\tsrc = tmp[:]\n  253  \t\t\tl = 0\n  254  \t\t}\n  255  \n  256: \t\taw := intrinsics.unaligned_load((^x86.__m128i)(raw_data(src)))\n  257  \t\taw = byteswap(aw)\n  258  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_chacha20\\ref\\chacha20_ref.odin:\n    5  import \"core:math/bits\"\n    6  \n    7: stream_blocks :: proc(ctx: ^_chacha20.Context, dst, src: []byte, nr_blocks: int) {\n    8  \t// Enforce the maximum consumed keystream per IV.\n    9  \t_chacha20.check_counter_limit(ctx, nr_blocks)\n   10  \n   11: \tdst, src := dst, src\n   12  \tx := &ctx._s\n   13  \tfor n := 0; n < nr_blocks; n = n + 1 {\n   ..\n  151  \t\tx15 += x[15]\n  152  \n  153: \t\t// - The caller(s) ensure that src/dst are valid.\n  154  \t\t// - The compiler knows if the target is picky about alignment.\n  155  \n  156  \t\t#no_bounds_check {\n  157: \t\t\tif src != nil {\n  158: \t\t\t\tendian.unchecked_put_u32le(dst[0:4], endian.unchecked_get_u32le(src[0:4]) ~ x0)\n  159: \t\t\t\tendian.unchecked_put_u32le(dst[4:8], endian.unchecked_get_u32le(src[4:8]) ~ x1)\n  160: \t\t\t\tendian.unchecked_put_u32le(dst[8:12], endian.unchecked_get_u32le(src[8:12]) ~ x2)\n  161: \t\t\t\tendian.unchecked_put_u32le(dst[12:16], endian.unchecked_get_u32le(src[12:16]) ~ x3)\n  162: \t\t\t\tendian.unchecked_put_u32le(dst[16:20], endian.unchecked_get_u32le(src[16:20]) ~ x4)\n  163: \t\t\t\tendian.unchecked_put_u32le(dst[20:24], endian.unchecked_get_u32le(src[20:24]) ~ x5)\n  164: \t\t\t\tendian.unchecked_put_u32le(dst[24:28], endian.unchecked_get_u32le(src[24:28]) ~ x6)\n  165: \t\t\t\tendian.unchecked_put_u32le(dst[28:32], endian.unchecked_get_u32le(src[28:32]) ~ x7)\n  166: \t\t\t\tendian.unchecked_put_u32le(dst[32:36], endian.unchecked_get_u32le(src[32:36]) ~ x8)\n  167: \t\t\t\tendian.unchecked_put_u32le(dst[36:40], endian.unchecked_get_u32le(src[36:40]) ~ x9)\n  168  \t\t\t\tendian.unchecked_put_u32le(\n  169  \t\t\t\t\tdst[40:44],\n  170: \t\t\t\t\tendian.unchecked_get_u32le(src[40:44]) ~ x10,\n  171  \t\t\t\t)\n  172  \t\t\t\tendian.unchecked_put_u32le(\n  173  \t\t\t\t\tdst[44:48],\n  174: \t\t\t\t\tendian.unchecked_get_u32le(src[44:48]) ~ x11,\n  175  \t\t\t\t)\n  176  \t\t\t\tendian.unchecked_put_u32le(\n  177  \t\t\t\t\tdst[48:52],\n  178: \t\t\t\t\tendian.unchecked_get_u32le(src[48:52]) ~ x12,\n  179  \t\t\t\t)\n  180  \t\t\t\tendian.unchecked_put_u32le(\n  181  \t\t\t\t\tdst[52:56],\n  182: \t\t\t\t\tendian.unchecked_get_u32le(src[52:56]) ~ x13,\n  183  \t\t\t\t)\n  184  \t\t\t\tendian.unchecked_put_u32le(\n  185  \t\t\t\t\tdst[56:60],\n  186: \t\t\t\t\tendian.unchecked_get_u32le(src[56:60]) ~ x14,\n  187  \t\t\t\t)\n  188  \t\t\t\tendian.unchecked_put_u32le(\n  189  \t\t\t\t\tdst[60:64],\n  190: \t\t\t\t\tendian.unchecked_get_u32le(src[60:64]) ~ x15,\n  191  \t\t\t\t)\n  192: \t\t\t\tsrc = src[_chacha20.BLOCK_SIZE:]\n  193  \t\t\t} else {\n  194  \t\t\t\tendian.unchecked_put_u32le(dst[0:4], x0)\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_chacha20\\simd128\\chacha20_simd128.odin:\n  174  @(private = \"file\")\n  175  _xor_simd128 :: #force_inline proc \"contextless\" (\n  176: \tsrc: [^]simd.u32x4,\n  177  \tv0, v1, v2, v3: simd.u32x4,\n  178  ) -> (\n  ...\n  184  \tv0, v1, v2, v3 := v0, v1, v2, v3\n  185  \n  186: \tv0 = simd.bit_xor(v0, intrinsics.unaligned_load((^simd.u32x4)(src[0:])))\n  187: \tv1 = simd.bit_xor(v1, intrinsics.unaligned_load((^simd.u32x4)(src[1:])))\n  188: \tv2 = simd.bit_xor(v2, intrinsics.unaligned_load((^simd.u32x4)(src[2:])))\n  189: \tv3 = simd.bit_xor(v3, intrinsics.unaligned_load((^simd.u32x4)(src[3:])))\n  190  \n  191  \treturn v0, v1, v2, v3\n  ...\n  227  \n  228  @(enable_target_feature = TARGET_SIMD_FEATURES)\n  229: stream_blocks :: proc(ctx: ^_chacha20.Context, dst, src: []byte, nr_blocks: int) {\n  230  \t// Enforce the maximum consumed keystream per IV.\n  231  \t_chacha20.check_counter_limit(ctx, nr_blocks)\n  232  \n  233  \tdst_v := ([^]simd.u32x4)(raw_data(dst))\n  234: \tsrc_v := ([^]simd.u32x4)(raw_data(src))\n  235  \n  236  \tx := &ctx._s\n  ...\n  321  \n  322  \t\t\t#no_bounds_check {\n  323: \t\t\t\tif src != nil {\n  324: \t\t\t\t\tv0, v1, v2, v3 = _xor_simd128(src_v, v0, v1, v2, v3)\n  325: \t\t\t\t\tv4, v5, v6, v7 = _xor_simd128(src_v[4:], v4, v5, v6, v7)\n  326: \t\t\t\t\tv8, v9, v10, v11 = _xor_simd128(src_v[8:], v8, v9, v10, v11)\n  327: \t\t\t\t\tv12, v13, v14, v15 = _xor_simd128(src_v[12:], v12, v13, v14, v15)\n  328: \t\t\t\t\tv16, v17, v18, v19 = _xor_simd128(src_v[16:], v16, v17, v18, v19)\n  329: \t\t\t\t\tv20, v21, v22, v23 = _xor_simd128(src_v[20:], v20, v21, v22, v23)\n  330: \t\t\t\t\tv24, v25, v26, v27 = _xor_simd128(src_v[24:], v24, v25, v26, v27)\n  331: \t\t\t\t\tv28, v29, v30, v31 = _xor_simd128(src_v[28:], v28, v29, v30, v31)\n  332: \t\t\t\t\tsrc_v = src_v[32:]\n  333  \t\t\t\t}\n  334  \n  ...\n  395  \n  396  \t\t\t#no_bounds_check {\n  397: \t\t\t\tif src != nil {\n  398: \t\t\t\t\tv0, v1, v2, v3 = _xor_simd128(src_v, v0, v1, v2, v3)\n  399: \t\t\t\t\tv4, v5, v6, v7 = _xor_simd128(src_v[4:], v4, v5, v6, v7)\n  400: \t\t\t\t\tv8, v9, v10, v11 = _xor_simd128(src_v[8:], v8, v9, v10, v11)\n  401: \t\t\t\t\tv12, v13, v14, v15 = _xor_simd128(src_v[12:], v12, v13, v14, v15)\n  402: \t\t\t\t\tsrc_v = src_v[16:]\n  403  \t\t\t\t}\n  404  \n  ...\n  429  \n  430  \t\t#no_bounds_check {\n  431: \t\t\tif src != nil {\n  432: \t\t\t\tv0, v1, v2, v3 = _xor_simd128(src_v, v0, v1, v2, v3)\n  433: \t\t\t\tsrc_v = src_v[4:]\n  434  \t\t\t}\n  435  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_chacha20\\simd256\\chacha20_simd256.odin:\n  143  @(private = \"file\")\n  144  _xor_simd256 :: #force_inline proc \"contextless\" (\n  145: \tsrc: [^]simd.u32x8,\n  146  \tv0, v1, v2, v3: simd.u32x8,\n  147  ) -> (\n  ...\n  153  \tv0, v1, v2, v3 := v0, v1, v2, v3\n  154  \n  155: \tv0 = simd.bit_xor(v0, intrinsics.unaligned_load((^simd.u32x8)(src[0:])))\n  156: \tv1 = simd.bit_xor(v1, intrinsics.unaligned_load((^simd.u32x8)(src[1:])))\n  157: \tv2 = simd.bit_xor(v2, intrinsics.unaligned_load((^simd.u32x8)(src[2:])))\n  158: \tv3 = simd.bit_xor(v3, intrinsics.unaligned_load((^simd.u32x8)(src[3:])))\n  159  \n  160  \treturn v0, v1, v2, v3\n  ...\n  163  @(private = \"file\")\n  164  _xor_simd256_x1 :: #force_inline proc \"contextless\" (\n  165: \tsrc: [^]simd.u32x8,\n  166  \tv0, v1: simd.u32x8,\n  167  ) -> (\n  ...\n  171  \tv0, v1 := v0, v1\n  172  \n  173: \tv0 = simd.bit_xor(v0, intrinsics.unaligned_load((^simd.u32x8)(src[0:])))\n  174: \tv1 = simd.bit_xor(v1, intrinsics.unaligned_load((^simd.u32x8)(src[1:])))\n  175  \n  176  \treturn v0, v1\n  ...\n  198  \n  199  @(enable_target_feature = \"sse2,ssse3,avx,avx2\")\n  200: stream_blocks :: proc(ctx: ^_chacha20.Context, dst, src: []byte, nr_blocks: int) {\n  201  \t// Enforce the maximum consumed keystream per IV.\n  202  \t_chacha20.check_counter_limit(ctx, nr_blocks)\n  203  \n  204  \tdst_v := ([^]simd.u32x8)(raw_data(dst))\n  205: \tsrc_v := ([^]simd.u32x8)(raw_data(src))\n  206  \n  207  \tx := &ctx._s\n  ...\n  250  \n  251  \t\t#no_bounds_check {\n  252: \t\t\tif src != nil {\n  253: \t\t\t\tv0, v1, v2, v3 = _xor_simd256(src_v, v0, v1, v2, v3)\n  254: \t\t\t\tv4, v5, v6, v7 = _xor_simd256(src_v[4:], v4, v5, v6, v7)\n  255: \t\t\t\tv8, v9, v10, v11 = _xor_simd256(src_v[8:], v8, v9, v10, v11)\n  256: \t\t\t\tv12, v13, v14, v15 = _xor_simd256(src_v[12:], v12, v13, v14, v15)\n  257: \t\t\t\tsrc_v = src_v[16:]\n  258  \t\t\t}\n  259  \n  ...\n  279  \n  280  \t\tif n == 1 {\n  281: \t\t\t// Note: No need to advance src_v, dst_v, or increment the counter\n  282  \t\t\t// since this is guaranteed to be the final block.\n  283  \t\t\t#no_bounds_check {\n  284: \t\t\t\tif src != nil {\n  285: \t\t\t\t\tv0, v1 = _xor_simd256_x1(src_v, v0, v1)\n  286  \t\t\t\t}\n  287  \n  ...\n  292  \n  293  \t\t#no_bounds_check {\n  294: \t\t\tif src != nil {\n  295: \t\t\t\tv0, v1, v2, v3 = _xor_simd256(src_v, v0, v1, v2, v3)\n  296: \t\t\t\tsrc_v = src_v[4:]\n  297  \t\t\t}\n  298  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\_chacha20\\simd256\\chacha20_simd256_stub.odin:\n    9  }\n   10  \n   11: stream_blocks :: proc(ctx: ^_chacha20.Context, dst, src: []byte, nr_blocks: int) {\n   12  \tpanic(\"crypto/chacha20: simd256 implementation unsupported\")\n   13  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_ctr.odin:\n   33  }\n   34  \n   35: // xor_bytes_ctr XORs each byte in src with bytes taken from the AES-CTR\n   36: // keystream, and writes the resulting output to dst.  dst and src MUST\n   37  // alias exactly or not at all.\n   38: xor_bytes_ctr :: proc(ctx: ^Context_CTR, dst, src: []byte) {\n   39  \tassert(ctx._is_initialized)\n   40  \n   41: \tsrc, dst := src, dst\n   42: \tif dst_len := len(dst); dst_len < len(src) {\n   43: \t\tsrc = src[:dst_len]\n   44  \t}\n   45  \n   46: \tif bytes.alias_inexactly(dst, src) {\n   47: \t\tpanic(\"crypto/aes: dst and src alias inexactly\")\n   48  \t}\n   49  \n   50: \t#no_bounds_check for remaining := len(src); remaining > 0; {\n   51  \t\t// Process multiple blocks at once\n   52  \t\tif ctx._off == BLOCK_SIZE {\n   53  \t\t\tif nr_blocks := remaining / BLOCK_SIZE; nr_blocks > 0 {\n   54  \t\t\t\tdirect_bytes := nr_blocks * BLOCK_SIZE\n   55: \t\t\t\tctr_blocks(ctx, dst, src, nr_blocks)\n   56  \t\t\t\tremaining -= direct_bytes\n   57  \t\t\t\tif remaining == 0 {\n   ..\n   59  \t\t\t\t}\n   60  \t\t\t\tdst = dst[direct_bytes:]\n   61: \t\t\t\tsrc = src[direct_bytes:]\n   62  \t\t\t}\n   63  \n   ..\n   72  \t\tbuffered_keystream := ctx._buffer[ctx._off:]\n   73  \t\tfor i := 0; i < to_xor; i = i + 1 {\n   74: \t\t\tdst[i] = buffered_keystream[i] ~ src[i]\n   75  \t\t}\n   76  \t\tctx._off += to_xor\n   77  \t\tdst = dst[to_xor:]\n   78: \t\tsrc = src[to_xor:]\n   79  \t\tremaining -= to_xor\n   80  \t}\n   ..\n  127  \n  128  @(private = \"file\")\n  129: ctr_blocks :: proc(ctx: ^Context_CTR, dst, src: []byte, nr_blocks: int) #no_bounds_check {\n  130  \t// Use the optimized hardware implementation if available.\n  131  \tif _, is_hw := ctx._impl.(Context_Impl_Hardware); is_hw {\n  132: \t\tctr_blocks_hw(ctx, dst, src, nr_blocks)\n  133  \t\treturn\n  134  \t}\n  ...\n  147  \n  148  \timpl := &ctx._impl.(ct64.Context)\n  149: \tsrc, dst := src, dst\n  150  \tnr_blocks := nr_blocks\n  151  \tctr_hi, ctr_lo := ctx._ctr_hi, ctx._ctr_lo\n  ...\n  165  \t\tct64.encrypt_blocks(impl, blocks, blocks)\n  166  \n  167: \t\txor_blocks(dst, src, blocks)\n  168  \n  169: \t\tif src != nil {\n  170: \t\t\tsrc = src[n * BLOCK_SIZE:]\n  171  \t\t}\n  172  \t\tdst = dst[n * BLOCK_SIZE:]\n  ...\n  181  \n  182  @(private)\n  183: xor_blocks :: #force_inline proc \"contextless\" (dst, src: []byte, blocks: [][]byte) {\n  184  \t// Note: This would be faster `core:simd` was used, however if\n  185  \t// performance of this implementation matters to where that\n  ...\n  187  \t// CPU that isn't e-waste.\n  188  \t#no_bounds_check {\n  189: \t\tif src != nil {\n  190  \t\t\t\tfor i in 0 ..< len(blocks) {\n  191  \t\t\t\t\toff := i * BLOCK_SIZE\n  192  \t\t\t\t\tfor j in 0 ..< BLOCK_SIZE {\n  193: \t\t\t\t\t\tblocks[i][j] ~= src[off + j]\n  194  \t\t\t\t\t}\n  195  \t\t\t\t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_ctr_hw_intel.odin:\n   14  \n   15  @(private, enable_target_feature = \"sse2,aes\")\n   16: ctr_blocks_hw :: proc(ctx: ^Context_CTR, dst, src: []byte, nr_blocks: int) #no_bounds_check {\n   17  \thw_ctx := ctx._impl.(Context_Impl_Hardware)\n   18  \n   ..\n   44  \t// should be \"adequate\" across most CPUs.\n   45  \n   46: \tsrc, dst := src, dst\n   47  \tnr_blocks := nr_blocks\n   48  \tctr_hi, ctr_lo := ctx._ctr_hi, ctx._ctr_lo\n   ..\n   87  \t\t}\n   88  \n   89: \t\txor_blocks_hw(dst, src, blks[:])\n   90  \n   91: \t\tif src != nil {\n   92: \t\t\tsrc = src[CTR_STRIDE_BYTES_HW:]\n   93  \t\t}\n   94  \t\tdst = dst[CTR_STRIDE_BYTES_HW:]\n   ..\n  119  \t\t}\n  120  \n  121: \t\txor_blocks_hw(dst, src, blks[:1])\n  122  \n  123: \t\tif src != nil {\n  124: \t\t\tsrc = src[BLOCK_SIZE:]\n  125  \t\t}\n  126  \t\tdst = dst[BLOCK_SIZE:]\n  ...\n  136  \n  137  @(private, enable_target_feature = \"sse2\")\n  138: xor_blocks_hw :: proc(dst, src: []byte, blocks: []x86.__m128i) {\n  139  \t#no_bounds_check {\n  140: \t\tif src != nil {\n  141  \t\t\t\tfor i in 0 ..< len(blocks) {\n  142  \t\t\t\t\toff := i * BLOCK_SIZE\n  143: \t\t\t\t\ttmp := intrinsics.unaligned_load((^x86.__m128i)(raw_data(src[off:])))\n  144  \t\t\t\t\tblocks[i] = x86._mm_xor_si128(blocks[i], tmp)\n  145  \t\t\t\t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_ecb.odin:\n   18  }\n   19  \n   20: // encrypt_ecb encrypts the BLOCK_SIZE buffer src, and writes the result to dst.\n   21: encrypt_ecb :: proc(ctx: ^Context_ECB, dst, src: []byte) {\n   22  \tassert(ctx._is_initialized)\n   23  \n   24: \tif len(dst) != BLOCK_SIZE || len(src) != BLOCK_SIZE {\n   25  \t\tpanic(\"crypto/aes: invalid buffer size(s)\")\n   26  \t}\n   ..\n   28  \tswitch &impl in ctx._impl {\n   29  \tcase ct64.Context:\n   30: \t\tct64.encrypt_block(&impl, dst, src)\n   31  \tcase Context_Impl_Hardware:\n   32: \t\tencrypt_block_hw(&impl, dst, src)\n   33  \t}\n   34  }\n   35  \n   36: // decrypt_ecb decrypts the BLOCK_SIZE buffer src, and writes the result to dst.\n   37: decrypt_ecb :: proc(ctx: ^Context_ECB, dst, src: []byte) {\n   38  \tassert(ctx._is_initialized)\n   39  \n   40: \tif len(dst) != BLOCK_SIZE || len(src) != BLOCK_SIZE {\n   41  \t\tpanic(\"crypto/aes: invalid buffer size(s)\")\n   42  \t}\n   ..\n   44  \tswitch &impl in ctx._impl {\n   45  \tcase ct64.Context:\n   46: \t\tct64.decrypt_block(&impl, dst, src)\n   47  \tcase Context_Impl_Hardware:\n   48: \t\tdecrypt_block_hw(&impl, dst, src)\n   49  \t}\n   50  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_ecb_hw_intel.odin:\n    7  \n    8  @(private, enable_target_feature = \"sse2,aes\")\n    9: encrypt_block_hw :: proc(ctx: ^Context_Impl_Hardware, dst, src: []byte) {\n   10: \tblk := intrinsics.unaligned_load((^x86.__m128i)(raw_data(src)))\n   11  \n   12  \tblk = x86._mm_xor_si128(blk, intrinsics.unaligned_load((^x86.__m128i)(&ctx._sk_exp_enc[0])))\n   ..\n   33  \n   34  @(private, enable_target_feature = \"sse2,aes\")\n   35: decrypt_block_hw :: proc(ctx: ^Context_Impl_Hardware, dst, src: []byte) {\n   36: \tblk := intrinsics.unaligned_load((^x86.__m128i)(raw_data(src)))\n   37  \n   38  \tblk = x86._mm_xor_si128(blk, intrinsics.unaligned_load((^x86.__m128i)(&ctx._sk_exp_dec[0])))\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_gcm.odin:\n  136  \t}\n  137  \tif text_len := u64(len(text)); text_len > GCM_P_MAX {\n  138: \t\tpanic(\"crypto/aes: oversized GCM src data\")\n  139  \t}\n  140  }\n  ...\n  197  \tdst: []byte,\n  198  \ts: ^[_aes.GHASH_BLOCK_SIZE]byte,\n  199: \tsrc: []byte,\n  200  \th: ^[_aes.GHASH_KEY_SIZE]byte,\n  201  \tiv: ^[_aes.GHASH_BLOCK_SIZE]byte,\n  ...\n  221  \n  222  \timpl := &ctx._impl.(ct64.Context)\n  223: \tsrc, dst := src, dst\n  224  \n  225: \tnr_blocks := len(src) / BLOCK_SIZE\n  226  \tfor nr_blocks > 0 {\n  227  \t\tn := min(ct64.STRIDE, nr_blocks)\n  ...\n  229  \n  230  \t\tif !is_seal {\n  231: \t\t\tct64.ghash(s[:], h[:], src[:l])\n  232  \t\t}\n  233  \n  ...\n  239  \t\tct64.encrypt_blocks(impl, blks[:n], ctrs[:n])\n  240  \n  241: \t\txor_blocks(dst, src, blks[:n])\n  242  \n  243  \t\tif is_seal {\n  ...\n  245  \t\t}\n  246  \n  247: \t\tsrc = src[l:]\n  248  \t\tdst = dst[l:]\n  249  \t\tnr_blocks -= n\n  250  \t}\n  251: \tif l := len(src); l > 0 {\n  252  \t\tif !is_seal {\n  253: \t\t\tct64.ghash(s[:], h[:], src[:l])\n  254  \t\t}\n  255  \n  ...\n  258  \n  259  \t\tfor i in 0 ..< l {\n  260: \t\t\tdst[i] = src[i] ~ ctrs[0][i]\n  261  \t\t}\n  262  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_gcm_hw_intel.odin:\n  108  \tdst: []byte,\n  109  \ts: ^[_aes.GHASH_BLOCK_SIZE]byte,\n  110: \tsrc: []byte,\n  111  \th: ^[_aes.GHASH_KEY_SIZE]byte,\n  112  \tiv: ^[_aes.GHASH_BLOCK_SIZE]byte,\n  ...\n  122  \tctr := endian.unchecked_get_u32be(iv[GCM_IV_SIZE:]) + 1\n  123  \n  124: \tsrc, dst := src, dst\n  125  \n  126  \t// Note: Instead of doing GHASH and CTR separately, it is more\n  ...\n  130  \n  131  \tblks: [CTR_STRIDE_HW]x86.__m128i = ---\n  132: \tnr_blocks := len(src) / BLOCK_SIZE\n  133  \tfor nr_blocks >= CTR_STRIDE_HW {\n  134  \t\tif !is_seal {\n  135: \t\t\thw_intel.ghash(s[:], h[:], src[:CTR_STRIDE_BYTES_HW])\n  136  \t\t}\n  137  \n  ...\n  173  \t\t}\n  174  \n  175: \t\txor_blocks_hw(dst, src, blks[:])\n  176  \n  177  \t\tif is_seal {\n  ...\n  179  \t\t}\n  180  \n  181: \t\tsrc = src[CTR_STRIDE_BYTES_HW:]\n  182  \t\tdst = dst[CTR_STRIDE_BYTES_HW:]\n  183  \t\tnr_blocks -= CTR_STRIDE_HW\n  ...\n  185  \n  186  \t// Handle the remainder.\n  187: \tfor n := len(src); n > 0; {\n  188  \t\tl := min(n, BLOCK_SIZE)\n  189  \t\tif !is_seal {\n  190: \t\t\thw_intel.ghash(s[:], h[:], src[:l])\n  191  \t\t}\n  192  \n  ...\n  213  \n  214  \t\tif l == BLOCK_SIZE {\n  215: \t\t\txor_blocks_hw(dst, src, blks[:1])\n  216  \t\t} else {\n  217  \t\t\tblk: [BLOCK_SIZE]byte\n  218: \t\t\tcopy(blk[:], src)\n  219  \t\t\txor_blocks_hw(blk[:], blk[:], blks[:1])\n  220  \t\t\tcopy(dst, blk[:l])\n  ...\n  225  \n  226  \t\tdst = dst[l:]\n  227: \t\tsrc = src[l:]\n  228  \t\tn -= l\n  229  \t}\n  ...\n  236  // the compiler.\n  237  //\n  238: // src/check_expr.cpp(7892): Assertion Failure: `c->curr_proc_decl->entity`\n  239  @(private = \"file\", enable_target_feature = \"sse4.1\")\n  240: hw_inc_ctr32 :: #force_inline proc \"contextless\" (src: ^x86.__m128i, ctr: u32) -> (x86.__m128i, u32) {\n  241: \tret := x86._mm_insert_epi32(src^, i32(intrinsics.byte_swap(ctr)), 3)\n  242  \treturn ret, ctr + 1\n  243  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\aes\\aes_impl_hw_gen.odin:\n   20  \n   21  @(private)\n   22: encrypt_block_hw :: proc(ctx: ^Context_Impl_Hardware, dst, src: []byte) {\n   23  \tpanic(ERR_HW_NOT_SUPPORTED)\n   24  }\n   25  \n   26  @(private)\n   27: decrypt_block_hw :: proc(ctx: ^Context_Impl_Hardware, dst, src: []byte) {\n   28  \tpanic(ERR_HW_NOT_SUPPORTED)\n   29  }\n   30  \n   31  @(private)\n   32: ctr_blocks_hw :: proc(ctx: ^Context_CTR, dst, src: []byte, nr_blocks: int) {\n   33  \tpanic(ERR_HW_NOT_SUPPORTED)\n   34  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\chacha20\\chacha20.odin:\n   64  }\n   65  \n   66: // xor_bytes XORs each byte in src with bytes taken from the (X)ChaCha20\n   67: // keystream, and writes the resulting output to dst.  Dst and src MUST\n   68  // alias exactly or not at all.\n   69: xor_bytes :: proc(ctx: ^Context, dst, src: []byte) {\n   70  \tassert(ctx._state._is_initialized)\n   71  \n   72: \tsrc, dst := src, dst\n   73: \tif dst_len := len(dst); dst_len < len(src) {\n   74: \t\tsrc = src[:dst_len]\n   75  \t}\n   76  \n   77: \tif bytes.alias_inexactly(dst, src) {\n   78: \t\tpanic(\"crypto/chacha20: dst and src alias inexactly\")\n   79  \t}\n   80  \n   81  \tst := &ctx._state\n   82: \t#no_bounds_check for remaining := len(src); remaining > 0; {\n   83  \t\t// Process multiple blocks at once\n   84  \t\tif st._off == _chacha20.BLOCK_SIZE {\n   85  \t\t\tif nr_blocks := remaining / _chacha20.BLOCK_SIZE; nr_blocks > 0 {\n   86  \t\t\t\tdirect_bytes := nr_blocks * _chacha20.BLOCK_SIZE\n   87: \t\t\t\tstream_blocks(ctx, dst, src, nr_blocks)\n   88  \t\t\t\tremaining -= direct_bytes\n   89  \t\t\t\tif remaining == 0 {\n   ..\n   91  \t\t\t\t}\n   92  \t\t\t\tdst = dst[direct_bytes:]\n   93: \t\t\t\tsrc = src[direct_bytes:]\n   94  \t\t\t}\n   95  \n   ..\n  104  \t\tbuffered_keystream := st._buffer[st._off:]\n  105  \t\tfor i := 0; i < to_xor; i = i + 1 {\n  106: \t\t\tdst[i] = buffered_keystream[i] ~ src[i]\n  107  \t\t}\n  108  \t\tst._off += to_xor\n  109  \t\tdst = dst[to_xor:]\n  110: \t\tsrc = src[to_xor:]\n  111  \t\tremaining -= to_xor\n  112  \t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\chacha20\\chacha20_impl.odin:\n   33  \n   34  @(private)\n   35: stream_blocks :: proc(ctx: ^Context, dst, src: []byte, nr_blocks: int) {\n   36  \tswitch ctx._impl {\n   37  \tcase .Simd256:\n   38: \t\tsimd256.stream_blocks(&ctx._state, dst, src, nr_blocks)\n   39  \tcase .Simd128:\n   40: \t\tsimd128.stream_blocks(&ctx._state, dst, src, nr_blocks)\n   41  \tcase .Portable:\n   42: \t\tref.stream_blocks(&ctx._state, dst, src, nr_blocks)\n   43  \t}\n   44  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\chacha20poly1305\\chacha20poly1305.odin:\n   47  \t\t// for reasons that should be obvious.\n   48  \t\tif text_len := len(text); text_len > _P_MAX {\n   49: \t\t\tpanic(\"crypto/chacha20poly1305: oversized src data\")\n   50  \t\t}\n   51  \t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\ed25519\\ed25519.odin:\n  183  \t}\n  184  \n  185: \tsrc := &priv_key._pub_key\n  186: \tcopy(pub_key._b[:], src._b[:])\n  187: \tgrp.ge_set(&pub_key._neg_A, &src._neg_A)\n  188: \tpub_key._is_valid = src._is_valid\n  189: \tpub_key._is_initialized = src._is_initialized\n  190  }\n  191  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\crypto\\hash\\low_level.odin:\n  284  \t\treflect.union_variant_typeid(other._impl),\n  285  \t)\n  286: \tswitch &src_impl in other._impl {\n  287  \tcase blake2b.Context:\n  288: \t\tblake2b.clone(&ctx._impl.(blake2b.Context), &src_impl)\n  289  \tcase blake2s.Context:\n  290: \t\tblake2s.clone(&ctx._impl.(blake2s.Context), &src_impl)\n  291  \tcase sha2.Context_256:\n  292: \t\tsha2.clone(&ctx._impl.(sha2.Context_256), &src_impl)\n  293  \tcase sha2.Context_512:\n  294: \t\tsha2.clone(&ctx._impl.(sha2.Context_512), &src_impl)\n  295  \tcase sha3.Context:\n  296: \t\tsha3.clone(&ctx._impl.(sha3.Context), &src_impl)\n  297  \tcase sm3.Context:\n  298: \t\tsm3.clone(&ctx._impl.(sm3.Context), &src_impl)\n  299  \tcase keccak.Context:\n  300: \t\tkeccak.clone(&ctx._impl.(keccak.Context), &src_impl)\n  301  \tcase md5.Context:\n  302: \t\tmd5.clone(&ctx._impl.(md5.Context), &src_impl)\n  303  \tcase sha1.Context:\n  304: \t\tsha1.clone(&ctx._impl.(sha1.Context), &src_impl)\n  305  \tcase:\n  306  \t\tpanic(\"crypto/hash: uninitialized algorithm\")\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\debug\\pe\\pe.odin:\n  211  \tEXCEPTION             = 5,  // A copy of .pdata section.\n  212  \tFIXUP                 = 6,  // Reserved.\n  213: \tOMAP_TO_SRC           = 7,  // The mapping from an RVA in image to an RVA in source image.\n  214: \tOMAP_FROM_SRC         = 8,  // The mapping from an RVA in source image to an RVA in image.\n  215  \tBORLAND               = 9,  // Reserved for Borland.\n  216  \tRESERVED10            = 10, // Reserved.\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\encoding\\entity\\entity.odin:\n   48  \tw:           int,\n   49  \n   50: \tsrc:         string,\n   51  \toffset:      int,\n   52  \tread_offset: int,\n   ..\n   89  \tdefer strings.builder_destroy(&builder)\n   90  \n   91: \tt := Tokenizer{src=input}\n   92  \tin_data := false\n   93  \n   ..\n  120  \t\t\t// If we're unboxing _and_ decoding CDATA, we'll have to check for the end tag.\n  121  \t\t\tif in_data {\n  122: \t\t\t\tif t.read_offset + len(CDATA_END) < len(t.src) {\n  123: \t\t\t\t\tif string(t.src[t.offset:][:len(CDATA_END)]) == CDATA_END {\n  124  \t\t\t\t\t\tin_data = false\n  125  \t\t\t\t\t\tt.read_offset += len(CDATA_END) - 1\n  ...\n  191  \tif t == nil { return .Tokenizer_Is_Nil }\n  192  \t#no_bounds_check {\n  193: \t\tif t.read_offset < len(t.src) {\n  194  \t\t\tt.offset = t.read_offset\n  195: \t\t\tt.r, t.w   = rune(t.src[t.read_offset]), 1\n  196  \t\t\tswitch {\n  197  \t\t\tcase t.r == 0:\n  198  \t\t\t\treturn .Illegal_NUL_Character\n  199  \t\t\tcase t.r >= utf8.RUNE_SELF:\n  200: \t\t\t\tt.r, t.w = utf8.decode_rune_in_string(t.src[t.read_offset:])\n  201  \t\t\t\tif t.r == utf8.RUNE_ERROR && t.w == 1 {\n  202  \t\t\t\t\treturn .Illegal_UTF_Encoding\n  ...\n  208  \t\t\treturn .None\n  209  \t\t} else {\n  210: \t\t\tt.offset = len(t.src)\n  211  \t\t\tt.r = -1\n  212  \t\t\treturn\n  ...\n  272  \t// Even if one is not, it doesn't matter. All characters we need to compare to extract are.\n  273  \n  274: \tlength := len(t.src)\n  275  \tfound  := false\n  276  \n  277  \t#no_bounds_check {\n  278  \t\tfor t.read_offset < length {\n  279: \t\t\tif t.src[t.read_offset] == ';' {\n  280  \t\t\t\tt.read_offset += 1\n  281  \t\t\t\tfound = true\n  ...\n  287  \n  288  \tif found {\n  289: \t\treturn string(t.src[t.offset + 1 : t.read_offset - 1]), .None\n  290  \t}\n  291: \treturn string(t.src[t.offset : t.read_offset]), .Invalid_Entity_Encoding\n  292  }\n  293  \n  ...\n  296  _handle_xml_special :: proc(t: ^Tokenizer, builder: ^strings.Builder, options: XML_Decode_Options) -> (in_data: bool, err: Error) {\n  297  \tassert(t != nil && t.r == '<')\n  298: \tif t.read_offset + len(CDATA_START) >= len(t.src) { return false, .None }\n  299  \n  300: \tif string(t.src[t.offset:][:len(CDATA_START)]) == CDATA_START {\n  301  \t\tt.read_offset += len(CDATA_START) - 1\n  302  \n  ...\n  314  \t\t\tif t.r < 0 { return true, .CDATA_Not_Terminated }\n  315  \n  316: \t\t\tif t.read_offset + len(CDATA_END) < len(t.src) {\n  317: \t\t\t\tif string(t.src[t.offset:][:len(CDATA_END)]) == CDATA_END {\n  318  \t\t\t\t\tt.read_offset += len(CDATA_END) - 1\n  319  \n  320: \t\t\t\t\tcdata := string(t.src[offset : t.read_offset])\n  321  \t\n  322  \t\t\t\t\tif .Unbox_CDATA in options {\n  ...\n  331  \t\t}\n  332  \n  333: \t} else if string(t.src[t.offset:][:len(COMMENT_START)]) == COMMENT_START {\n  334  \t\tt.read_offset += len(COMMENT_START)\n  335  \t\t// Comment is passed through by default.\n  ...\n  341  \t\t\tif t.r < 0 { return true, .Comment_Not_Terminated }\n  342  \n  343: \t\t\tif t.read_offset + len(COMMENT_END) < len(t.src) {\n  344: \t\t\t\tif string(t.src[t.offset:][:len(COMMENT_END)]) == COMMENT_END {\n  345  \t\t\t\t\tt.read_offset += len(COMMENT_END) - 1\n  346  \n  347  \t\t\t\t\tif .Comment_Strip not_in options {\n  348: \t\t\t\t\t\tcomment := string(t.src[offset : t.read_offset])\n  349  \t\t\t\t\t\twrite_string(builder, comment)\n  350  \t\t\t\t\t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\encoding\\hex\\hex.odin:\n    4  import \"core:strings\"\n    5  \n    6: encode :: proc(src: []byte, allocator := context.allocator, loc := #caller_location) -> []byte #no_bounds_check {\n    7: \tdst := make([]byte, len(src) * 2, allocator, loc)\n    8: \tfor i, j := 0, 0; i < len(src); i += 1 {\n    9: \t\tv := src[i]\n   10  \t\tdst[j]   = HEXTABLE[v>>4]\n   11  \t\tdst[j+1] = HEXTABLE[v&0x0f]\n   ..\n   16  }\n   17  \n   18: encode_into_writer :: proc(dst: io.Writer, src: []byte) -> io.Error {\n   19: \tfor v in src {\n   20  \t\tio.write(dst, {HEXTABLE[v>>4], HEXTABLE[v&0x0f]}) or_return\n   21  \t}\n   ..\n   23  }\n   24  \n   25: decode :: proc(src: []byte, allocator := context.allocator, loc := #caller_location) -> (dst: []byte, ok: bool) #no_bounds_check {\n   26: \tif len(src) % 2 == 1 {\n   27  \t\treturn\n   28  \t}\n   29  \n   30: \tdst = make([]byte, len(src) / 2, allocator, loc)\n   31: \tfor i, j := 0, 1; j < len(src); j += 2 {\n   32: \t\tp := src[j-1]\n   33: \t\tq := src[j]\n   34  \n   35  \t\ta := hex_digit(p) or_return\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\encoding\\ini\\ini.odin:\n   22  Iterator :: struct {\n   23  \tsection: string,\n   24: \t_src:    string,\n   25  \toptions: Options,\n   26  }\n   27  \n   28: iterator_from_string :: proc(src: string, options := DEFAULT_OPTIONS) -> Iterator {\n   29  \treturn {\n   30  \t\tsection = \"\",\n   31  \t\toptions = options,\n   32: \t\t_src = src,\n   33  \t}\n   34  }\n   ..\n   38  // They key and value may be quoted, which may require the use of `strconv.unquote_string`.\n   39  iterate :: proc(it: ^Iterator) -> (key, value: string, ok: bool) {\n   40: \tfor line_ in strings.split_lines_iterator(&it._src) {\n   41  \t\tline := strings.trim_space(line_)\n   42  \n   ..\n   81  Map :: distinct map[string]map[string]string\n   82  \n   83: load_map_from_string :: proc(src: string, allocator: runtime.Allocator, options := DEFAULT_OPTIONS) -> (m: Map, err: runtime.Allocator_Error) {\n   84  \tunquote :: proc(val: string) -> (string, runtime.Allocator_Error) {\n   85  \t\tif len(val) > 0 && (val[0] == '\"' || val[0] == '\\'') {\n   ..\n   98  \tcontext.allocator = allocator\n   99  \n  100: \tit := iterator_from_string(src, options)\n  101  \n  102  \tfor key, value in iterate(&it) {\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\encoding\\xml\\tokenizer.odin:\n   69  \t// Immutable data\n   70  \tpath: string,\n   71: \tsrc:  string,\n   72  \terr:  Error_Handler,\n   73  \n   ..\n   83  }\n   84  \n   85: init :: proc(t: ^Tokenizer, src: string, path: string, err: Error_Handler = default_error_handler) {\n   86: \tt.src = src\n   87  \tt.err = err\n   88  \tt.ch = ' '\n   ..\n   90  \tt.read_offset = 0\n   91  \tt.line_offset = 0\n   92: \tt.line_count = len(src) > 0 ? 1 : 0\n   93  \tt.error_count = 0\n   94  \tt.path = path\n   ..\n  133  \t\t\tAlready bounds-checked here.\n  134  \t\t*/\n  135: \t\tif t.read_offset < len(t.src) {\n  136  \t\t\tt.offset = t.read_offset\n  137  \t\t\tif t.ch == '\\n' {\n  ...\n  139  \t\t\t\tt.line_count += 1\n  140  \t\t\t}\n  141: \t\t\tr, w := rune(t.src[t.read_offset]), 1\n  142  \t\t\tswitch {\n  143  \t\t\tcase r == 0:\n  144  \t\t\t\terror(t, t.offset, \"illegal character NUL\")\n  145  \t\t\tcase r >= utf8.RUNE_SELF:\n  146: \t\t\t\tr, w = #force_inline utf8.decode_rune_in_string(t.src[t.read_offset:])\n  147  \t\t\t\tif r == utf8.RUNE_ERROR && w == 1 {\n  148  \t\t\t\t\terror(t, t.offset, \"illegal UTF-8 encoding\")\n  ...\n  154  \t\t\tt.ch = r\n  155  \t\t} else {\n  156: \t\t\tt.offset = len(t.src)\n  157  \t\t\tif t.ch == '\\n' {\n  158  \t\t\t\tt.line_offset = t.offset\n  ...\n  165  \n  166  peek_byte :: proc(t: ^Tokenizer, offset := 0) -> byte {\n  167: \tif t.read_offset+offset < len(t.src) {\n  168: \t\t#no_bounds_check return t.src[t.read_offset+offset]\n  169  \t}\n  170  \treturn 0\n  ...\n  226  \t\t}\n  227  \t}\n  228: \treturn string(t.src[offset : t.offset])\n  229  }\n  230  \n  ...\n  251  \t\t}\n  252  \n  253: \t\tif string(t.src[t.offset - 1:][:2]) == \"--\" {\n  254  \t\t\tif peek_byte(t) == '>' {\n  255  \t\t\t\tbreak\n  ...\n  264  \texpect(t, .Gt)\n  265  \n  266: \treturn string(t.src[offset : t.offset - 1]), .None\n  267  }\n  268  \n  269  // Skip CDATA\n  270  skip_cdata :: proc(t: ^Tokenizer) -> (err: Error) {\n  271: \tif t.read_offset + len(CDATA_START) >= len(t.src) {\n  272  \t\t// Can't be the start of a CDATA tag.\n  273  \t\treturn .None\n  274  \t}\n  275  \n  276: \tif string(t.src[t.offset:][:len(CDATA_START)]) == CDATA_START {\n  277  \t\tt.read_offset += len(CDATA_START)\n  278  \t\toffset := t.offset\n  ...\n  286  \n  287  \t\t\t// Scan until the end of a CDATA tag.\n  288: \t\t\tif t.read_offset + len(CDATA_END) < len(t.src) {\n  289: \t\t\t\tif string(t.src[t.offset:][:len(CDATA_END)]) == CDATA_END {\n  290  \t\t\t\t\tt.read_offset += len(CDATA_END)\n  291  \t\t\t\t\tbreak cdata_scan\n  ...\n  323  \t\tcase '\\n':\n  324  \t\t\tif !multiline {\n  325: \t\t\t\terror(t, offset, string(t.src[offset : t.offset]))\n  326  \t\t\t\terror(t, offset, \"[scan_string] Not terminated\\n\")\n  327  \t\t\t\terr = .Invalid_Tag_Value\n  ...\n  338  \n  339  \t// Strip trailing whitespace.\n  340: \tlit := string(t.src[offset : t.offset])\n  341  \n  342  \tend := len(lit)\n  ...\n  412  \n  413  \tif kind != .String && lit == \"\" {\n  414: \t\tlit = string(t.src[offset : t.offset])\n  415  \t}\n  416  \treturn Token{kind, lit, pos}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\encoding\\xml\\xml_reader.odin:\n  588  \n  589  \t// \t-1 because the current offset is that of the closing tag, so the rest of the DOCTYPE tag ends just before it.\n  590: \tdoc.doctype.rest = string(t.src[offset : t.offset - 1])\n  591  \treturn .None\n  592  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\hash\\hash.odin:\n  177  }\n  178  \n  179: // See https://github.com/aappleby/smhasher/blob/master/src/MurmurHash2.cpp#L96\n  180  @(optimization_mode=\"favor_size\")\n  181  murmur64a :: proc \"contextless\" (data: []byte, seed := u64(0x9747b28c)) -> u64 {\n  ...\n  218  }\n  219  \n  220: // See https://github.com/aappleby/smhasher/blob/master/src/MurmurHash2.cpp#L140\n  221  @(optimization_mode=\"favor_size\")\n  222  murmur64b :: proc \"contextless\" (data: []byte, seed := u64(0x9747b28c)) -> u64 {\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\hash\\xxhash\\streaming.odin:\n  104  }\n  105  \n  106: XXH3_128_hash_from_canonical :: proc(src: ^XXH128_canonical) -> (hash: u128) {\n  107  \th := XXH128_hash_t{}\n  108  \n  109: \thigh := (^u64be)(&src.digest[0])^\n  110: \tlow  := (^u64be)(&src.digest[8])^\n  111  \n  112  \th.high = u64(high)\n  ...\n  135  }\n  136  \n  137: XXH3_copy_state :: proc(dest, src: ^XXH3_state) {\n  138: \tassert(dest != nil && src != nil)\n  139: \tmem_copy(dest, src, size_of(XXH3_state))\n  140  }\n  141  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\hash\\xxhash\\xxhash_32.odin:\n  208  }\n  209  \n  210: XXH32_copy_state :: proc(dest, src: ^XXH32_state) {\n  211: \tassert(dest != nil && src != nil)\n  212: \tmem_copy(dest, src, size_of(XXH32_state))\n  213  }\n  214  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\hash\\xxhash\\xxhash_64.odin:\n  174  }\n  175  \n  176: XXH64_copy_state :: proc(dest, src: ^XXH64_state) {\n  177: \tassert(dest != nil && src != nil)\n  178: \tmem_copy(dest, src, size_of(XXH64_state))\n  179  }\n  180  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\image\\png\\png.odin:\n  213  }\n  214  \n  215: copy_chunk :: proc(src: image.PNG_Chunk, allocator := context.allocator) -> (dest: image.PNG_Chunk, err: Error) {\n  216: \tif int(src.header.length) != len(src.data) {\n  217  \t\treturn {}, .Invalid_Chunk_Length\n  218  \t}\n  219  \n  220: \tdest.header = src.header\n  221: \tdest.crc    = src.crc\n  222  \tdest.data   = make([]u8, dest.header.length, allocator) or_return\n  223  \n  224: \tcopy(dest.data[:], src.data[:])\n  225  \treturn\n  226  }\n  227  \n  228: append_chunk :: proc(list: ^[dynamic]image.PNG_Chunk, src: image.PNG_Chunk, allocator := context.allocator) -> (err: Error) {\n  229: \tif int(src.header.length) != len(src.data) {\n  230  \t\treturn .Invalid_Chunk_Length\n  231  \t}\n  232  \n  233: \tc := copy_chunk(src, allocator) or_return\n  234  \tlength := len(list)\n  235  \tappend(list, c)\n  ...\n 1202  \n 1203  Filter_Params :: struct #packed {\n 1204: \tsrc:      []u8,\n 1205  \tdest:     []u8,\n 1206  \twidth:    int,\n ....\n 1230  \t\tnk := row_stride - channels\n 1231  \n 1232: \t\tfilter := Row_Filter(src[0]); src = src[1:]\n 1233  \t\tswitch filter {\n 1234  \t\tcase .None:\n 1235: \t\t\tcopy(dest, src[:row_stride])\n 1236  \t\tcase .Sub:\n 1237  \t\t\tfor i := 0; i < channels; i += 1 {\n 1238: \t\t\t\tdest[i] = src[i]\n 1239  \t\t\t}\n 1240  \t\t\tfor k := 0; k < nk; k += 1 {\n 1241: \t\t\t\tdest[channels+k] = (src[channels+k] + dest[k]) & 255\n 1242  \t\t\t}\n 1243  \t\tcase .Up:\n 1244  \t\t\tfor k := 0; k < row_stride; k += 1 {\n 1245: \t\t\t\tdest[k] = (src[k] + up[k]) & 255\n 1246  \t\t\t}\n 1247  \t\tcase .Average:\n 1248  \t\t\tfor i := 0; i < channels; i += 1 {\n 1249  \t\t\t\tavg := up[i] >> 1\n 1250: \t\t\t\tdest[i] = (src[i] + avg) & 255\n 1251  \t\t\t}\n 1252  \t\t\tfor k := 0; k < nk; k += 1 {\n 1253  \t\t\t\tavg := u8((u16(up[channels+k]) + u16(dest[k])) >> 1)\n 1254: \t\t\t\tdest[channels+k] = (src[channels+k] + avg) & 255\n 1255  \t\t\t}\n 1256  \t\tcase .Paeth:\n 1257  \t\t\tfor i := 0; i < channels; i += 1 {\n 1258  \t\t\t\tpaeth := filter_paeth(0, up[i], 0)\n 1259: \t\t\t\tdest[i] = (src[i] + paeth) & 255\n 1260  \t\t\t}\n 1261  \t\t\tfor k := 0; k < nk; k += 1 {\n 1262  \t\t\t\tpaeth := filter_paeth(dest[k], up[channels+k], up[k])\n 1263: \t\t\t\tdest[channels+k] = (src[channels+k] + paeth) & 255\n 1264  \t\t\t}\n 1265  \t\tcase:\n ....\n 1267  \t\t}\n 1268  \n 1269: \t\tsrc     = src[row_stride:]\n 1270  \t\tup      = dest\n 1271  \t\tdest    = dest[row_stride:]\n ....\n 1299  \t\tdest = dest[row_offset:]\n 1300  \n 1301: \t\tfilter := Row_Filter(src[0]); src = src[1:]\n 1302  \t\tswitch filter {\n 1303  \t\tcase .None:\n 1304: \t\t\tcopy(dest, src[:row_stride_in])\n 1305  \t\tcase .Sub:\n 1306  \t\t\tfor i in 0..=channels {\n 1307: \t\t\t\tdest[i] = src[i]\n 1308  \t\t\t}\n 1309  \t\t\tfor k in 0..=nk {\n 1310: \t\t\t\tdest[channels+k] = (src[channels+k] + dest[k]) & 255\n 1311  \t\t\t}\n 1312  \t\tcase .Up:\n 1313  \t\t\tfor k in 0..=row_stride_in {\n 1314: \t\t\t\tdest[k] = (src[k] + up[k]) & 255\n 1315  \t\t\t}\n 1316  \t\tcase .Average:\n 1317  \t\t\tfor i in 0..=channels {\n 1318  \t\t\t\tavg := up[i] >> 1\n 1319: \t\t\t\tdest[i] = (src[i] + avg) & 255\n 1320  \t\t\t}\n 1321  \t\t\tfor k in 0..=nk {\n 1322  \t\t\t\tavg := u8((u16(up[channels+k]) + u16(dest[k])) >> 1)\n 1323: \t\t\t\tdest[channels+k] = (src[channels+k] + avg) & 255\n 1324  \t\t\t}\n 1325  \t\tcase .Paeth:\n 1326  \t\t\tfor i in 0..=channels {\n 1327  \t\t\t\tpaeth := filter_paeth(0, up[i], 0)\n 1328: \t\t\t\tdest[i] = (src[i] + paeth) & 255\n 1329  \t\t\t}\n 1330  \t\t\tfor k in 0..=nk {\n 1331  \t\t\t\tpaeth := filter_paeth(dest[k], up[channels+k], up[k])\n 1332: \t\t\t\tdest[channels+k] = (src[channels+k] + paeth) & 255\n 1333  \t\t\t}\n 1334  \t\tcase:\n ....\n 1336  \t\t}\n 1337  \n 1338: \t\tsrc  = src[row_stride_in:]\n 1339  \t\tup   = dest\n 1340  \t\tdest = dest[row_stride_in:]\n ....\n 1355  \n 1356  \tfor j := 0; j < height; j += 1 {\n 1357: \t\tsrc = dest[row_offset:]\n 1358  \n 1359  \t\tswitch depth {\n ....\n 1361  \t\t\tk := row_stride_out\n 1362  \t\t\tfor ; k >= 2; k -= 2 {\n 1363: \t\t\t\tc := src[0]\n 1364  \t\t\t\tdest[0] = scale * (c >> 4)\n 1365  \t\t\t\tdest[1] = scale * (c & 15)\n 1366: \t\t\t\tdest = dest[2:]; src = src[1:]\n 1367  \t\t\t}\n 1368  \t\t\tif k > 0 {\n 1369: \t\t\t\tc := src[0]\n 1370  \t\t\t\tdest[0] = scale * (c >> 4)\n 1371  \t\t\t\tdest = dest[1:]\n ....\n 1374  \t\t\tk := row_stride_out\n 1375  \t\t\tfor ; k >= 4; k -= 4 {\n 1376: \t\t\t\tc := src[0]\n 1377  \t\t\t\tdest[0] = scale * ((c >> 6)    )\n 1378  \t\t\t\tdest[1] = scale * ((c >> 4) & 3)\n 1379  \t\t\t\tdest[2] = scale * ((c >> 2) & 3)\n 1380  \t\t\t\tdest[3] = scale * ((c     ) & 3)\n 1381: \t\t\t\tdest = dest[4:]; src = src[1:]\n 1382  \t\t\t}\n 1383  \t\t\tif k > 0 {\n 1384: \t\t\t\tc := src[0]\n 1385  \t\t\t\tdest[0] = scale * ((c >> 6)    )\n 1386  \t\t\t\tif k > 1 {\n ....\n 1395  \t\t\tk := row_stride_out\n 1396  \t\t\tfor ; k >= 8; k -= 8 {\n 1397: \t\t\t\tc := src[0]\n 1398  \t\t\t\tdest[0] = scale * ((c >> 7)    )\n 1399  \t\t\t\tdest[1] = scale * ((c >> 6) & 1)\n ....\n 1404  \t\t\t\tdest[6] = scale * ((c >> 1) & 1)\n 1405  \t\t\t\tdest[7] = scale * ((c     ) & 1)\n 1406: \t\t\t\tdest = dest[8:]; src = src[1:]\n 1407  \t\t\t}\n 1408  \t\t\tif k > 0 {\n 1409: \t\t\t\tc := src[0]\n 1410  \t\t\t\tdest[0] = scale * ((c >> 7)    )\n 1411  \t\t\t\tif k > 1 {\n ....\n 1453  \t\tnk := row_stride - stride\n 1454  \n 1455: \t\tfilter := Row_Filter(src[0]); src = src[1:]\n 1456  \t\tswitch filter {\n 1457  \t\tcase .None:\n 1458: \t\t\tcopy(dest, src[:row_stride])\n 1459  \t\tcase .Sub:\n 1460  \t\t\tfor i := 0; i < stride; i += 1 {\n 1461: \t\t\t\tdest[i] = src[i]\n 1462  \t\t\t}\n 1463  \t\t\tfor k := 0; k < nk; k += 1 {\n 1464: \t\t\t\tdest[stride+k] = (src[stride+k] + dest[k]) & 255\n 1465  \t\t\t}\n 1466  \t\tcase .Up:\n 1467  \t\t\tfor k := 0; k < row_stride; k += 1 {\n 1468: \t\t\t\tdest[k] = (src[k] + up[k]) & 255\n 1469  \t\t\t}\n 1470  \t\tcase .Average:\n 1471  \t\t\tfor i := 0; i < stride; i += 1 {\n 1472  \t\t\t\tavg := up[i] >> 1\n 1473: \t\t\t\tdest[i] = (src[i] + avg) & 255\n 1474  \t\t\t}\n 1475  \t\t\tfor k := 0; k < nk; k += 1 {\n 1476  \t\t\t\tavg := u8((u16(up[stride+k]) + u16(dest[k])) >> 1)\n 1477: \t\t\t\tdest[stride+k] = (src[stride+k] + avg) & 255\n 1478  \t\t\t}\n 1479  \t\tcase .Paeth:\n 1480  \t\t\tfor i := 0; i < stride; i += 1 {\n 1481  \t\t\t\tpaeth := filter_paeth(0, up[i], 0)\n 1482: \t\t\t\tdest[i] = (src[i] + paeth) & 255\n 1483  \t\t\t}\n 1484  \t\t\tfor k := 0; k < nk; k += 1 {\n 1485  \t\t\t\tpaeth := filter_paeth(dest[k], up[stride+k], up[k])\n 1486: \t\t\t\tdest[stride+k] = (src[stride+k] + paeth) & 255\n 1487  \t\t\t}\n 1488  \t\tcase:\n ....\n 1490  \t\t}\n 1491  \n 1492: \t\tsrc     = src[row_stride:]\n 1493  \t\tup      = dest\n 1494  \t\tdest    = dest[row_stride:]\n ....\n 1517  \tif header.interlace_method != .Adam7 {\n 1518  \t\tparams := Filter_Params{\n 1519: \t\t\tsrc      = input,\n 1520  \t\t\twidth    = width,\n 1521  \t\t\theight   = height,\n ....\n 1556  \n 1557  \t\t\t\tparams := Filter_Params{\n 1558: \t\t\t\t\tsrc      = input,\n 1559  \t\t\t\t\twidth    = x,\n 1560  \t\t\t\t\theight   = y,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\image\\tga\\tga.odin:\n  142  \tcolor_mapped  := false\n  143  \tblack_white   := false\n  144: \tsrc_channels  := 0\n  145  \tdest_depth    := header.bits_per_pixel\n  146  \tdest_channels := 0\n  ...\n  183  \tswitch dest_depth {\n  184  \tcase 15: // B5G5R5\n  185: \t\tsrc_channels  = 2\n  186  \t\tdest_channels = 3\n  187  \t\tif color_mapped {\n  188: \t\t\tsrc_channels = 1\n  189  \t\t}\n  190  \tcase 16: // B5G5R5A1\n  191: \t\tsrc_channels  = 2\n  192  \t\tdest_channels = 3 // Alpha bit is dodgy in TGA, so we ignore it.\n  193  \t\tif color_mapped {\n  194: \t\t\tsrc_channels = 1\n  195  \t\t}\n  196  \tcase 24: // RGB8\n  197: \t\tsrc_channels  = 1 if (color_mapped || black_white) else 3\n  198  \t\tdest_channels = 3\n  199  \tcase 32: // RGBA8\n  200: \t\tsrc_channels  = 4 if !color_mapped else 1\n  201  \t\tdest_channels = 4\n  202  \n  ...\n  329  \t\t\t// Read pixel\n  330  \t\t\tif read_pixel {\n  331: \t\t\t\tsrc, src_err := compress.read_slice(ctx, src_channels)\n  332: \t\t\t\tif src_err != .None {\n  333  \t\t\t\t\treturn img, .Corrupt\n  334  \t\t\t\t}\n  335: \t\t\t\tswitch src_channels {\n  336  \t\t\t\tcase 1:\n  337  \t\t\t\t\t// Color-mapped or Black & White\n  338  \t\t\t\t\tif black_white {\n  339: \t\t\t\t\t\tpixel = {src[0], src[0], src[0], 255}\n  340  \t\t\t\t\t} else if header.color_map_depth == 24 {\n  341: \t\t\t\t\t\tpixel = color_map[src[0]].bgra\n  342  \t\t\t\t\t} else if header.color_map_depth == 16 {\n  343: \t\t\t\t\t\tlut := color_map[src[0]]\n  344  \t\t\t\t\t\tv := u16(lut.r) | u16(lut.g) << 8\n  345  \t\t\t\t\t\tb := u8( v        & 31) << 3\n  ...\n  350  \n  351  \t\t\t\tcase 2:\n  352: \t\t\t\t\tv := u16(src[0]) | u16(src[1]) << 8\n  353  \t\t\t\t\tb := u8( v        & 31) << 3\n  354  \t\t\t\t\tg := u8((v >>  5) & 31) << 3\n  ...\n  357  \n  358  \t\t\t\tcase 3:\n  359: \t\t\t\t\tpixel = {src[2], src[1], src[0], 255}\n  360  \t\t\t\tcase 4:\n  361: \t\t\t\t\tpixel = {src[2], src[1], src[0], src[3]}\n  362  \t\t\t\tcase:\n  363  \t\t\t\t\treturn img, .Corrupt\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\io\\io.odin:\n  379  }\n  380  \n  381: // copy copies from src to dst till either EOF is reached on src or an error occurs\n  382  // It returns the number of bytes copied and the first error that occurred whilst copying, if any.\n  383: copy :: proc(dst: Writer, src: Reader) -> (written: i64, err: Error) {\n  384: \treturn _copy_buffer(dst, src, nil)\n  385  }\n  386  \n  ...\n  388  // rather than allocating a temporary one on the stack through `intrinsics.alloca`\n  389  // If buf is `nil`, it is allocate through `intrinsics.alloca`; otherwise if it has zero length, it will panic\n  390: copy_buffer :: proc(dst: Writer, src: Reader, buf: []byte) -> (written: i64, err: Error) {\n  391  \tif buf != nil && len(buf) == 0 {\n  392  \t\tpanic(\"empty buffer in io.copy_buffer\")\n  393  \t}\n  394: \treturn _copy_buffer(dst, src, buf)\n  395  }\n  396  \n  397  \n  398  \n  399: // copy_n copies n bytes (or till an error) from src to dst.\n  400  // It returns the number of bytes copied and the first error that occurred whilst copying, if any.\n  401  // On return, written == n IFF err == nil\n  402: copy_n :: proc(dst: Writer, src: Reader, n: i64) -> (written: i64, err: Error) {\n  403: \tnsrc := limited_reader_init(&Limited_Reader{}, src, n)\n  404: \twritten, err = copy(dst, nsrc)\n  405  \tif written == n {\n  406  \t\treturn n, nil\n  407  \t}\n  408  \tif written < n && err == nil {\n  409: \t\t// src stopped early and must have been an EOF\n  410  \t\terr = .EOF\n  411  \t}\n  ...\n  415  \n  416  @(private)\n  417: _copy_buffer :: proc(dst: Writer, src: Reader, buf: []byte) -> (written: i64, err: Error) {\n  418: \tif dst.procedure == nil || src.procedure == nil {\n  419  \t\treturn 0, .Empty\n  420  \t}\n  ...\n  423  \t\tDEFAULT_SIZE :: 4 * 1024\n  424  \t\tsize := DEFAULT_SIZE\n  425: \t\tif src.procedure == _limited_reader_proc {\n  426: \t\t\tl := (^Limited_Reader)(src.data)\n  427  \t\t\tif i64(size) > l.n {\n  428  \t\t\t\tif l.n < 1 {\n  ...\n  437  \t}\n  438  \tfor {\n  439: \t\tnr, er := read(src, buf)\n  440  \t\tif nr > 0 {\n  441  \t\t\tnw, ew := write(dst, buf[0:nr])\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\math.odin:\n  655  @(require_results)\n  656  round_f16 :: proc \"contextless\" (x: f16) -> f16 {\n  657: \t// origin: Go /src/math/floor.go\n  658  \t//\n  659  \t// Copyright (c) 2009 The Go Authors. All rights reserved.\n  ...\n  712  @(require_results)\n  713  round_f32 :: proc \"contextless\" (x: f32) -> f32 {\n  714: \t// origin: Go /src/math/floor.go\n  715  \t//\n  716  \t// Copyright (c) 2009 The Go Authors. All rights reserved.\n  ...\n  769  @(require_results)\n  770  round_f64 :: proc \"contextless\" (x: f64) -> f64 {\n  771: \t// origin: Go /src/math/floor.go\n  772  \t//\n  773  \t// Copyright (c) 2009 The Go Authors. All rights reserved.\n  ...\n 1622  \n 1623  @(require_results)\n 1624: cumsum :: proc \"contextless\" (dst, src: $T/[]$E) -> T\n 1625  \twhere intrinsics.type_is_numeric(E) {\n 1626: \tN := min(len(dst), len(src))\n 1627  \tif N > 0 {\n 1628: \t\tdst[0] = src[0]\n 1629  \t\tfor i in 1..<N {\n 1630: \t\t\tdst[i] = dst[i-1] + src[i]\n 1631  \t\t}\n 1632  \t}\n ....\n 1801  @(require_results)\n 1802  asin_f64 :: proc \"contextless\" (x: f64) -> f64 {\n 1803: \t/* origin: FreeBSD /usr/src/lib/msun/src/e_asin.c */\n 1804  \t/*\n 1805  \t * ====================================================\n ....\n 1914  @(require_results)\n 1915  acos_f64 :: proc \"contextless\" (x: f64) -> f64 {\n 1916: \t/* origin: FreeBSD /usr/src/lib/msun/src/e_acos.c */\n 1917  \t/*\n 1918  \t * ====================================================\n ....\n 2075  asinh :: proc \"contextless\" (y: $T) -> T where intrinsics.type_is_float(T) {\n 2076  \t// The original C code, the long comment, and the constants\n 2077: \t// below are from FreeBSD's /usr/src/lib/msun/src/s_asinh.c\n 2078  \t// and came with this notice. \n 2079  \t//\n ....\n 2122  acosh :: proc \"contextless\" (y: $T) -> T where intrinsics.type_is_float(T) {\n 2123  \t// The original C code, the long comment, and the constants\n 2124: \t// below are from FreeBSD's /usr/src/lib/msun/src/e_acosh.c\n 2125  \t// and came with this notice. \n 2126  \t//\n ....\n 2154  atanh :: proc \"contextless\" (y: $T) -> T where intrinsics.type_is_float(T) {\n 2155  \t// The original C code, the long comment, and the constants\n 2156: \t// below are from FreeBSD's /usr/src/lib/msun/src/e_atanh.c\n 2157  \t// and came with this notice. \n 2158  \t//\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\math_basic.odin:\n  126  ln_f64 :: proc \"contextless\" (x: f64) -> f64 {\n  127  \t// The original C code, the long comment, and the constants\n  128: \t// below are from FreeBSD's /usr/src/lib/msun/src/e_log.c\n  129  \t// and came with this notice.\n  130  \t//\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\math_erf.odin:\n    2  \n    3  // The original C code and the long comment below are\n    4: // from FreeBSD's /usr/src/lib/msun/src/s_erf.c and\n    5  // came with this notice. \n    6  //\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\math_lgamma.odin:\n    2  \n    3  // The original C code and the long comment below are\n    4: // from FreeBSD's /usr/src/lib/msun/src/e_lgamma_r.c and\n    5  // came with this notice. \n    6  //\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\math_log1p.odin:\n    2  \n    3  // The original C code, the long comment, and the constants\n    4: // below are from FreeBSD's /usr/src/lib/msun/src/s_log1p.c\n    5  // and came with this notice. The go code is a simplified\n    6  // version of the original C.\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\helpers.odin:\n   29  \tHelpers to set an `Int` to a specific value.\n   30  */\n   31: int_set_from_integer :: proc(dest: ^Int, src: $T, minimize := false, allocator := context.allocator) -> (err: Error)\n   32  \twhere intrinsics.type_is_integer(T) {\n   33  \tcontext.allocator = allocator\n   34: \tsrc := src\n   35  \n   36  \t/*\n   37: \t\tCheck that `src` is usable and `dest` isn't immutable.\n   38  \t*/\n   39  \tassert_if_nil(dest)\n   40  \t#force_inline internal_error_if_immutable(dest) or_return\n   41  \n   42: \treturn #force_inline internal_int_set_from_integer(dest, src, minimize)\n   43  }\n   44  \n   ..\n   61  \tCopy one `Int` to another.\n   62  */\n   63: int_copy :: proc(dest, src: ^Int, minimize := false, allocator := context.allocator) -> (err: Error) {\n   64  \t/*\n   65: \t\tIf dest == src, do nothing\n   66  \t*/\n   67: \tif (dest == src) { return nil }\n   68  \n   69  \t/*\n   70: \t\tCheck that `src` is usable and `dest` isn't immutable.\n   71  \t*/\n   72: \tassert_if_nil(dest, src)\n   73  \tcontext.allocator = allocator\n   74  \n   75: \t#force_inline internal_clear_if_uninitialized(src) or_return\n   76  \t#force_inline internal_error_if_immutable(dest)    or_return\n   77  \n   78: \treturn #force_inline internal_int_copy(dest, src, minimize)\n   79  }\n   80  copy :: proc { \n   ..\n   95  \n   96  /*\n   97: \tSet `dest` to |`src`|.\n   98  */\n   99: int_abs :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  100  \t/*\n  101: \t\tCheck that `src` is usable and `dest` isn't immutable.\n  102  \t*/\n  103: \tassert_if_nil(dest, src)\n  104  \tcontext.allocator = allocator\n  105  \n  106: \t#force_inline internal_clear_if_uninitialized(src) or_return\n  107  \t#force_inline internal_error_if_immutable(dest)    or_return\n  108  \n  109: \treturn #force_inline internal_int_abs(dest, src)\n  110  }\n  111  \n  ...\n  116  \n  117  /*\n  118: \tSet `dest` to `-src`.\n  119  */\n  120: int_neg :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  121  \t/*\n  122: \t\tCheck that `src` is usable and `dest` isn't immutable.\n  123  \t*/\n  124: \tassert_if_nil(dest, src)\n  125  \tcontext.allocator = allocator\n  126  \n  127: \t#force_inline internal_clear_if_uninitialized(src) or_return\n  128  \t#force_inline internal_error_if_immutable(dest)    or_return\n  129  \n  130: \treturn #force_inline internal_int_neg(dest, src)\n  131  }\n  132  neg :: proc { int_neg, rat_neg }\n  ...\n  444  init_multi :: proc { int_init_multi, }\n  445  \n  446: copy_digits :: proc(dest, src: ^Int, digits: int, offset := int(0), allocator := context.allocator) -> (err: Error) {\n  447  \tcontext.allocator = allocator\n  448  \n  449  \t/*\n  450: \t\tCheck that `src` is usable and `dest` isn't immutable.\n  451  \t*/\n  452: \tassert_if_nil(dest, src)\n  453: \t#force_inline internal_clear_if_uninitialized(src) or_return\n  454  \n  455: \treturn #force_inline internal_copy_digits(dest, src, digits, offset)\n  456  }\n  457  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\internal.odin:\n  467  \n  468  /*\n  469: \tdest = src  / 2\n  470: \tdest = src >> 1\n  471  \n  472: \tAssumes `dest` and `src` not to be `nil` and have been initialized.\n  473  \tWe make no allocations here.\n  474  */\n  475: internal_int_shr1 :: proc(dest, src: ^Int) -> (err: Error) {\n  476: \told_used  := dest.used; dest.used = src.used\n  477  \t/*\n  478  \t\tCarry\n  ...\n  484  \t\t\tGet the carry for the next iteration.\n  485  \t\t*/\n  486: \t\tsrc_digit := src.digit[x]\n  487: \t\tcarry     := src_digit & 1\n  488  \t\t/*\n  489  \t\t\tShift the current digit, add in carry and store.\n  490  \t\t*/\n  491: \t\tdest.digit[x] = (src_digit >> 1) | (fwd_carry << (_DIGIT_BITS - 1))\n  492  \t\t/*\n  493  \t\t\tForward carry to next iteration.\n  ...\n  504  \t\tAdjust dest.used based on leading zeroes.\n  505  \t*/\n  506: \tdest.sign = src.sign\n  507  \treturn internal_clamp(dest)\t\n  508  }\n  509  \n  510  /*\n  511: \tdest = src  * 2\n  512: \tdest = src << 1\n  513  */\n  514: internal_int_shl1 :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  515  \tcontext.allocator = allocator\n  516  \n  517: \tinternal_copy(dest, src) or_return\n  518  \t/*\n  519  \t\tGrow `dest` to accommodate the additional bits.\n  ...\n  564  \tMultiply by a DIGIT.\n  565  */\n  566: internal_int_mul_digit :: proc(dest, src: ^Int, multiplier: DIGIT, allocator := context.allocator) -> (err: Error) {\n  567  \tcontext.allocator = allocator\n  568: \tassert_if_nil(dest, src)\n  569  \n  570  \tif multiplier == 0 {\n  ...\n  572  \t}\n  573  \tif multiplier == 1 {\n  574: \t\treturn internal_copy(dest, src)\n  575  \t}\n  576  \n  ...\n  579  \t*/\n  580  \tif multiplier == 2 {\n  581: \t\treturn #force_inline internal_int_shl1(dest, src)\n  582  \t}\n  583  \tif #force_inline platform_int_is_power_of_two(int(multiplier)) {\n  584  \t\tix := internal_log(multiplier, 2) or_return\n  585: \t\treturn internal_shl(dest, src, ix)\n  586  \t}\n  587  \n  588  \t/*\n  589: \t\tEnsure `dest` is big enough to hold `src` * `multiplier`.\n  590  \t*/\n  591: \tgrow(dest, max(src.used + 1, _DEFAULT_DIGIT_COUNT)) or_return\n  592  \n  593  \t/*\n  ...\n  598  \t\tSet the sign.\n  599  \t*/\n  600: \tdest.sign = src.sign\n  601  \t/*\n  602  \t\tSet up carry.\n  ...\n  607  \t*/\n  608  \tix := 0\n  609: \t#no_bounds_check for ; ix < src.used; ix += 1 {\n  610  \t\t/*\n  611  \t\t\tCompute product and carry sum for this term\n  612  \t\t*/\n  613: \t\tproduct := carry + _WORD(src.digit[ix]) * _WORD(multiplier)\n  614  \t\t/*\n  615  \t\t\tMask off higher bits to get a single DIGIT.\n  ...\n  626  \t*/\n  627  \tdest.digit[ix] = DIGIT(carry)\n  628: \tdest.used = src.used + 1\n  629  \n  630  \t/*\n  ...\n  639  \tHigh level multiplication (handles sign).\n  640  */\n  641: internal_int_mul :: proc(dest, src, multiplier: ^Int, allocator := context.allocator) -> (err: Error) {\n  642  \tcontext.allocator = allocator\n  643  \t/*\n  644  \t\tEarly out for `multiplier` is zero; Set `dest` to zero.\n  645  \t*/\n  646: \tif multiplier.used == 0 || src.used == 0 { return internal_zero(dest) }\n  647  \n  648: \tneg := src.sign != multiplier.sign\n  649  \n  650: \tif src == multiplier {\n  651  \t\t/*\n  652  \t\t\tDo we need to square?\n  653  \t\t*/\n  654: \t\tif src.used >= SQR_TOOM_CUTOFF {\n  655  \t\t\t/*\n  656  \t\t\t\tUse Toom-Cook?\n  657  \t\t\t*/\n  658: \t\t\terr = #force_inline _private_int_sqr_toom(dest, src)\n  659: \t\t} else if src.used >= SQR_KARATSUBA_CUTOFF {\n  660  \t\t\t/*\n  661  \t\t\t\tKaratsuba?\n  662  \t\t\t*/\n  663: \t\t\terr = #force_inline _private_int_sqr_karatsuba(dest, src)\n  664: \t\t} else if ((src.used * 2) + 1) < _WARRAY && src.used < (_MAX_COMBA / 2) {\n  665  \t\t\t/*\n  666  \t\t\t\tFast comba?\n  667  \t\t\t*/\n  668: \t\t\terr = #force_inline _private_int_sqr_comba(dest, src)\n  669  \t\t} else {\n  670: \t\t\terr = #force_inline _private_int_sqr(dest, src)\n  671  \t\t}\n  672  \t} else {\n  ...\n  680  \t\t*/\n  681  \n  682: \t\tmin_used := min(src.used, multiplier.used)\n  683: \t\tmax_used := max(src.used, multiplier.used)\n  684: \t\tdigits   := src.used + multiplier.used + 1\n  685  \n  686  \t\tif min_used >= MUL_KARATSUBA_CUTOFF && (max_used / 2) >= MUL_KARATSUBA_CUTOFF && max_used >= (2 * min_used) {\n  ...\n  688  \t\t\t\tNot much effect was observed below a ratio of 1:2, but again: YMMV.\n  689  \t\t\t*/\n  690: \t\t\terr = _private_int_mul_balance(dest, src, multiplier)\n  691  \t\t} else if min_used >= MUL_TOOM_CUTOFF {\n  692  \t\t\t/*\n  ...\n  694  \t\t\t\tas reveaved in the long test.\n  695  \t\t\t*/\n  696: \t\t\terr = #force_inline _private_int_mul_toom(dest, src, multiplier)\n  697  \t\t} else if min_used >= MUL_KARATSUBA_CUTOFF {\n  698: \t\t\terr = #force_inline _private_int_mul_karatsuba(dest, src, multiplier)\n  699  \t\t} else if digits < _WARRAY && min_used <= _MAX_COMBA {\n  700  \t\t\t/*\n  ...\n  704  \t\t\t\t* digits won't affect carry propagation\n  705  \t\t\t*/\n  706: \t\t\terr = #force_inline _private_int_mul_comba(dest, src, multiplier, digits)\n  707  \t\t} else {\n  708: \t\t\terr = #force_inline _private_int_mul(dest, src, multiplier, digits)\n  709  \t\t}\n  710  \t}\n  ...\n  716  internal_mul :: proc { internal_int_mul, internal_int_mul_digit, internal_int_mul_integer }\n  717  \n  718: internal_sqr :: proc (dest, src: ^Int, allocator := context.allocator) -> (res: Error) {\n  719  \t/*\n  720  \t\tWe call `internal_mul` and not e.g. `_private_int_sqr` because the former\n  721  \t\twill dispatch to the optimal implementation depending on the source.\n  722  \t*/\n  723: \treturn #force_inline internal_mul(dest, src, src, allocator)\n  724  }\n  725  \n  ...\n 1625  /*\n 1626  \tThis function is less generic than `root_n`, simpler and faster.\n 1627: \tAssumes `dest` and `src` not to be `nil` and to have been initialized.\n 1628  */\n 1629: internal_int_sqrt :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n 1630  \tcontext.allocator = allocator\n 1631  \n ....\n 1633  \t\tMust be positive.\n 1634  \t*/\n 1635: \tif #force_inline internal_is_negative(src)  { return .Invalid_Argument }\n 1636  \n 1637  \t/*\n 1638: \t\tEasy out. If src is zero, so is dest.\n 1639  \t*/\n 1640: \tif #force_inline internal_is_zero(src)      { return internal_zero(dest) }\n 1641  \n 1642  \t/*\n ....\n 1646  \tdefer internal_destroy(x, y, t1, t2)\n 1647  \n 1648: \tcount := #force_inline internal_count_bits(src)\n 1649  \n 1650  \ta, b := count >> 1, count & 1\n ....\n 1655  \t\t\ty = (x + n // x) // 2\n 1656  \t\t*/\n 1657: \t\tinternal_div(t1, src, x) or_return\n 1658  \t\tinternal_add(t2, t1, x)  or_return\n 1659  \t\tinternal_shr(y, t2, 1)   or_return\n ....\n 1674  /*\n 1675  \tFind the nth root of an Integer.\n 1676: \tResult found such that `(dest)**n <= src` and `(dest+1)**n > src`\n 1677  \n 1678  \tThis algorithm uses Newton's approximation `x[i+1] = x[i] - f(x[i])/f'(x[i])`,\n 1679  \twhich will find the root in `log(n)` time where each step involves a fair bit.\n 1680  \n 1681: \tAssumes `dest` and `src` not to be `nil` and have been initialized.\n 1682  */\n 1683: internal_int_root_n :: proc(dest, src: ^Int, n: int, allocator := context.allocator) -> (err: Error) {\n 1684  \tcontext.allocator = allocator\n 1685  \n ....\n 1687  \t\tFast path for n == 2\n 1688  \t*/\n 1689: \tif n == 2 { return #force_inline internal_sqrt(dest, src) }\n 1690  \n 1691  \tif n < 0 || n > int(_DIGIT_MAX) { return .Invalid_Argument }\n 1692  \n 1693: \tif n & 1 == 0 && #force_inline internal_is_negative(src) { return .Invalid_Argument }\n 1694  \n 1695  \t/*\n ....\n 1700  \n 1701  \t/*\n 1702: \t\tIf `src` is negative fudge the sign but keep track.\n 1703  \t*/\n 1704  \ta.sign  = .Zero_or_Positive\n 1705: \ta.used  = src.used\n 1706: \ta.digit = src.digit\n 1707  \n 1708  \t/*\n 1709  \t\tIf \"n\" is larger than INT_MAX it is also larger than\n 1710: \t\tlog_2(src) because the bit-length of the \"src\" is measured\n 1711  \t\twith an int and hence the root is always < 2 (two).\n 1712  \t*/\n ....\n 1718  \n 1719  \t/*\n 1720: \t\tCompute seed: 2^(log_2(src)/n + 2)\n 1721  \t*/\n 1722: \tilog2 := internal_count_bits(src)\n 1723  \n 1724  \t/*\n 1725: \t\t\"src\" is smaller than max(int), we can cast safely.\n 1726  \t*/\n 1727  \tif ilog2 < n {\n ....\n 1831  \t\tSet the sign of the result.\n 1832  \t*/\n 1833: \tdest.sign = src.sign\n 1834  \n 1835  \treturn err\n ....\n 1864  \tHelpers to set an `Int` to a specific value.\n 1865  */\n 1866: internal_int_set_from_integer :: proc(dest: ^Int, src: $T, minimize := false, allocator := context.allocator) -> (err: Error)\n 1867  \twhere intrinsics.type_is_integer(T) {\n 1868  \tcontext.allocator = allocator\n ....\n 1878  \n 1879  \tdest.used  = 0\n 1880: \tdest.sign = .Negative if src < 0 else .Zero_or_Positive\n 1881  \n 1882: \ttemp := src\n 1883  \n 1884: \tis_maximally_negative := src == min(T)\n 1885  \tif is_maximally_negative {\n 1886  \t\t/*\n ....\n 1906  internal_set :: proc { internal_int_set_from_integer, internal_int_copy, int_atoi }\n 1907  \n 1908: internal_copy_digits :: #force_inline proc(dest, src: ^Int, digits: int, offset := int(0)) -> (err: Error) {\n 1909  \t#force_inline internal_error_if_immutable(dest) or_return\n 1910  \n 1911  \t/*\n 1912: \t\tIf dest == src, do nothing\n 1913  \t*/\n 1914: \treturn #force_inline _private_copy_digits(dest, src, digits, offset)\n 1915  }\n 1916  \n ....\n 1918  \tCopy one `Int` to another.\n 1919  */\n 1920: internal_int_copy :: proc(dest, src: ^Int, minimize := false, allocator := context.allocator) -> (err: Error) {\n 1921  \tcontext.allocator = allocator\n 1922  \n 1923  \t/*\n 1924: \t\tIf dest == src, do nothing\n 1925  \t*/\n 1926: \tif (dest == src) { return nil }\n 1927  \n 1928  \tinternal_error_if_immutable(dest) or_return\n 1929  \n 1930  \t/*\n 1931: \t\tGrow `dest` to fit `src`.\n 1932  \t\tIf `dest` is not yet initialized, it will be using `allocator`.\n 1933  \t*/\n 1934: \tneeded := src.used if minimize else max(src.used, _DEFAULT_DIGIT_COUNT)\n 1935  \n 1936  \tinternal_grow(dest, needed, minimize) or_return\n ....\n 1939  \t\tCopy everything over and zero high digits.\n 1940  \t*/\n 1941: \tinternal_copy_digits(dest, src, src.used)\n 1942  \n 1943: \tdest.used  = src.used\n 1944: \tdest.sign  = src.sign\n 1945: \tdest.flags = src.flags &~ {.Immutable}\n 1946  \n 1947  \tinternal_zero_unused(dest)\n ....\n 1966  \n 1967  /*\n 1968: \tSet `dest` to |`src`|.\n 1969  */\n 1970: internal_int_abs :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n 1971  \tcontext.allocator = allocator\n 1972  \n 1973  \t/*\n 1974: \t\tIf `dest == src`, just fix `dest`'s sign.\n 1975  \t*/\n 1976: \tif (dest == src) {\n 1977  \t\tdest.sign = .Zero_or_Positive\n 1978  \t\treturn nil\n ....\n 1980  \n 1981  \t/*\n 1982: \t\tCopy `src` to `dest`\n 1983  \t*/\n 1984: \tinternal_copy(dest, src) or_return\n 1985  \n 1986  \t/*\n ....\n 1997  \n 1998  /*\n 1999: \tSet `dest` to `-src`.\n 2000  */\n 2001: internal_int_neg :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n 2002  \tcontext.allocator = allocator\n 2003  \n 2004  \t/*\n 2005: \t\tIf `dest == src`, just fix `dest`'s sign.\n 2006  \t*/\n 2007  \tsign := Sign.Negative\n 2008: \tif #force_inline internal_is_zero(src) || #force_inline internal_is_negative(src) {\n 2009  \t\tsign = .Zero_or_Positive\n 2010  \t}\n 2011: \tif dest == src {\n 2012  \t\tdest.sign = sign\n 2013  \t\treturn nil\n 2014  \t}\n 2015  \t/*\n 2016: \t\tCopy `src` to `dest`\n 2017  \t*/\n 2018: \tinternal_copy(dest, src) or_return\n 2019  \n 2020  \t/*\n ....\n 2593  \n 2594  /*\n 2595: \tdest = ~src\n 2596  */\n 2597: internal_int_complement :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n 2598  \tcontext.allocator = allocator\n 2599  \n ....\n 2601  \t\tTemporarily fix sign.\n 2602  \t*/\n 2603: \told_sign := src.sign\n 2604  \n 2605: \tneg := #force_inline internal_is_zero(src) || #force_inline internal_is_positive(src)\n 2606  \n 2607: \tsrc.sign = .Negative if neg else .Zero_or_Positive\n 2608  \n 2609: \terr = #force_inline internal_sub(dest, src, 1)\n 2610  \t/*\n 2611  \t\tRestore sign.\n 2612  \t*/\n 2613: \tsrc.sign = old_sign\n 2614  \n 2615  \treturn err\n ....\n 2683  \tShift right by a certain bit count with sign extension.\n 2684  */\n 2685: internal_int_shr_signed :: proc(dest, src: ^Int, bits: int, allocator := context.allocator) -> (err: Error) {\n 2686  \tcontext.allocator = allocator\n 2687  \n 2688: \tif src.sign == .Zero_or_Positive {\n 2689: \t\treturn internal_shr(dest, src, bits)\n 2690  \t}\n 2691: \tinternal_int_add_digit(dest, src, DIGIT(1)) or_return\n 2692  \tinternal_shr(dest, dest, bits) or_return\n 2693: \treturn internal_sub(dest, src, DIGIT(1))\n 2694  }\n 2695  \n ....\n 2699  \tShift left by a certain bit count.\n 2700  */\n 2701: internal_int_shl :: proc(dest, src: ^Int, bits: int, allocator := context.allocator) -> (err: Error) {\n 2702  \tcontext.allocator = allocator\n 2703  \n ....\n 2706  \tif bits < 0 { return .Invalid_Argument }\n 2707  \n 2708: \tinternal_copy(dest, src) or_return\n 2709  \n 2710  \t/*\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\logical.odin:\n   57  \n   58  /*\n   59: \tdest = ~src\n   60  */\n   61: int_bit_complement :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n   62  \t/*\n   63: \t\tCheck that `src` and `dest` are usable.\n   64  \t*/\n   65: \tassert_if_nil(dest, src)\n   66  \tcontext.allocator = allocator\n   67  \n   68: \tinternal_clear_if_uninitialized(dest, src) or_return\n   69: \treturn #force_inline internal_int_complement(dest, src)\n   70  }\n   71  bit_complement :: proc { int_bit_complement, }\n   ..\n   92  \tShift right by a certain bit count with sign extension.\n   93  */\n   94: int_shr_signed :: proc(dest, src: ^Int, bits: int, allocator := context.allocator) -> (err: Error) {\n   95: \tassert_if_nil(dest, src)\n   96  \tcontext.allocator = allocator\n   97  \n   98: \tinternal_clear_if_uninitialized(dest, src) or_return\n   99: \treturn #force_inline internal_int_shr_signed(dest, src, bits)\n  100  }\n  101  \n  ...\n  105  \tShift left by a certain bit count.\n  106  */\n  107: int_shl :: proc(dest, src: ^Int, bits: int, allocator := context.allocator) -> (err: Error) {\n  108: \tassert_if_nil(dest, src)\n  109  \tcontext.allocator = allocator\n  110  \n  111: \tinternal_clear_if_uninitialized(dest, src) or_return\n  112: \treturn #force_inline internal_int_shl(dest, src, bits)\n  113  }\n  114  shl :: proc { int_shl, }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\private.odin:\n  619  /*\n  620  \tLow level squaring, b = a*a, HAC pp.596-597, Algorithm 14.16\n  621: \tAssumes `dest` and `src` to not be `nil`, and `src` to have been initialized.\n  622  */\n  623: _private_int_sqr :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  624  \tcontext.allocator = allocator\n  625: \tpa := src.used\n  626  \n  627  \tt := &Int{}; ix, iy: int\n  ...\n  637  \t\t\tFirst calculate the digit at 2*ix; calculate double precision result.\n  638  \t\t*/\n  639: \t\tr := _WORD(t.digit[ix+ix]) + (_WORD(src.digit[ix]) * _WORD(src.digit[ix]))\n  640  \n  641  \t\t/*\n  ...\n  652  \t\t\t\tFirst calculate the product.\n  653  \t\t\t*/\n  654: \t\t\tr = _WORD(src.digit[ix]) * _WORD(src.digit[iy])\n  655  \n  656  \t\t\t/* Now calculate the double precision result. Nóte we use\n  ...\n  692  \tYou double all those you add in the inner loop. After that loop you do the squares and add them in.\n  693  \n  694: \tAssumes `dest` and `src` not to be `nil` and `src` to have been initialized.\t\n  695  */\n  696: _private_int_sqr_comba :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  697  \tcontext.allocator = allocator\n  698  \n  ...\n  702  \t\tGrow the destination as required.\n  703  \t*/\n  704: \tpa := uint(src.used) + uint(src.used)\n  705  \tinternal_grow(dest, int(pa)) or_return\n  706  \n  ...\n  721  \t\t\tGet offsets into the two bignums.\n  722  \t\t*/\n  723: \t\tty := min(uint(src.used) - 1, ix)\n  724  \t\ttx := ix - ty\n  725  \n  ...\n  728  \t\t\tessentially while (tx++ < a->used && ty-- >= 0) { ... }\n  729  \t\t*/\n  730: \t\tiy := min(uint(src.used) - tx, ty + 1)\n  731  \n  732  \t\t/*\n  ...\n  741  \t\t*/\n  742  \t\t#no_bounds_check for iz := uint(0); iz < iy; iz += 1 {\n  743: \t\t\t_W += _WORD(src.digit[tx + iz]) * _WORD(src.digit[ty - iz])\n  744  \t\t}\n  745  \n  ...\n  753  \t\t*/\n  754  \t\tif ix & 1 == 0 {\n  755: \t\t\t_W += _WORD(src.digit[ix >> 1]) * _WORD(src.digit[ix >> 1])\n  756  \t\t}\n  757  \n  ...\n  771  \t*/\n  772  \told_used := dest.used\n  773: \tdest.used = src.used + src.used\n  774  \n  775  \t#no_bounds_check for ix = 0; ix < pa; ix += 1 {\n  ...\n  786  \n  787  /*\n  788: \tKaratsuba squaring, computes `dest` = `src` * `src` using three half-size squarings.\n  789   \n  790  \tSee comments of `_private_int_mul_karatsuba` for details.\n  791  \tIt is essentially the same algorithm but merely tuned to perform recursive squarings.\n  792  */\n  793: _private_int_sqr_karatsuba :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  794  \tcontext.allocator = allocator\n  795  \n  ...\n  800  \t\tMin # of digits, divided by two.\n  801  \t*/\n  802: \tB := src.used >> 1\n  803  \n  804  \t/*\n  ...\n  806  \t*/\n  807  \tinternal_grow(x0,   B) or_return\n  808: \tinternal_grow(x1,   src.used - B) or_return\n  809: \tinternal_grow(t1,   src.used * 2) or_return\n  810: \tinternal_grow(t2,   src.used * 2) or_return\n  811  \tinternal_grow(x0x0, B * 2       ) or_return\n  812: \tinternal_grow(x1x1, (src.used - B) * 2) or_return\n  813  \n  814  \t/*\n  ...\n  816  \t*/\n  817  \tx0.used = B\n  818: \tx1.used = src.used - B\n  819  \n  820: \t#force_inline internal_copy_digits(x0, src, x0.used)\n  821: \t#force_inline mem.copy_non_overlapping(&x1.digit[0], &src.digit[B], size_of(DIGIT) * x1.used)\n  822  \t#force_inline internal_clamp(x0)\n  823  \n  ...\n  857  \t  18th IEEE Symposium on Computer Arithmetic (ARITH'07). IEEE, 2007.\n  858  */\n  859: _private_int_sqr_toom :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  860  \tcontext.allocator = allocator\n  861  \n  ...\n  871  \t\tB\n  872  \t*/\n  873: \tB := src.used / 3\n  874  \n  875  \t/*\n  ...\n  878  \tinternal_grow(a0, B) or_return\n  879  \tinternal_grow(a1, B) or_return\n  880: \tinternal_grow(a2, src.used - (2 * B)) or_return\n  881  \n  882  \ta0.used = B\n  883  \ta1.used = B\n  884: \ta2.used = src.used - 2 * B\n  885  \n  886: \t#force_inline mem.copy_non_overlapping(&a0.digit[0], &src.digit[    0], size_of(DIGIT) * a0.used)\n  887: \t#force_inline mem.copy_non_overlapping(&a1.digit[0], &src.digit[    B], size_of(DIGIT) * a1.used)\n  888: \t#force_inline mem.copy_non_overlapping(&a2.digit[0], &src.digit[2 * B], size_of(DIGIT) * a2.used)\n  889  \n  890  \tinternal_clamp(a0)\n  ...\n 3131  \n 3132  /*\n 3133: \tCopies DIGITs from `src` to `dest`.\n 3134: \tAssumes `src` and `dest` to not be `nil` and have been initialized.\n 3135  */\n 3136: _private_copy_digits :: proc(dest, src: ^Int, digits: int, offset := int(0)) -> (err: Error) {\n 3137  \tdigits := digits\n 3138  \t/*\n 3139: \t\tIf dest == src, do nothing\n 3140  \t*/\n 3141: \tif dest == src {\n 3142  \t\treturn nil\n 3143  \t}\n 3144  \n 3145: \tdigits = min(digits, len(src.digit), len(dest.digit))\n 3146: \tmem.copy_non_overlapping(&dest.digit[0], &src.digit[offset], size_of(DIGIT) * digits)\n 3147  \treturn nil\n 3148  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\public.odin:\n   94  \n   95  /*\n   96: \tdest = src  / 2\n   97: \tdest = src >> 1\n   98  */\n   99: int_halve :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  100: \tassert_if_nil(dest, src)\n  101  \tcontext.allocator = allocator\n  102  \n  103: \tinternal_clear_if_uninitialized(dest, src) or_return\n  104  \t/*\n  105  \t\tGrow destination as required.\n  106  \t*/\n  107: \tif dest != src { grow(dest, src.used + 1) or_return }\n  108  \n  109: \treturn #force_inline internal_int_shr1(dest, src)\n  110  }\n  111  halve :: proc { int_halve, }\n  ...\n  113  \n  114  /*\n  115: \tdest = src  * 2\n  116: \tdest = src << 1\n  117  */\n  118: int_double :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  119: \tassert_if_nil(dest, src)\n  120  \tcontext.allocator = allocator\n  121  \n  122: \tinternal_clear_if_uninitialized(dest, src) or_return\n  123  \t/*\n  124  \t\tGrow destination as required.\n  125  \t*/\n  126: \tif dest != src { grow(dest, src.used + 1) or_return }\n  127  \n  128: \treturn #force_inline internal_int_shl1(dest, src)\n  129  }\n  130  double :: proc { int_double, }\n  ...\n  134  \tMultiply by a DIGIT.\n  135  */\n  136: int_mul_digit :: proc(dest, src: ^Int, multiplier: DIGIT, allocator := context.allocator) -> (err: Error) {\n  137: \tassert_if_nil(dest, src)\n  138  \tcontext.allocator = allocator\n  139  \n  140: \tinternal_clear_if_uninitialized(src, dest) or_return\n  141  \n  142: \treturn #force_inline internal_int_mul_digit(dest, src, multiplier)\n  143  }\n  144  \n  ...\n  146  \tHigh level multiplication (handles sign).\n  147  */\n  148: int_mul :: proc(dest, src, multiplier: ^Int, allocator := context.allocator) -> (err: Error) {\n  149: \tassert_if_nil(dest, src, multiplier)\n  150  \tcontext.allocator = allocator\n  151  \n  152: \tinternal_clear_if_uninitialized(dest, src, multiplier) or_return\n  153  \n  154: \treturn #force_inline internal_int_mul(dest, src, multiplier)\n  155  }\n  156  \n  ...\n  163  }\n  164  \n  165: int_sqr :: proc(dest, src: ^Int) -> (err: Error) { return mul(dest, src, src) }\n  166: rat_sqr :: proc(dest, src: ^Rat) -> (err: Error) { return mul(dest, src, src) }\n  167  sqr :: proc { int_sqr, rat_sqr }\n  168  \n  ...\n  438  \tThis function is less generic than `root_n`, simpler and faster.\n  439  */\n  440: int_sqrt :: proc(dest, src: ^Int, allocator := context.allocator) -> (err: Error) {\n  441: \tassert_if_nil(dest, src)\n  442  \tcontext.allocator = allocator\n  443  \n  444: \tinternal_clear_if_uninitialized(dest, src) or_return\n  445  \n  446: \treturn #force_inline internal_int_sqrt(dest, src)\n  447  }\n  448  sqrt :: proc { int_sqrt, }\n  ...\n  451  /*\n  452  \tFind the nth root of an Integer.\n  453: \tResult found such that `(dest)**n <= src` and `(dest+1)**n > src`\n  454  \n  455  \tThis algorithm uses Newton's approximation `x[i+1] = x[i] - f(x[i])/f'(x[i])`,\n  456  \twhich will find the root in `log(n)` time where each step involves a fair bit.\n  457  */\n  458: int_root_n :: proc(dest, src: ^Int, n: int, allocator := context.allocator) -> (err: Error) {\n  459  \tcontext.allocator = allocator\n  460  \n  ...\n  462  \t\tFast path for n == 2.\n  463  \t*/\n  464: \tif n == 2 { return sqrt(dest, src) }\n  465  \n  466: \tassert_if_nil(dest, src)\n  467  \t/*\n  468: \t\tInitialize dest + src if needed.\n  469  \t*/\n  470: \tinternal_clear_if_uninitialized(dest, src) or_return\n  471  \n  472: \treturn #force_inline internal_int_root_n(dest, src, n)\n  473  }\n  474  root_n :: proc { int_root_n, }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\math\\big\\rat.odin:\n  124  }\n  125  \n  126: rat_copy :: proc(dst, src: ^Rat, minimize := false, allocator := context.allocator) -> (err: Error) {\n  127: \tif (dst == src) { return nil }\n  128  \t\n  129: \tassert_if_nil(dst, src)\n  130  \tcontext.allocator = allocator\n  131: \tint_copy(&dst.a, &src.a, minimize, allocator) or_return\n  132: \tint_copy(&dst.b, &src.b, minimize, allocator) or_return\n  133  \tinternal_rat_norm(dst) or_return\n  134  \treturn nil\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\mem\\mem.odin:\n  133  \n  134  This procedure copies `len` bytes of data, from the memory range pointed to by\n  135: the `src` pointer into the memory range pointed to by the `dst` pointer, and\n  136  returns the `dst` pointer.\n  137  */\n  138: copy :: proc \"contextless\" (dst, src: rawptr, len: int) -> rawptr {\n  139: \tintrinsics.mem_copy(dst, src, len)\n  140  \treturn dst\n  141  }\n  ...\n  145  \n  146  This procedure copies `len` bytes of data, from the memory range pointed to by\n  147: the `src` pointer into the memory range pointed to by the `dst` pointer, and\n  148  returns the `dst` pointer.\n  149  \n  150  This is a slightly more optimized version of the `copy` procedure that requires\n  151  that memory ranges specified by the parameters to this procedure are not\n  152: overlapping. If the memory ranges specified by `dst` and `src` pointers overlap,\n  153  the behavior of this function may be unpredictable.\n  154  */\n  155: copy_non_overlapping :: proc \"contextless\" (dst, src: rawptr, len: int) -> rawptr {\n  156: \tintrinsics.mem_copy_non_overlapping(dst, src, len)\n  157  \treturn dst\n  158  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\net\\dns.odin:\n  276  \t\t}\n  277  \n  278: \t\trecv_sz, src := recv_udp(conn, dns_response_buf[:]) or_continue\n  279  \t\tif recv_sz == 0 {\n  280  \t\t\tcontinue\n  281  \t\t}\n  282: \t\tif src != name_server {\n  283  \t\t\tcontinue\n  284  \t\t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\ast\\ast.odin:\n   68  \n   69  \tfullpath: string,\n   70: \tsrc:      string,\n   71  \n   72  \ttags: [dynamic]tokenizer.Token,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\ast\\clone.odin:\n   97  \t\treturn nil\n   98  \t}\n   99: \tsrc: rawptr = node\n  100  \tif node.derived != nil {\n  101: \t\tsrc = (^rawptr)(&node.derived)^\n  102  \t}\n  103: \tmem.copy(res, src, size)\n  104  \tres_ptr_any: any\n  105  \tres_ptr_any.data = &res\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\parser\\file_tags.odin:\n   59  \t}\n   60  \n   61: \tnext_char :: proc(src: string, i: ^int) -> (ch: u8) {\n   62: \t\tif i^ < len(src) {\n   63: \t\t\tch = src[i^]\n   64  \t\t}\n   65  \t\ti^ += 1\n   66  \t\treturn\n   67  \t}\n   68: \tskip_whitespace :: proc(src: string, i: ^int) {\n   69  \t\tfor {\n   70: \t\t\tswitch next_char(src, i) {\n   71  \t\t\tcase ' ', '\\t':\n   72  \t\t\t\tcontinue\n   ..\n   77  \t\t}\n   78  \t}\n   79: \tscan_value :: proc(src: string, i: ^int) -> string {\n   80  \t\tstart := i^\n   81  \t\tfor {\n   82: \t\t\tswitch next_char(src, i) {\n   83  \t\t\tcase ' ', '\\t', '\\n', '\\r', 0, ',':\n   84  \t\t\t\ti^ -= 1\n   85: \t\t\t\treturn src[start:i^]\n   86  \t\t\tcase:\n   87  \t\t\t\tcontinue\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\parser\\parse_files.odin:\n   29  \n   30  \tfor match in matches {\n   31: \t\tsrc: []byte\n   32  \t\tfullpath, ok := filepath.abs(match)\n   33  \t\tif !ok {\n   ..\n   35  \t\t}\n   36  \n   37: \t\tsrc, ok = os.read_entire_file(fullpath)\n   38  \t\tif !ok {\n   39  \t\t\tdelete(fullpath)\n   40  \t\t\treturn\n   41  \t\t}\n   42: \t\tif strings.trim_space(string(src)) == \"\" {\n   43  \t\t\tdelete(fullpath)\n   44: \t\t\tdelete(src)\n   45  \t\t\tcontinue\n   46  \t\t}\n   ..\n   48  \t\tfile := ast.new(ast.File, NO_POS, NO_POS)\n   49  \t\tfile.pkg = pkg\n   50: \t\tfile.src = string(src)\n   51  \t\tfile.fullpath = fullpath\n   52  \t\tpkg.files[fullpath] = file\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\parser\\parser.odin:\n  151  \n  152  \tp.file = file\n  153: \ttokenizer.init(&p.tok, file.src, file.fullpath, p.err)\n  154  \tif p.tok.ch <= 0 {\n  155  \t\treturn true\n  ...\n  430  \n  431  end_of_line_pos :: proc(p: ^Parser, tok: tokenizer.Token) -> tokenizer.Pos {\n  432: \toffset := clamp(tok.pos.offset, 0, len(p.tok.src)-1)\n  433: \ts := p.tok.src[offset:]\n  434  \tpos := tok.pos\n  435  \tpos.column -= 1\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\odin\\tokenizer\\tokenizer.odin:\n   15  \t// Immutable data\n   16  \tpath: string,\n   17: \tsrc:  string,\n   18  \terr:  Error_Handler,\n   19  \n   ..\n   32  }\n   33  \n   34: init :: proc(t: ^Tokenizer, src: string, path: string, err: Error_Handler = default_error_handler) {\n   35: \tt.src = src\n   36  \tt.err = err\n   37  \tt.ch = ' '\n   ..\n   39  \tt.read_offset = 0\n   40  \tt.line_offset = 0\n   41: \tt.line_count = len(src) > 0 ? 1 : 0\n   42  \tt.insert_semicolon = false\n   43  \tt.error_count = 0\n   ..\n   78  \n   79  advance_rune :: proc(t: ^Tokenizer) {\n   80: \tif t.read_offset < len(t.src) {\n   81  \t\tt.offset = t.read_offset\n   82  \t\tif t.ch == '\\n' {\n   ..\n   84  \t\t\tt.line_count += 1\n   85  \t\t}\n   86: \t\tr, w := rune(t.src[t.read_offset]), 1\n   87  \t\tswitch {\n   88  \t\tcase r == 0:\n   89  \t\t\terror(t, t.offset, \"illegal character NUL\")\n   90  \t\tcase r >= utf8.RUNE_SELF:\n   91: \t\t\tr, w = utf8.decode_rune_in_string(t.src[t.read_offset:])\n   92  \t\t\tif r == utf8.RUNE_ERROR && w == 1 {\n   93  \t\t\t\terror(t, t.offset, \"illegal UTF-8 encoding\")\n   ..\n   99  \t\tt.ch = r\n  100  \t} else {\n  101: \t\tt.offset = len(t.src)\n  102  \t\tif t.ch == '\\n' {\n  103  \t\t\tt.line_offset = t.offset\n  ...\n  109  \n  110  peek_byte :: proc(t: ^Tokenizer, offset := 0) -> byte {\n  111: \tif t.read_offset+offset < len(t.src) {\n  112: \t\treturn t.src[t.read_offset+offset]\n  113  \t}\n  114  \treturn 0\n  ...\n  196  \t}\n  197  \n  198: \tlit := t.src[offset : t.offset]\n  199  \n  200  \t// NOTE(bill): Strip CR for line comments\n  ...\n  221  \t}\n  222  \n  223: \treturn string(t.src[offset : t.offset])\n  224  }\n  225  \n  ...\n  231  \t}\n  232  \n  233: \treturn string(t.src[offset : t.offset])\n  234  }\n  235  \n  ...\n  252  \t}\n  253  \n  254: \treturn string(t.src[offset : t.offset])\n  255  }\n  256  \n  ...\n  270  \t}\n  271  \n  272: \treturn string(t.src[offset : t.offset])\n  273  }\n  274  \n  ...\n  368  \t}\n  369  \n  370: \treturn string(t.src[offset : t.offset])\n  371  }\n  372  \n  ...\n  447  \t\t\t\t\terror(t, t.offset, \"illegal hexadecimal floating-point number\")\n  448  \t\t\t\t} else {\n  449: \t\t\t\t\tsub := t.src[prev+1 : t.offset]\n  450  \t\t\t\t\tdigit_count := 0\n  451  \t\t\t\t\tfor d in sub {\n  ...\n  468  \t\t\t\t\tseen_point = true\n  469  \t\t\t\t\tif scan_fraction(t, &kind) {\n  470: \t\t\t\t\t\treturn kind, string(t.src[offset : t.offset])\n  471  \t\t\t\t\t}\n  472  \t\t\t\t}\n  473  \t\t\t\tscan_exponent(t, &kind)\n  474: \t\t\t\treturn kind, string(t.src[offset : t.offset])\n  475  \t\t\t}\n  476  \t\t}\n  ...\n  480  \n  481  \tif scan_fraction(t, &kind) {\n  482: \t\treturn kind, string(t.src[offset : t.offset])\n  483  \t}\n  484  \n  485  \tscan_exponent(t, &kind)\n  486  \n  487: \treturn kind, string(t.src[offset : t.offset])\n  488  }\n  489  \n  ...\n  756  \n  757  \tif lit == \"\" {\n  758: \t\tlit = string(t.src[offset : t.offset])\n  759  \t}\n  760  \treturn Token{kind, lit, pos}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\errors.odin:\n  175  \t\t\t.EPERM           = \"Operation not permitted\",\n  176  \t\t\t.ENOENT          = \"No such file or directory\",\n  177: \t\t\t.ESRCH           = \"No such process\",\n  178  \t\t\t.EINTR           = \"Interrupted system call\",\n  179  \t\t\t.EIO             = \"Input/output error\",\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_darwin.odin:\n   18  \tEPERM           = 1,      /* Operation not permitted */\n   19  \tENOENT          = 2,      /* No such file or directory */\n   20: \tESRCH           = 3,      /* No such process */\n   21  \tEINTR           = 4,      /* Interrupted system call */\n   22  \tEIO             = 5,      /* Input/output error */\n   ..\n  155  EPERM           :: _Platform_Error.EPERM\n  156  ENOENT          :: _Platform_Error.ENOENT\n  157: ESRCH           :: _Platform_Error.ESRCH\n  158  EINTR           :: _Platform_Error.EINTR\n  159  EIO             :: _Platform_Error.EIO\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_freebsd.odin:\n   18  \tEPERM           = 1,\n   19  \tENOENT          = 2,\n   20: \tESRCH           = 3,\n   21  \tEINTR           = 4,\n   22  \tEIO             = 5,\n   ..\n  113  EPERM           :: Platform_Error.EPERM\n  114  ENOENT          :: Platform_Error.ENOENT\n  115: ESRCH           :: Platform_Error.ESRCH\n  116  EINTR           :: Platform_Error.EINTR\n  117  EIO             :: Platform_Error.EIO\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_linux.odin:\n   32  EPERM           :: Platform_Error.EPERM\n   33  ENOENT          :: Platform_Error.ENOENT\n   34: ESRCH           :: Platform_Error.ESRCH\n   35  EINTR           :: Platform_Error.EINTR\n   36  EIO             :: Platform_Error.EIO\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_netbsd.odin:\n   18  \tENOENT          = 2,          /* No such file or directory */\n   19  \tEINTR           = 4,          /* Interrupted system call */\n   20: \tESRCH           = 3,          /* No such process */\n   21  \tEIO             = 5,          /* Input/output error */\n   22  \tENXIO           = 6,          /* Device not configured */\n   ..\n  157  ENOENT          :: Platform_Error.ENOENT          /* No such file or directory */\n  158  EINTR           :: Platform_Error.EINTR           /* Interrupted system call */\n  159: ESRCH           :: Platform_Error.ESRCH           /* No such process */\n  160  EIO             :: Platform_Error.EIO             /* Input/output error */\n  161  ENXIO           :: Platform_Error.ENXIO           /* Device not configured */\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_openbsd.odin:\n   17  \tEPERM           = 1,\n   18  \tENOENT          = 2,\n   19: \tESRCH           = 3,\n   20  \tEINTR           = 4,\n   21  \tEIO             = 5,\n   ..\n  115  EPERM           :: Platform_Error.EPERM\n  116  ENOENT          :: Platform_Error.ENOENT\n  117: ESRCH           :: Platform_Error.ESRCH\n  118  EINTR           :: Platform_Error.EINTR\n  119  EIO             :: Platform_Error.EIO\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os_windows.odin:\n  395  \n  396  \t\tbuf8_len := utf16.decode_to_utf8(buf8[:], buf16[:single_read_length])\n  397: \t\tsrc := buf8[:buf8_len]\n  398  \n  399  \t\tctrl_z := false\n  400: \t\tfor i := 0; i < len(src) && n < len(b); i += 1 {\n  401: \t\t\tx := src[i]\n  402  \t\t\tif x == 0x1a { // ctrl-z\n  403  \t\t\t\tctrl_z = true\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os2\\errors_linux.odin:\n   11  \t.EPERM           = \"Operation not permitted\",\n   12  \t.ENOENT          = \"No such file or directory\",\n   13: \t.ESRCH           = \"No such process\",\n   14  \t.EINTR           = \"Interrupted system call\",\n   15  \t.EIO             = \"Input/output error\",\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os2\\file.odin:\n  313  \n  314  \n  315: copy_file :: proc(dst_path, src_path: string) -> Error {\n  316: \tsrc := open(src_path) or_return\n  317: \tdefer close(src)\n  318  \n  319: \tinfo := fstat(src, file_allocator()) or_return\n  320  \tdefer file_info_delete(info, file_allocator())\n  321  \tif info.type == .Directory {\n  ...\n  326  \tdefer close(dst)\n  327  \n  328: \t_, err := io.copy(to_writer(dst), to_reader(src))\n  329  \treturn err\n  330  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os2\\file_wasi.odin:\n  301  \n  302  _rename :: proc(old_path, new_path: string) -> Error {\n  303: \tsrc_dir_fd, src_relative, src_ok := match_preopen(old_path)\n  304: \tif !src_ok {\n  305  \t\treturn .Invalid_Path\n  306  \t}\n  ...\n  311  \t}\n  312  \n  313: \treturn _get_platform_error(wasi.path_rename(src_dir_fd, src_relative, new_dir_fd, new_relative))\n  314  }\n  315  \n  316  _link :: proc(old_name, new_name: string) -> Error {\n  317: \tsrc_dir_fd, src_relative, src_ok := match_preopen(old_name)\n  318: \tif !src_ok {\n  319  \t\treturn .Invalid_Path\n  320  \t}\n  ...\n  325  \t}\n  326  \n  327: \treturn _get_platform_error(wasi.path_link(src_dir_fd, {.SYMLINK_FOLLOW}, src_relative, new_dir_fd, new_relative))\n  328  }\n  329  \n  330  _symlink :: proc(old_name, new_name: string) -> Error {\n  331: \tsrc_dir_fd, src_relative, src_ok := match_preopen(old_name)\n  332: \tif !src_ok {\n  333  \t\treturn .Invalid_Path\n  334  \t}\n  ...\n  339  \t}\n  340  \n  341: \tif src_dir_fd != new_dir_fd {\n  342  \t\treturn .Invalid_Path\n  343  \t}\n  344  \n  345: \treturn _get_platform_error(wasi.path_symlink(src_relative, src_dir_fd, new_relative))\n  346  }\n  347  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os2\\file_windows.odin:\n  340  \n  341  \t\t\tbuf8_len := utf16.decode_to_utf8(buf8[:], buf16[:single_read_length])\n  342: \t\t\tsrc := buf8[:buf8_len]\n  343  \n  344  \t\t\tctrl_z := false\n  345: \t\t\tfor i := 0; i < len(src) && n+i < len(b); i += 1 {\n  346: \t\t\t\tx := src[i]\n  347  \t\t\t\tif x == 0x1a { // ctrl-z\n  348  \t\t\t\t\tctrl_z = true\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\os\\os2\\process_posix_darwin.odin:\n  279  \thandle := uintptr(rusage.ri_proc_start_abstime)\n  280  \tif p.handle != handle {\n  281: \t\treturn posix.Errno.ESRCH\n  282  \t}\n  283  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\simd\\simd.odin:\n 1464  Example:\n 1465  \n 1466: \t// The following code loads two values from the `src` vector, the first and the\n 1467  \t// third value (selected by the mask). The masked-off values are given the value\n 1468  \t// of 127 (`0x7f`).\n 1469  \n 1470: \tsrc := [4] f32 {1, 2, 3, 4};\n 1471  \tmask := #simd [4]bool { true, false, true, false }\n 1472  \tvals := #simd [4]f32 { 0x7f, 0x7f, 0x7f, 0x7f }\n 1473: \tres := simd.masked_load(&src, vals, mask)\n 1474  \tfmt.println(res)\n 1475  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\strconv\\strconv.odin:\n 1777  \timport \"core:strconv\"\n 1778  \tunquote_char_example :: proc() {\n 1779: \t\tsrc:=\"\\'The\\' raven\"\n 1780: \t\tr, multiple_bytes, tail_string, success  := strconv.unquote_char(src,'\\'')\n 1781: \t\tfmt.println(\"Source:\", src)\n 1782  \t\tfmt.printf(\"r: <%v>, multiple_bytes:%v, tail_string:<%s>, success:%v\\n\",r, multiple_bytes, tail_string, success)\n 1783  \t}\n ....\n 1902  \timport \"core:strconv\"\n 1903  \tunquote_string_example :: proc() {\n 1904: \t\tsrc:=\"\\\"The raven Huginn is black.\\\"\"\n 1905: \t\ts, allocated, ok := strconv.unquote_string(src)\n 1906: \t\tfmt.println(src)\n 1907  \t\tfmt.printf(\"Unquoted: <%s>, alloc:%v, ok:%v\\n\\n\", s, allocated, ok)\n 1908  \n 1909: \t\tsrc=\"\\'The raven Huginn\\' is black.\"\n 1910: \t\ts, allocated, ok = strconv.unquote_string(src)\n 1911: \t\tfmt.println(src)\n 1912  \t\tfmt.printf(\"Unquoted: <%s>, alloc:%v, ok:%v\\n\\n\", s, allocated, ok)\n 1913  \n 1914: \t\tsrc=\"The raven \\'Huginn\\' is black.\"\n 1915: \t\ts, allocated, ok = strconv.unquote_string(src) // Will produce undesireable results\n 1916: \t\tfmt.println(src)\n 1917  \t\tfmt.printf(\"Unquoted: <%s>, alloc:%v, ok:%v\\n\", s, allocated, ok) \n 1918  \t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\darwin\\xnu_system_call_numbers.odin:\n  455  \tguarded_kqueue_np = 443,\n  456  \tchange_fdguard_np = 444,\n  457: \tusrctl = 445,\n  458  \tproc_rlimit_control = 446,\n  459  \tconnectx = 447,\n  ...\n  493  \tsendmsg_x = 481,\n  494  \tthread_selfusage = 482,\n  495: \tcsrctl = 483,\n  496  \tguarded_open_dprotected_np = 484,\n  497  \tguarded_write_np = 485,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\darwin\\Foundation\\NSBlock.odin:\n   52  \treserved:       uint,\n   53  \tsize:           uint,\n   54: \tcopy_helper:    proc \"c\" (dst, src: rawptr),\n   55: \tdispose_helper: proc \"c\" (src: rawptr),\n   56  \tsignature:      cstring,\n   57  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\es\\api.odin:\n 1253  \tICON_TEXT_X_COPYING,\n 1254  \tICON_TEXT_X_COPYING_SYMBOLIC,\n 1255: \tICON_TEXT_X_CSRC,\n 1256  \tICON_TEXT_X_GENERIC_SYMBOLIC,\n 1257  \tICON_TEXT_X_GENERIC_TEMPLATE,\n ....\n 2792  CRTmemchr :: #force_inline proc \"c\" (_s_ :   rawptr, _c_ :   i32, n_ :   int   ) ->   rawptr{ addr := 0x1000 + 192 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  rawptr,   i32,   int   ) ->   rawptr) (fp))(_s_, _c_, n_); }\n 2793  CRTmemcmp :: #force_inline proc \"c\" (s1_ :   rawptr, s2_ :   rawptr, n_ :   int   ) ->   i32{ addr := 0x1000 + 193 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  rawptr,   rawptr,   int   ) ->   i32) (fp))(s1_, s2_, n_); }\n 2794: CRTmemcpy :: #force_inline proc \"c\" (dest_ :   rawptr, src_ :   rawptr, n_ :   int   ) ->   rawptr{ addr := 0x1000 + 194 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  rawptr,   rawptr,   int   ) ->   rawptr) (fp))(dest_, src_, n_); }\n 2795: CRTmemmove :: #force_inline proc \"c\" (dest_ :   rawptr, src_ :   rawptr, n_ :   int   ) ->   rawptr{ addr := 0x1000 + 195 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  rawptr,   rawptr,   int   ) ->   rawptr) (fp))(dest_, src_, n_); }\n 2796  CRTmemset :: #force_inline proc \"c\" (s_ :   rawptr, c_ :   i32, n_ :   int   ) ->   rawptr{ addr := 0x1000 + 196 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  rawptr,   i32,   int   ) ->   rawptr) (fp))(s_, c_, n_); }\n 2797  CRTpowf :: #force_inline proc \"c\" (x_ :   f32  , y_ :   f32  ) ->   f32  { addr := 0x1000 + 328 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  f32  ,   f32  ) ->   f32  ) (fp))(x_, y_); }\n ....\n 2803  CRTsqrt :: #force_inline proc \"c\" (x_ :   f64   ) ->   f64   { addr := 0x1000 + 202 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  f64   ) ->   f64   ) (fp))(x_); }\n 2804  CRTsqrtf :: #force_inline proc \"c\" (x_ :   f32  ) ->   f32  { addr := 0x1000 + 203 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  f32  ) ->   f32  ) (fp))(x_); }\n 2805: CRTstrcat :: #force_inline proc \"c\" (dest_ :   ^i8  , src_ :   ^i8  ) ->   ^i8  { addr := 0x1000 + 205 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ) ->   ^i8  ) (fp))(dest_, src_); }\n 2806  CRTstrchr :: #force_inline proc \"c\" (s_ :   ^i8  , c_ :   i32) ->   ^i8  { addr := 0x1000 + 206 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   i32) ->   ^i8  ) (fp))(s_, c_); }\n 2807  CRTstrcmp :: #force_inline proc \"c\" (s1_ :   ^i8  , s2_ :   ^i8  ) ->   i32{ addr := 0x1000 + 207 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ) ->   i32) (fp))(s1_, s2_); }\n 2808: CRTstrcpy :: #force_inline proc \"c\" (dest_ :   ^i8  , src_ :   ^i8  ) ->   ^i8  { addr := 0x1000 + 208 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ) ->   ^i8  ) (fp))(dest_, src_); }\n 2809  CRTstrdup :: #force_inline proc \"c\" (string_ :   ^i8  ) ->   ^i8  { addr := 0x1000 + 70 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ) ->   ^i8  ) (fp))(string_); }\n 2810  CRTstrerror :: #force_inline proc \"c\" (errnum_ :   i32) ->   ^i8  { addr := 0x1000 + 209 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  i32) ->   ^i8  ) (fp))(errnum_); }\n 2811  CRTstrlen :: #force_inline proc \"c\" (s_ :   ^i8  ) ->   int   { addr := 0x1000 + 210 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ) ->   int   ) (fp))(s_); }\n 2812  CRTstrncmp :: #force_inline proc \"c\" (s1_ :   ^i8  , s2_ :   ^i8  , n_ :   int   ) ->   i32{ addr := 0x1000 + 211 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ,   int   ) ->   i32) (fp))(s1_, s2_, n_); }\n 2813: CRTstrncpy :: #force_inline proc \"c\" (dest_ :   ^i8  , src_ :   ^i8  , n_ :   int   ) ->   ^i8  { addr := 0x1000 + 212 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ,   int   ) ->   ^i8  ) (fp))(dest_, src_, n_); }\n 2814  CRTstrnlen :: #force_inline proc \"c\" (s_ :   ^i8  , maxlen_ :   int   ) ->   int   { addr := 0x1000 + 213 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   int   ) ->   int   ) (fp))(s_, maxlen_); }\n 2815  CRTstrstr :: #force_inline proc \"c\" (haystack_ :   ^i8  , needle_ :   ^i8  ) ->   ^i8  { addr := 0x1000 + 214 * size_of(int); fp := (rawptr(((^uintptr)(uintptr(addr)))^)); return ((proc \"c\" (  ^i8  ,   ^i8  ) ->   ^i8  ) (fp))(haystack_, needle_); }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\freebsd\\types.odin:\n   72  \tEPERM           = 1,\n   73  \tENOENT          = 2,\n   74: \tESRCH           = 3,\n   75  \tEINTR           = 4,\n   76  \tEIO             = 5,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\haiku\\errno.odin:\n  150  \tENXIO                        = posix.ENXIO,\n  151  \tESPIPE                       = posix.ESPIPE,\n  152: \tESRCH                        = posix.ESRCH,\n  153  \tEDOM                         = posix.EDOM,\n  154  \tERANGE                       = posix.ERANGE,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\linux\\bits.odin:\n   10  \tEPERM           = 1,\n   11  \tENOENT          = 2,\n   12: \tESRCH           = 3,\n   13  \tEINTR           = 4,\n   14  \tEIO             = 5,\n   ..\n  844  \tSTACK_USER      = 13,\n  845  \tWEIGHT          = 14,\n  846: \tDATA_SRC        = 15,\n  847  \tIDENTIFIER      = 16,\n  848  \tTRANSACTION     = 17,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\llvm\\standard_c_library.odin:\n    7  \twhen size_of(int) == 4 {\n    8  \t\t@(link_name=\"llvm.memcpy.p0i8.p0i8.i32\")\n    9: \t\tmemcpy :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   10  \n   11  \t\t@(link_name=\"llvm.memcpy.inline.p0i8.p0i8.i32\")\n   12: \t\tmemcpy_inline :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   13  \n   14  \t\t@(link_name=\"llvm.memmove.p0i8.p0i8.i32\")\n   15: \t\tmemmove :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   16  \n   17  \t\t@(link_name=\"llvm.memset.p0i8.i32\")\n   ..\n   19  \t} else {\n   20  \t\t@(link_name=\"llvm.memcpy.p0i8.p0i8.i64\")\n   21: \t\tmemcpy :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   22  \n   23  \t\t@(link_name=\"llvm.memcpy.inline.p0i8.p0i8.i64\")\n   24: \t\tmemcpy_inline :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   25  \n   26  \t\t@(link_name=\"llvm.memmove.p0i8.p0i8.i64\")\n   27: \t\tmemmove :: proc(dst, src: rawptr, len: int, is_volatile: bool = false) ---\n   28  \n   29  \t\t@(link_name=\"llvm.memset.p0i8.i64\")\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\orca\\orca.odin:\n  232  \tThis function should not be called directly by user code, which should use the `OC_ASSERT` macro instead. The macro checks the assert condition and calls the function if it is false. It also takes care of filling in the source location parameters of the function.\n  233  \t*/\n  234: \tassert_fail :: proc(file: cstring, function: cstring, line: i32, src: cstring, fmt: cstring, #c_vararg args: ..any) -> ! ---\n  235  \t// Set the logging verbosity.\n  236  \tlog_set_level :: proc(level: log_level) ---\n  ...\n 1680  \timage_draw :: proc(image: image, rect: rect) ---\n 1681  \t// Draw a sub-region of an image.\n 1682: \timage_draw_region :: proc(image: image, srcRegion: rect, dstRegion: rect) ---\n 1683  }\n 1684  \n ....\n 2035  \tui_var_default_color_str8 :: proc(name: str8, _color: color) ---\n 2036  \tui_var_default_font_str8 :: proc(name: str8, font: font) ---\n 2037: \tui_var_default_str8 :: proc(name: str8, src: str8) ---\n 2038  \tui_var_default_i32 :: proc(name: cstring, i: i32) ---\n 2039  \tui_var_default_f32 :: proc(name: cstring, f: f32) ---\n ....\n 2041  \tui_var_default_color :: proc(name: cstring, _color: color) ---\n 2042  \tui_var_default_font :: proc(name: cstring, font: font) ---\n 2043: \tui_var_default :: proc(name: cstring, src: cstring) ---\n 2044  \tui_var_set_i32_str8 :: proc(name: str8, i: i32) ---\n 2045  \tui_var_set_f32_str8 :: proc(name: str8, f: f32) ---\n ....\n 2047  \tui_var_set_color_str8 :: proc(name: str8, _color: color) ---\n 2048  \tui_var_set_font_str8 :: proc(name: str8, font: font) ---\n 2049: \tui_var_set_str8 :: proc(name: str8, src: str8) ---\n 2050  \tui_var_set_i32 :: proc(name: cstring, i: i32) ---\n 2051  \tui_var_set_f32 :: proc(name: cstring, f: f32) ---\n ....\n 2053  \tui_var_set_color :: proc(name: cstring, _color: color) ---\n 2054  \tui_var_set_font :: proc(name: cstring, font: font) ---\n 2055: \tui_var_set :: proc(name: cstring, src: cstring) ---\n 2056  \tui_var_get_i32_str8 :: proc(name: str8) -> i32 ---\n 2057  \tui_var_get_f32_str8 :: proc(name: str8) -> f32 ---\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\posix\\arpa_inet.odin:\n   39  \tinet_ntop :: proc(\n   40  \t\taf:   AF,        // INET or INET6\n   41: \t\tsrc:  rawptr,    // either ^in_addr or ^in_addr6 \n   42  \t\tdst:  [^]byte,   // use `INET_ADDRSTRLEN` or `INET6_ADDRSTRLEN` for minimum lengths\n   43  \t\tsize: socklen_t,\n   ..\n   49  \tinet_pton :: proc(\n   50  \t\taf:   AF,        // INET or INET6\n   51: \t\tsrc:  cstring,\n   52  \t\tdst:  rawptr,    // either ^in_addr or ^in_addr6\n   53  \t\tsize: socklen_t, // size_of(dst^)\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\posix\\errno.odin:\n  101  \tEROFS           = EROFS,\n  102  \tESPIPE          = ESPIPE,\n  103: \tESRCH           = ESRCH,\n  104  \tESTALE          = ESTALE,\n  105  \tETIME           = ETIME,\n  ...\n  113  \tEPERM           :: 1\n  114  \tENOENT          :: 2\n  115: \tESRCH           :: 3\n  116  \tEINTR           :: 4\n  117  \tEIO             :: 5\n  ...\n  192  \tEPERM           :: 1\n  193  \tENOENT          :: 2\n  194: \tESRCH           :: 3\n  195  \tEINTR           :: 4\n  196  \tEIO             :: 5\n  ...\n  273  \tEPERM           :: 1\n  274  \tENOENT          :: 2\n  275: \tESRCH           :: 3\n  276  \tEINTR           :: 4\n  277  \tEIO             :: 5\n  ...\n  372  \tEPERM           :: 1\n  373  \tENOENT          :: 2\n  374: \tESRCH           :: 3\n  375  \tEINTR           :: 4\n  376  \tEIO             :: 5\n  ...\n  530  \tEROFS           :: 30\n  531  \tESPIPE          :: 29\n  532: \tESRCH           :: 3\n  533  \tESTALE          :: -1 // NOTE: not defined\n  534  \tETIME           :: 137\n  ...\n  583  \tENXIO           :: _POSIX_ERROR_FACTOR * (_POSIX_ERROR_BASE   + 11)\n  584  \tESPIPE          :: _POSIX_ERROR_FACTOR * (_POSIX_ERROR_BASE   + 12)\n  585: \tESRCH           :: _POSIX_ERROR_FACTOR * (_POSIX_ERROR_BASE   + 13)\n  586  \tEPROTOTYPE      :: _POSIX_ERROR_FACTOR * (_POSIX_ERROR_BASE   + 18)\n  587  \tEPROTONOSUPPORT :: _POSIX_ERROR_FACTOR * (_POSIX_ERROR_BASE   + 19)\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\posix\\unistd_libc.odin:\n   99  \n  100  \t/*\n  101: \tCopy nbyte bytes, from src, to dest, exchanging adjecent bytes.\n  102  \n  103  \t[[ More; https://pubs.opengroup.org/onlinepubs/9699919799/functions/swab.html ]]\n  104  \t*/\n  105  \t@(link_name=LSWAB)\n  106: \tswab :: proc(src: [^]byte, dest: [^]byte, nbytes: c.ssize_t) ---\n  107  \n  108  \t/*\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\valgrind\\memcheck.odin:\n  137  //     1 - success\n  138  //     2 - [previously indicated unaligned arrays;  these are now allowed]\n  139: //     3 - if any parts of zzsrc/zzvbits are not addressable.\n  140  // The metadata is not copied in cases 0, 2 or 3 so it should be\n  141  // impossible to segfault your system by using this call.\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\valgrind\\valgrind.odin:\n   32  \tStack_Change                   = 5379,\n   33  \tLoad_Pdb_Debug_Info            = 5633,\n   34: \tMap_Ip_To_Src_Loc              = 5889,\n   35  \tChange_Err_Disablement         = 6145,\n   36  \tVex_Init_For_Iri               = 6401,\n   ..\n  178  // The result will be dumped in there and is guaranteed to be zero terminated.\n  179  // If no info is found, the first byte is set to zero.\n  180: map_ip_to_src_loc :: proc \"c\" (addr: rawptr, buf64: ^[64]byte) -> uintptr {\n  181: \treturn client_request_expr(0, .Map_Ip_To_Src_Loc, uintptr(addr), uintptr(buf64), 0, 0, 0)\n  182  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\wasm\\README.md:\n    9  ```html\n   10  <!-- Copy `core:sys/wasm/js/odin.js` into your web server -->\n   11: <script type=\"text/javascript\" src=\"odin.js\"></script>\n   12  <script type=\"text/javascript\">\n   13  \todin.runWasm(pathToWasm, consolePreElement);\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\wasm\\js\\odin.js:\n  172  \t// Returned length might not be the same as `value.length` if non-ascii strings are given.\n  173  \tstoreString(addr, value) {\n  174: \t\tconst src = new TextEncoder().encode(value);\n  175: \t\tconst dst = new Uint8Array(this.memory.buffer, addr, src.length);\n  176: \t\tdst.set(src);\n  177: \t\treturn src.length;\n  178  \t}\n  179  };\n  ...\n  406  \t\t\t\tthis.ctx.blendFunc(sfactor, dfactor);\n  407  \t\t\t},\n  408: \t\t\tBlendFuncSeparate: (srcRGB, dstRGB, srcAlpha, dstAlpha) => {\n  409: \t\t\t\tthis.ctx.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n  410  \t\t\t},\n  411  \n  ...\n  854  \t\t\t\tthis.ctx.copyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size);\n  855  \t\t\t},\n  856: \t\t\tGetBufferSubData: (target, srcByteOffset, dst_buffer_ptr, dst_buffer_len, dstOffset, length) => {\n  857  \t\t\t\tthis.assertWebGL2();\n  858: \t\t\t\tthis.ctx.getBufferSubData(target, srcByteOffset, this.mem.loadBytes(dst_buffer_ptr, dst_buffer_len), dstOffset, length);\n  859  \t\t\t},\n  860  \n  861  \t\t\t/* Framebuffer objects */\n  862: \t\t\tBlitFramebuffer: (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) => {\n  863  \t\t\t\tthis.assertWebGL2();\n  864: \t\t\t\tthis.ctx.blitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);\n  865  \t\t\t},\n  866  \t\t\tFramebufferTextureLayer: (target, attachment, texture, level, layer) => {\n  ...\n  878  \t\t\t\tthis.ctx.invalidateSubFramebuffer(target, attachments, x, y, width, height);\n  879  \t\t\t},\n  880: \t\t\tReadBuffer: (src) => {\n  881  \t\t\t\tthis.assertWebGL2();\n  882: \t\t\t\tthis.ctx.readBuffer(src);\n  883  \t\t\t},\n  884  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\wasm\\wasi\\wasi_api.odin:\n  161  \tSPIPE = 70,\n  162  \t// No such process.\n  163: \tSRCH = 71,\n  164  \t// Reserved.\n  165  \tSTALE = 72,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\comctl32.odin:\n  204  \tImageList_GetIcon :: proc(himl: HIMAGELIST, i: i32, flags: UINT) -> HICON ---\n  205  \tImageList_LoadImageW :: proc(hi: HINSTANCE, lpbmp: LPCWSTR, cx, cgrow: i32, crMask: COLORREF, uType, uFlags: UINT) -> HIMAGELIST ---\n  206: \tImageList_Copy :: proc(himlDst: HIMAGELIST, iDst: i32, himlSrc: HIMAGELIST, iSrc: i32, uFlags: UINT) -> BOOL ---\n  207  \tImageList_BeginDrag :: proc(himlTrack: HIMAGELIST, iTrack, dxHotspot, dyHotspot: i32) -> BOOL ---\n  208  \tImageList_EndDrag :: proc() ---\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\dbghelp.odin:\n  104  }\n  105  \n  106: // NOTE(jakubtomsu): From verrsrc.h\n  107  VS_FIXEDFILEINFO :: struct {\n  108  \tdwSignature:        DWORD, /* e.g. 0xfeef04bd */\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\gdi32.odin:\n   24  \tCreateDIBitmap :: proc(hdc: HDC, pbmih: ^BITMAPINFOHEADER, flInit: DWORD, pjBits: VOID, pbmi: ^BITMAPINFO, iUsage: UINT) -> HBITMAP ---\n   25  \tCreateDIBSection :: proc(hdc: HDC, pbmi: ^BITMAPINFO, usage: UINT, ppvBits: VOID, hSection: HANDLE, offset: DWORD) -> HBITMAP ---\n   26: \tStretchDIBits :: proc(hdc: HDC, xDest, yDest, DestWidth, DestHeight, xSrc, ySrc, SrcWidth, SrcHeight: INT, lpBits: VOID, lpbmi: ^BITMAPINFO, iUsage: UINT, rop: DWORD) -> INT ---\n   27: \tStretchBlt :: proc(hdcDest: HDC, xDest, yDest, wDest, hDest: INT, hdcSrc: HDC, xSrc, ySrc, wSrc, hSrc: INT, rop: DWORD) -> BOOL ---\n   28  \n   29  \tSetPixelFormat :: proc(hdc: HDC, format: INT, ppfd: ^PIXELFORMATDESCRIPTOR) -> BOOL ---\n   ..\n   55  \tGetObjectW :: proc(h: HANDLE, c: INT, pv: LPVOID) -> int ---\n   56  \tCreateCompatibleBitmap :: proc(hdc: HDC, cx, cy: INT) -> HBITMAP ---\n   57: \tBitBlt :: proc(hdc: HDC, x, y, cx, cy: INT, hdcSrc: HDC, x1, y1: INT, rop: DWORD) -> BOOL ---\n   58  \tGetDIBits :: proc(hdc: HDC, hbm: HBITMAP, start, cLines: UINT, lpvBits: LPVOID, lpbmi: ^BITMAPINFO, usage: UINT) -> INT ---\n   59  \tSetDIBits :: proc(hdc: HDC, hbm: HBITMAP, start: UINT, cLines: UINT, lpBits: VOID, lpbmi: ^BITMAPINFO, ColorUse: UINT) -> INT ---\n   ..\n   74  \tSetPixel :: proc(hdc: HDC, x: INT, y: INT, color: COLORREF) -> COLORREF ---\n   75  \n   76: \tGdiTransparentBlt :: proc(hdcDest: HDC, xoriginDest, yoriginDest, wDest, hDest: INT, hdcSrc: HDC, xoriginSrc, yoriginSrc, wSrc, hSrc: INT, crTransparent: UINT) -> BOOL ---\n   77  \tGdiGradientFill :: proc(hdc: HDC, pVertex: PTRIVERTEX, nVertex: ULONG, pMesh: PVOID, nCount: ULONG, ulMode: ULONG) -> BOOL ---\n   78: \tGdiAlphaBlend :: proc(hdcDest: HDC, xoriginDest, yoriginDest, wDest, hDest: INT, hdcSrc: HDC, xoriginSrc, yoriginSrc, wSrc, hSrc: INT, ftn: BLENDFUNCTION) -> BOOL ---\n   79  }\n   80  \n   ..\n  155  PICONINFOEXW :: ^ICONINFOEXW\n  156  \n  157: AC_SRC_OVER :: 0x00\n  158: AC_SRC_ALPHA :: 0x01\n  159  \n  160  TransparentBlt :: GdiTransparentBlt\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\kernel32.odin:\n  230  \tFormatMessageW :: proc(\n  231  \t\tflags: DWORD,\n  232: \t\tlpSrc: LPVOID,\n  233  \t\tmsgId: DWORD,\n  234  \t\tlangId: DWORD,\n  ...\n  273  \tGetEnvironmentStringsW :: proc() -> LPWCH ---\n  274  \tFreeEnvironmentStringsW :: proc(env_ptr: LPWCH) -> BOOL ---\n  275: \tExpandEnvironmentStringsW :: proc(lpSrc: LPCWSTR, lpDst: LPWSTR, nSize: DWORD) -> DWORD ---\n  276  \tGetModuleFileNameW :: proc(hModule: HMODULE, lpFilename: LPWSTR, nSize: DWORD) -> DWORD ---\n  277  \tCreateDirectoryW :: proc(\n  ...\n  484  \tGetProcAddress :: proc(h: HMODULE, c_str: LPCSTR) -> rawptr ---\n  485  \n  486: \tLoadResource :: proc(hModule: HMODULE, hResInfo: HRSRC) -> HGLOBAL ---\n  487  \tFreeResource :: proc(hResData: HGLOBAL) -> BOOL ---\n  488  \tLockResource :: proc(hResData: HGLOBAL) -> LPVOID ---\n  489: \tSizeofResource :: proc(hModule: HMODULE, hResInfo: HRSRC) -> DWORD ---\n  490: \tFindResourceW :: proc(hModule: HMODULE, lpName: LPCWSTR, lpType: LPCWSTR) -> HRSRC ---\n  491: \tFindResourceExW :: proc(hModule: HMODULE, lpType: LPCWSTR, lpName: LPCWSTR, wLanguage: LANGID) -> HRSRC ---\n  492  \tEnumResourceNamesW :: proc(hModule: HMODULE, lpType: LPCWSTR, lpEnumFunc: ENUMRESNAMEPROCW, lParam: LONG_PTR) -> BOOL ---\n  493  \tEnumResourceNamesExW :: proc(hModule: HMODULE, lpType: LPCWSTR, lpEnumFunc: ENUMRESNAMEPROCW, lParam: LONG_PTR, dwFlags: DWORD, LangId: LANGID) -> BOOL ---\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\ole32.odin:\n   65  \n   66  \tPropVariantClear :: proc(pvar: ^PROPVARIANT) -> HRESULT ---\n   67: \tPropVariantCopy :: proc(pvarDest: ^PROPVARIANT, pvarSrc: ^PROPVARIANT) -> HRESULT ---\n   68  \tFreePropVariantArray :: proc(cVariants: ULONG, rgvars: ^PROPVARIANT) -> HRESULT ---\n   69  }\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\types.odin:\n   42  HFONT :: distinct HANDLE\n   43  HRGN :: distinct HANDLE\n   44: HRSRC :: distinct HANDLE\n   45  HWINSTA :: distinct HANDLE\n   46  HACCEL :: distinct HANDLE\n   ..\n 2471  \n 2472  // Ternary raster operations\n 2473: SRCCOPY        : DWORD : 0x00CC0020 // dest = source\n 2474: SRCPAINT       : DWORD : 0x00EE0086 // dest = source OR dest\n 2475: SRCAND         : DWORD : 0x008800C6 // dest = source AND dest\n 2476: SRCINVERT      : DWORD : 0x00660046 // dest = source XOR dest\n 2477: SRCERASE       : DWORD : 0x00440328 // dest = source AND (NOT dest)\n 2478: NOTSRCCOPY     : DWORD : 0x00330008 // dest = (NOT source)\n 2479: NOTSRCERASE    : DWORD : 0x001100A6 // dest = (NOT src) AND (NOT dest)\n 2480  MERGECOPY      : DWORD : 0x00C000CA // dest = (source AND pattern\n 2481  MERGEPAINT     : DWORD : 0x00BB0226 // dest = (NOT source) OR dest\n ....\n 4184  SHCONTF_INCLUDEHIDDEN         :: 0x80\n 4185  SHCONTF_INIT_ON_FIRST_NEXT    :: 0x100\n 4186: SHCONTF_NETPRINTERSRCH        :: 0x200\n 4187  SHCONTF_SHAREABLE             :: 0x400\n 4188  SHCONTF_STORAGE               :: 0x800\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\user32.odin:\n  156  \tLoadAcceleratorsW :: proc(hInstance: HINSTANCE, lpTableName: LPCWSTR) -> HACCEL ---\n  157  \tTranslateAcceleratorW :: proc(hWnd: HWND, hAccTable: HACCEL, lpMsg: LPMSG) -> INT ---\n  158: \tCopyAcceleratorTableW :: proc(hAccelSrc: HACCEL, lpAccelDst: LPACCEL, cAccelEntries: INT) -> INT ---\n  159  \n  160  \tInsertMenuItemW :: proc(hmenu: HMENU, item: UINT, fByPosition: BOOL, lpmi: LPMENUITEMINFOW) -> BOOL ---\n  ...\n  281  \tOffsetRect :: proc(lprc1: ^RECT, dx, dy: INT) -> BOOL ---\n  282  \tInflateRect :: proc(lprc1: ^RECT, dx, dy: INT) -> BOOL ---\n  283: \tIntersectRect :: proc(lprcDst, lprcSrc1, lprcSrc2: ^RECT) -> BOOL ---\n  284: \tSubtractRect :: proc(lprcDst, lprcSrc1, lprcSrc2: ^RECT) -> BOOL ---\n  285: \tUnionRect :: proc(lprcDst, lprcSrc1, lprcSrc2: ^RECT) -> BOOL ---\n  286  \tIsRectEmpty :: proc(lprc: ^RECT) -> BOOL ---\n  287  \tSetRectEmpty :: proc(lprc: ^RECT) -> BOOL ---\n  288: \tCopyRect :: proc(lprcDst, lprcSrc: ^RECT) -> BOOL ---\n  289  \n  290  \tGetWindowInfo :: proc(hwnd: HWND, pwi: PWINDOWINFO) -> BOOL ---\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\wgl.odin:\n   73  \twglGetProcAddress         :: proc(c_str: cstring) -> rawptr ---\n   74  \twglDeleteContext          :: proc(HGLRC: HGLRC) -> BOOL ---\n   75: \twglCopyContext            :: proc(src, dst: HGLRC, mask: UINT) -> BOOL ---\n   76  \twglCreateLayerContext     :: proc(hdc: HDC, layer_plane: c.int) -> HGLRC ---\n   77  \twglDescribeLayerPlane     :: proc(hdc: HDC, pixel_format, layer_plane: c.int, bytes: UINT, pd: LPLAYERPLANEDESCRIPTOR) -> BOOL ---\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\wglext.odin:\n   11  wglDeleteBufferRegionARBType  :: #type proc \"c\" (hRegion: HANDLE)\n   12  wglSaveBufferRegionARBType    :: #type proc \"c\" (hRegion: HANDLE, x: c_int, y: c_int, width: c_int, height: c_int) -> BOOL\n   13: wglRestoreBufferRegionARBType :: #type proc \"c\" (hRegion: HANDLE, x: c_int, y: c_int, width: c_int, height: c_int, xSrc: c_int, ySrc: c_int) -> BOOL\n   14  \n   15  // wglCreateBufferRegionARB:  wglCreateBufferRegionARBType\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\sys\\windows\\winerror.odin:\n 4154  \tDS_EPOCH_MISMATCH = 0x2123,\n 4155  \t// Source and destination of a cross-domain move do not agree on the object's current name. Either source or destination does not have the latest version of the object.\n 4156: \tDS_SRC_NAME_MISMATCH = 0x2124,\n 4157  \t// Source and destination for the cross-domain move operation are identical. Caller should use local move operation instead of cross-domain move operation.\n 4158: \tDS_SRC_AND_DST_NC_IDENTICAL = 0x2125,\n 4159  \t// Source and destination for a cross-domain move are not in agreement on the naming contexts in the forest. Either source or destination does not have the latest version of the Partitions container.\n 4160  \tDS_DST_NC_MISMATCH = 0x2126,\n ....\n 4162  \tDS_NOT_AUTHORITIVE_FOR_DST_NC = 0x2127,\n 4163  \t// Source and destination of a cross-domain move do not agree on the identity of the source object. Either source or destination does not have the latest version of the source object.\n 4164: \tDS_SRC_GUID_MISMATCH = 0x2128,\n 4165  \t// Object being moved across-domains is already known to be deleted by the destination server. The source server does not have the latest version of the source object.\n 4166  \tDS_CANT_MOVE_DELETED_OBJECT = 0x2129,\n ....\n 4208  \tDS_CANT_CREATE_UNDER_SCHEMA = 0x213E,\n 4209  \t// The replica/child install failed to get the objectVersion attribute on the schema container on the source DC. Either the attribute is missing on the schema container or the credentials supplied do not have permission to read it.\n 4210: \tDS_INSTALL_NO_SRC_SCH_VERSION = 0x213F,\n 4211  \t// The replica/child install failed to read the objectVersion attribute in the SCHEMA section of the file schema.ini in the system32 directory.\n 4212  \tDS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 0x2140,\n ....\n 4260  \tDS_DESTINATION_AUDITING_NOT_ENABLED = 0x2158,\n 4261  \t// The operation couldn't locate a DC for the source domain.\n 4262: \tDS_CANT_FIND_DC_FOR_SRC_DOMAIN = 0x2159,\n 4263  \t// The source object must be a group or user.\n 4264: \tDS_SRC_OBJ_NOT_GROUP_OR_USER = 0x215A,\n 4265  \t// The source object's SID already exists in destination forest.\n 4266: \tDS_SRC_SID_EXISTS_IN_FOREST = 0x215B,\n 4267  \t// The source and destination object must be of the same type.\n 4268: \tDS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 0x215C,\n 4269  \t// Security Accounts Manager initialization failed because of the following error: %1. Error Status: 0x%2. Click OK to shut down the system and reboot into Safe Mode. Check the event log for detailed information.\n 4270  \tSAM_INIT_FAILURE = 0x215D,\n ....\n 4304  \tDS_MUST_BE_RUN_ON_DST_DC = 0x216E,\n 4305  \t// For security reasons, the source DC must be NT4SP4 or greater.\n 4306: \tDS_SRC_DC_MUST_BE_SP4_OR_GREATER = 0x216F,\n 4307  \t// Critical Directory Service System objects cannot be deleted during tree delete operations. The tree delete may have been partially performed.\n 4308  \tDS_CANT_TREE_DELETE_CRITICAL_OBJ = 0x2170,\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\text\\match\\strlib.odin:\n   34  \n   35  Match_State :: struct {\n   36: \tsrc: string,\n   37  \tpattern: string,\n   38  \tlevel: int,\n   ..\n  242  \n  243  single_match :: proc(ms: ^Match_State, s, p, ep: int) -> (matched: bool, schar_size: int, err: Error) {\n  244: \tif s >= len(ms.src) {\n  245  \t\treturn\n  246  \t}\n  247  \n  248  \tpchar, psize := utf8_peek(ms.pattern[p:]) or_return\n  249: \tschar, ssize := utf8_peek(ms.src[s:]) or_return\n  250  \tschar_size = ssize\n  251  \n  ...\n  268  \n  269  \n  270: \tschar, ssize := utf8_peek(ms.src[s:]) or_return\n  271  \tpchar, psize := utf8_peek(ms.pattern[p:]) or_return\n  272  \n  273: \t// skip until the src and pattern match\n  274  \tif schar != pchar {\n  275  \t\treturn INVALID, .OK\n  ...\n  282  \tend, _ := utf8_peek(ms.pattern[p + psize:]) or_return\n  283  \n  284: \tfor s < len(ms.src) {\n  285: \t\tch := utf8_advance(ms.src, &s) or_return\n  286  \n  287  \t\tswitch ch{\n  ...\n  326  \t\t}\n  327  \n  328: \t\tm = utf8_prev(ms.src, s, m)\n  329  \t}\n  330  \n  ...\n  384  \tlength := ms.capture[index].len\n  385  \n  386: \tif len(ms.src) - s >= length {\n  387  \t\treturn s + length, .OK\n  388  \t}\n  ...\n  417  \t\t} \n  418  \n  419: \t\tif len(ms.src) != s {\n  420  \t\t\ts = INVALID\n  421  \t\t}\n  ...\n  451  \t\t\t// get previous\n  452  \t\t\tif s != 0 {\n  453: \t\t\t\ttemp := utf8_prev(ms.src, 0, s)\n  454: \t\t\t\tprevious, _ = utf8_peek(ms.src[temp:]) or_return\n  455  \t\t\t}\n  456  \n  457  \t\t\t// get current\n  458: \t\t\tif s != len(ms.src) {\n  459: \t\t\t\tcurrent, _ = utf8_peek(ms.src[s:]) or_return\n  460  \t\t\t}\n  461  \n  ...\n  648  \n  649  \tms := Match_State {\n  650: \t\tsrc = haystack,\n  651  \t\tpattern = pattern,\n  652  \t}\n  ...\n  673  \t\ts += 1\n  674  \n  675: \t\tif !(s < len(ms.src) && !anchor) {\n  676  \t\t\tbreak\n  677  \t\t}\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\text\\regex\\compiler\\debugging.odin:\n   37  \titer := virtual_machine.Opcode_Iterator{ code, 0 }\n   38  \tfor opcode, pc in virtual_machine.iterate_opcodes(&iter) {\n   39: \t\tif src, ok := jump_targets[pc]; ok {\n   40  \t\t\tio.write_string(w, \"--\")\n   41: \t\t\tcommon.write_padded_hex(w, src, 4)\n   42  \t\t\tio.write_string(w, \"--> \")\n   43  \t\t} else {\n\nC:\\odin-windows-amd64-dev-2025-03\\core\\text\\regex\\tokenizer\\tokenizer.odin:\n   54  Tokenizer :: struct {\n   55  \tflags: common.Flags,\n   56: \tsrc: string,\n   57  \n   58  \tch: rune,\n   ..\n   74  \n   75  init :: proc(t: ^Tokenizer, str: string, flags: common.Flags) {\n   76: \tt.src = str\n   77  \tt.flags = flags\n   78  \tt.error_state = advance_rune(t)\n   ..\n   80  \n   81  peek_byte :: proc(t: ^Tokenizer, offset := 0) -> byte {\n   82: \tif t.read_offset+offset < len(t.src) {\n   83: \t\treturn t.src[t.read_offset+offset]\n   84  \t}\n   85  \treturn 0\n   ..\n   91  \t}\n   92  \n   93: \tif t.read_offset < len(t.src) {\n   94  \t\tt.offset = t.read_offset\n   95: \t\tr, w := rune(t.src[t.read_offset]), 1\n   96  \t\tswitch {\n   97  \t\tcase r == 0:\n   98  \t\t\terr = .Illegal_Null_Character\n   99  \t\tcase r >= utf8.RUNE_SELF:\n  100: \t\t\tr, w = utf8.decode_rune(t.src[t.read_offset:])\n  101  \t\t\tif r == utf8.RUNE_ERROR && w == 1 {\n  102  \t\t\t\terr = .Illegal_Codepoint\n  ...\n  108  \t\tt.ch = r\n  109  \t} else {\n  110: \t\tt.offset = len(t.src)\n  111  \t\tt.ch = -1\n  112  \t}\n  ...\n  133  \n  134  \t\tif t.ch == ']' {\n  135: \t\t\treturn t.src[start:t.offset], true\n  136  \t\t}\n  137  \t}\n  ...\n  150  \t\t}\n  151  \t\tif t.ch == '}' {\n  152: \t\t\treturn t.src[start:t.offset], true\n  153  \t\t}\n  154  \t}\n  ...\n  259  \t\t\tcase:\n  260  \t\t\t\tkind = .Rune\n  261: \t\t\t\tlit = t.src[t.offset:t.read_offset]\n  262  \t\t\t}\n  263  \n  ...\n  314  \n  315  \t\t\tkind = .Rune\n  316: \t\t\tlit = t.src[t.offset:t.read_offset]\n  317  \t\t}\n  318  \n\nC:\\odin-windows-amd64-dev-2025-03\\core\\text\\scanner\\scanner.odin:\n   80  // Scanner allows for the reading of Unicode characters and tokens from a string\n   81  Scanner :: struct {\n   82: \tsrc: string,\n   83  \n   84: \tsrc_pos: int,\n   85: \tsrc_end: int,\n   86  \n   87  \ttok_pos: int,\n   ..\n  124  // init initializes a scanner with a new source and returns itself.\n  125  // error_count is set to 0, flags is set to Odin_Like_Tokens, whitespace is set to Odin_Whitespace\n  126: init :: proc(s: ^Scanner, src: string, filename := \"\") -> ^Scanner {\n  127  \ts^ = {}\n  128  \n  129  \ts.error_count = 0\n  130: \ts.src = src\n  131  \ts.pos.filename = filename\n  132  \n  ...\n  146  @(private, require_results)\n  147  advance :: proc(s: ^Scanner) -> rune {\n  148: \tif s.src_pos >= len(s.src) {\n  149  \t\ts.prev_char_len = 0\n  150  \t\treturn EOF\n  151  \t}\n  152: \tch, width := rune(s.src[s.src_pos]), 1\n  153  \n  154  \tif ch >= utf8.RUNE_SELF {\n  155: \t\tch, width = utf8.decode_rune_in_string(s.src[s.src_pos:])\n  156  \t\tif ch == utf8.RUNE_ERROR && width == 1 {\n  157: \t\t\ts.src_pos += width\n  158  \t\t\ts.prev_char_len = width\n  159  \t\t\ts.column += 1\n  ...\n  163  \t}\n  164  \n  165: \ts.src_pos += width\n  166  \ts.prev_char_len = width\n  167  \ts.column += 1\n  ...\n  418  \n  419  \tif digsep&2 != 0 {\n  420: \t\ts.tok_end = s.src_pos - s.prev_char_len\n  421  \t}\n  422  \treturn tok, ch\n  ...\n  536  \t\t}\n  537  \n  538: \t\ts.tok_pos = s.src_pos - s.prev_char_len\n  539  \t\ts.pos.offset = s.tok_pos\n  540  \n  ...\n  609  \t}\n  610  \n  611: \ts.tok_end = s.src_pos - s.prev_char_len\n  612  \n  613  \ts.ch = ch\n  ...\n  621  \tpos: Position\n  622  \tpos.filename = s.pos.filename\n  623: \tpos.offset = s.src_pos - s.prev_char_len\n  624  \tswitch {\n  625  \tcase s.column > 0:\n  ...\n  642  \t\treturn \"\"\n  643  \t}\n  644: \treturn string(s.src[s.tok_pos:s.tok_end])\n  645  }\n  646  \n\n1113 matches across 109 files\n\n\nSearching 1 file for \"sec_to_ms\"\n\nC:\\Users\\johnb\\source\\repos\\BiscuitGame\\source\\build_default.bat:\n    ERROR: Unable to open file\n\n0 matches\n\nSearching 841 files for \"sec_to_ms\"\n\n0 matches",
			"settings":
			{
				"buffer_size": 135958,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "build_default.bat",
			"settings":
			{
				"buffer_size": 92,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "source"
					},
					"BgAAACQAAAAAAAAAJQAAAAAAAAADAAAAc3JjJQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQAAAAAAAAAJwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "build_hot_reload.bat",
			"settings":
			{
				"buffer_size": 3382,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"insert",
					{
						"characters": "source"
					},
					"EgAAAGgKAAAAAAAAaQoAAAAAAAADAAAAc3JjrAgAAAAAAACtCAAAAAAAAAMAAABzcmPUBwAAAAAAANUHAAAAAAAAAwAAAHNyY2UKAAAAAAAAZgoAAAAAAAAAAAAAqwgAAAAAAACsCAAAAAAAAAAAAADVBwAAAAAAANYHAAAAAAAAAAAAAGgKAAAAAAAAaQoAAAAAAAAAAAAArQgAAAAAAACuCAAAAAAAAAAAAADWBwAAAAAAANcHAAAAAAAAAAAAAGsKAAAAAAAAbAoAAAAAAAAAAAAArwgAAAAAAACwCAAAAAAAAAAAAADXBwAAAAAAANgHAAAAAAAAAAAAAG4KAAAAAAAAbwoAAAAAAAAAAAAAsQgAAAAAAACyCAAAAAAAAAAAAADYBwAAAAAAANkHAAAAAAAAAAAAAHEKAAAAAAAAcgoAAAAAAAAAAAAAswgAAAAAAAC0CAAAAAAAAAAAAADZBwAAAAAAANoHAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAwAAANQHAAAAAAAA1wcAAAAAAAAAAAAAAADwv6wIAAAAAAAArwgAAAAAAAAAAAAAAADwv2gKAAAAAAAAawoAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"paste",
					null,
					"AQAAADsLAAAAAAAARAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwsAAAAAAAA7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAEQLAAAAAAAARQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAsAAAAAAABECwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAEQLAAAAAAAARAsAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAARQsAAAAAAABFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAEQLAAAAAAAARQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAsAAAAAAABECwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAEMLAAAAAAAAQwsAAAAAAAACAAAAJVw8CwAAAAAAADwLAAAAAAAABwAAAE9VVF9ESVI",
					"AQAAAAAAAAABAAAARQsAAAAAAABFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAADsLAAAAAAAAOwsAAAAAAAABAAAAJQ",
					"AQAAAAAAAAABAAAAPAsAAAAAAAA8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACwLAAAAAAAALQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAsAAAAAAAAsCwAAAAAAAAAAAAAAwF5A"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "pushd"
					},
					"BQAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAADALAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAyCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQsAAAAAAAAtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADILAAAAAAAAMwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgsAAAAAAAAyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAADMLAAAAAAAAPAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwsAAAAAAAAzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAADsLAAAAAAAAOwsAAAAAAAABAAAAJTQLAAAAAAAANAsAAAAAAAAHAAAAT1VUX0RJUjMLAAAAAAAAMwsAAAAAAAABAAAAJS0LAAAAAAAALQsAAAAAAAAGAAAAcHVzaGQg",
					"AQAAAAAAAAABAAAAPAsAAAAAAAA8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".\\"
					},
					"AgAAADwLAAAAAAAAPQsAAAAAAAAAAAAAPQsAAAAAAAA+CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAsAAAAAAAA8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"paste",
					null,
					"AQAAAD4LAAAAAAAARwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgsAAAAAAAA+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAEcLAAAAAAAASAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwsAAAAAAABHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAALkLAAAAAAAAuQsAAAAAAAAJAAAAZGlyZWN0b3J5sQsAAAAAAACxCwAAAAAAAAgAAABjdXJyZW50IA",
					"AQAAAAAAAAABAAAAuQsAAAAAAADCCwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ".\\"
					},
					"AgAAALELAAAAAAAAsgsAAAAAAAAAAAAAsgsAAAAAAACzCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQsAAAAAAACxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "%OUT_DIR"
					},
					"CAAAALMLAAAAAAAAtAsAAAAAAAAAAAAAtAsAAAAAAAC1CwAAAAAAAAAAAAC1CwAAAAAAALYLAAAAAAAAAAAAALYLAAAAAAAAtwsAAAAAAAAAAAAAtwsAAAAAAAC4CwAAAAAAAAAAAAC4CwAAAAAAALkLAAAAAAAAAAAAALkLAAAAAAAAugsAAAAAAAAAAAAAugsAAAAAAAC7CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswsAAAAAAACzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "%\\ray"
					},
					"BQAAALsLAAAAAAAAvAsAAAAAAAAAAAAAvAsAAAAAAAC9CwAAAAAAAAAAAAC9CwAAAAAAAL4LAAAAAAAAAAAAAL4LAAAAAAAAvwsAAAAAAAAAAAAAvwsAAAAAAADACwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwsAAAAAAAC7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "lib.dll"
					},
					"BwAAAMALAAAAAAAAwQsAAAAAAAAAAAAAwQsAAAAAAADCCwAAAAAAAAAAAADCCwAAAAAAAMMLAAAAAAAAAAAAAMMLAAAAAAAAxAsAAAAAAAAAAAAAxAsAAAAAAADFCwAAAAAAAAAAAADFCwAAAAAAAMYLAAAAAAAAAAAAAMYLAAAAAAAAxwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAsAAAAAAADACwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMcLAAAAAAAAyAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwsAAAAAAADHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					2,
					"left_delete",
					null,
					"AgAAAK8LAAAAAAAArwsAAAAAAAABAAAAbq4LAAAAAAAArgsAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAsAsAAAAAAACwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "at"
					},
					"AgAAAK4LAAAAAAAArwsAAAAAAAAAAAAArwsAAAAAAACwCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgsAAAAAAACuCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "sublime_odin.sublime-project",
			"settings":
			{
				"buffer_size": 762,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build_web.bat",
			"settings":
			{
				"buffer_size": 1625,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"left_delete",
					null,
					"AgAAAO4EAAAAAAAA7gQAAAAAAAADAAAAc3JjMAIAAAAAAAAwAgAAAAAAAAMAAABzcmM",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAgAAADACAAAAAAAAMwIAAAAAAAAAAAAAAADwv+4EAAAAAAAA8QQAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "source"
					},
					"DAAAAOsEAAAAAAAA7AQAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAADtBAAAAAAAAO4EAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAA7wQAAAAAAADwBAAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAAPEEAAAAAAAA8gQAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAA1AgAAAAAAADYCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAgAAADACAAAAAAAAMAIAAAAAAAAAAAAAAADwv+sEAAAAAAAA6wQAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "source/percentage.odin",
			"settings":
			{
				"buffer_size": 268,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "package game"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "package"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAAA4AAAAAAAAAqwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n\npercenta"
					},
					"CgAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsAAAAAAAAAqwAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "ge_e"
					},
					"BAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAALgAAAAAAAAAuAAAAAAAAAABAAAAZQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkAAAAAAAAAuQAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "done"
					},
					"BAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " opro"
					},
					"BQAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8AAAAAAAAAvwAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					4,
					"left_delete",
					null,
					"BAAAAMMAAAAAAAAAwwAAAAAAAAABAAAAb8IAAAAAAAAAwgAAAAAAAAABAAAAcsEAAAAAAAAAwQAAAAAAAAABAAAAcMAAAAAAAAAAwAAAAAAAAAABAAAAbw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "proc"
					},
					"BAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQAAAAAAAAAxgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQAAAAAAAAAxAAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "v,"
					},
					"AgAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUAAAAAAAAAxQAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " max:"
					},
					"BQAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcAAAAAAAAAxwAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEAAAAAAAAA0QAAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " f32"
					},
					"BAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAADWAAAAAAAAANcAAAAAAAAAAAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoAAAAAAAAA2gAAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " percentage_"
					},
					"DAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAADtAAAAAAAAAO4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIAAAAAAAAA4gAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "full"
					},
					"BAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPIAAAAAAAAA9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIAAAAAAAAA8gAAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "v,"
					},
					"AgAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMAAAAAAAAA8wAAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " max"
					},
					"BAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUAAAAAAAAA9QAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "source/countdown.odin",
			"settings":
			{
				"buffer_size": 430,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "package game"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "package"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " game"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAAA4AAAAAAAAAZQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAJAAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " is_already"
					},
					"CwAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "_completed"
					},
					"CgAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAALMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "do"
					},
					"AgAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAK0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "source/sprite.odin",
			"settings":
			{
				"buffer_size": 4671,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "package game"
			},
			"undo_stack":
			[
				[
					98,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACYAAAAAAAAAJwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACcAAAAAAAAAKQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "P"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					2,
					"left_delete",
					null,
					"AgAAACkAAAAAAAAAKQAAAAAAAAABAAAAfSgAAAAAAAAAKAAAAAAAAAABAAAAUA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAMEAAAAAAAAAwQAAAAAAAAAJAAAAQW5pbWF0aW9u",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoAAAAAAAAAygAAAAAAAAAAAAAAAOBrQA"
				],
				[
					108,
					2,
					"left_delete",
					null,
					"AgAAAMAAAAAAAAAAwAAAAAAAAAABAAAACr8AAAAAAAAAvwAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "rl.Rect"
					},
					"BwAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAAOoAAAAAAAAA6gAAAAAAAAAEAAAAUmVjdOkAAAAAAAAA6QAAAAAAAAABAAAALg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4AAAAAAAAA7gAAAAAAAAAAAAAAAADwvw"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAAOgAAAAAAAAA6AAAAAAAAAABAAAAbOcAAAAAAAAA5wAAAAAAAAABAAAAcg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkAAAAAAAAA6QAAAAAAAAAAAAAAAADwvw"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "Sprite_Clip"
					},
					"CwAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIAAAAAAAAA8gAAAAAAAAAAAAAAAADwvw"
				],
				[
					116,
					4,
					"left_delete",
					null,
					"BAAAAPUAAAAAAAAA9QAAAAAAAAABAAAAZfQAAAAAAAAA9AAAAAAAAAABAAAAbfMAAAAAAAAA8wAAAAAAAAABAAAAYfIAAAAAAAAA8gAAAAAAAAABAAAATg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYAAAAAAAAA9gAAAAAAAAAAAAAAAADwvw"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "_Name"
					},
					"BQAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIAAAAAAAAA8gAAAAAAAAAAAAAAAADwvw"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPcAAAAAAAAA+QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcAAAAAAAAA9wAAAAAAAAAAAAAAAADwvw"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAMAAAAAAAAAAwAAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEAAAAAAAAAwQAAAAAAAAAAAAAAAGB8QA"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "[]"
					},
					"AgAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYAAAAAAAAA5gAAAAAAAAAAAAAAAADwvw"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\nglobal_+"
					},
					"CQAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAP0AAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoAAAAAAAAA+gAAAAAAAAD////////vfw"
				],
				[
					132,
					1,
					"left_delete",
					null,
					"AQAAAAIBAAAAAAAAAgEAAAAAAAABAAAAKw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMBAAAAAAAAAwEAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "animation_pla"
					},
					"DQAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAAKAQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIBAAAAAAAAAgEAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8BAAAAAAAADwEAAAAAAAAAAAAAAADwvw"
				],
				[
					135,
					3,
					"left_delete",
					null,
					"AwAAABEBAAAAAAAAEQEAAAAAAAABAAAAchABAAAAAAAAEAEAAAAAAAABAAAAZQ8BAAAAAAAADwEAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIBAAAAAAAAEgEAAAAAAAAAAAAAAADwvw"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "yers"
					},
					"BAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8BAAAAAAAADwEAAAAAAAAAAAAAAADwvw"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\n\nAnimation_"
					},
					"DAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8AAAAAAAAAvwAAAAAAAAAAAAAAAMBoQA"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "Player_N"
					},
					"CAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsAAAAAAAAAywAAAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "ame"
					},
					"AwAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMAAAAAAAAA0wAAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYAAAAAAAAA1gAAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": " enum"
					},
					"BQAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4AAAAAAAAA3gAAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAN8AAAAAAAAA4QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8AAAAAAAAA3wAAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "P"
					},
					"AQAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					2,
					"left_delete",
					null,
					"AgAAAOEAAAAAAAAA4QAAAAAAAAABAAAAfeAAAAAAAAAA4AAAAAAAAAABAAAAUA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIAAAAAAAAA4gAAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					1,
					"cut",
					null,
					"AQAAAMEAAAAAAAAAwQAAAAAAAAAhAAAAQW5pbWF0aW9uX1BsYXllcl9OYW1lIDo6IGVudW0ge30K",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEAAAAAAAAA4QAAAAAAAAAAAAAAAADwvw"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAA"
				],
				[
					154,
					1,
					"paste",
					null,
					"AQAAAP0AAAAAAAAAHgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0AAAAAAAAA/QAAAAAAAAAAAAAAAAAAAA"
				],
				[
					155,
					1,
					"left_delete",
					null,
					"AQAAAB0BAAAAAAAAHQEAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4BAAAAAAAAHgEAAAAAAAAAAAAAAADwvw"
				],
				[
					157,
					1,
					"cut",
					null,
					"AQAAACsAAAAAAAAAKwAAAAAAAAAaAAAAQW5pbWF0aW9uX05hbWUgOjogZW51bSB7fQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAIBwQA"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					160,
					1,
					"paste",
					null,
					"AQAAAKgAAAAAAAAAwgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgAAAAAAAAAqAAAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAMEAAAAAAAAAwQAAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIAAAAAAAAAwgAAAAAAAAAAAAAAAADwvw"
				],
				[
					164,
					1,
					"cut",
					null,
					"AQAAAA4AAAAAAAAADgAAAAAAAAAcAAAAU3ByaXRlX0NsaXBfTmFtZSA6OiBlbnVtIHt9Cg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAMBpQA"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIoAAAAAAAAAiwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAAAAAA"
				],
				[
					167,
					1,
					"paste",
					null,
					"AQAAAIsAAAAAAAAApwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsAAAAAAAAAiwAAAAAAAAAAAAAAAADwvw"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "global_sprite_"
					},
					"DgAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAArgAAAAAAAAAAAAAArgAAAAAAAACvAAAAAAAAAAAAAACvAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcAAAAAAAAApwAAAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "clips"
					},
					"BQAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoAAAAAAAAAugAAAAAAAAAAAAAAAADwvw"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					172,
					2,
					"left_delete",
					null,
					"AgAAAL0AAAAAAAAAvQAAAAAAAAABAAAAILwAAAAAAAAAvAAAAAAAAAABAAAAOg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4AAAAAAAAAvgAAAAAAAAAAAAAAAADwvw"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAALwAAAAAAAAAvQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAADwvw"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					175,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAL4AAAAAAAAAwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4AAAAAAAAAvgAAAAAAAAAAAAAAAADwvw"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "Sprite_Clip"
					},
					"CwAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8AAAAAAAAAvwAAAAAAAAAAAAAAAADwvw"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "_Name"
					},
					"BQAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoAAAAAAAAAygAAAAAAAAAAAAAAAADwvw"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "rl.Recta"
					},
					"CAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAADwvw"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "ngle"
					},
					"BAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAFB7QA"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " rl."
					},
					"BAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAADwvw"
				],
				[
					185,
					1,
					"left_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAABAAAALg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAADwvw"
				],
				[
					187,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABgAAAAAAAAAGgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAADwvw"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "vendor:ra"
					},
					"CQAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAADwvw"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "ylib"
					},
					"BAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAADwvw"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUBAAAAAAAAhQEAAAAAAAAAAAAAAMBoQA"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIgBAAAAAAAAiQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgBAAAAAAAAiAEAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIkBAAAAAAAAiwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkBAAAAAAAAiQEAAAAAAAAAAAAAAADwvw"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "Animation_Pla"
					},
					"DQAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoBAAAAAAAAigEAAAAAAAAAAAAAAADwvw"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "yer_Name"
					},
					"CAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAJoBAAAAAAAAmwEAAAAAAAAAAAAAmwEAAAAAAACcAQAAAAAAAAAAAACcAQAAAAAAAJ0BAAAAAAAAAAAAAJ0BAAAAAAAAngEAAAAAAAAAAAAAngEAAAAAAACfAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJcBAAAAAAAAlwEAAAAAAAAAAAAAAADwvw"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "Animation_Pl"
					},
					"DAAAAKABAAAAAAAAoQEAAAAAAAAAAAAAoQEAAAAAAACiAQAAAAAAAAAAAACiAQAAAAAAAKMBAAAAAAAAAAAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAACoAQAAAAAAAKkBAAAAAAAAAAAAAKkBAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAACrAQAAAAAAAKwBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKABAAAAAAAAoAEAAAAAAAAAAAAAAADwvw"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "ayer"
					},
					"BAAAAKwBAAAAAAAArQEAAAAAAAAAAAAArQEAAAAAAACuAQAAAAAAAAAAAACuAQAAAAAAAK8BAAAAAAAAAAAAAK8BAAAAAAAAsAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwBAAAAAAAArAEAAAAAAAAAAAAAAADwvw"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALABAAAAAAAAsgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALABAAAAAAAAsAEAAAAAAAAAAAAAAADwvw"
				],
				[
					205,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPUAAAAAAAAA9wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUAAAAAAAAA9QAAAAAAAAAAAAAAAMiBQA"
				],
				[
					209,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYAAAAAAAAA9gAAAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAAD3AAAAAAAAAPcAAAAAAAAAAQAAAAlOAQAAAAAAAE8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4BAAAAAAAATgEAAAAAAAAAAAAAAADwvw"
				],
				[
					218,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BAAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAAC6AQAAAAAAAAAAAABOAQAAAAAAAE4BAAAAAAAAAQAAAAm4AQAAAAAAALkBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgBAAAAAAAAuAEAAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "\n\nSprite_"
					},
					"CgAAAKIAAAAAAAAAowAAAAAAAAAAAAAAuQEAAAAAAAC5AQAAAAAAAAEAAAAJowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIAAAAAAAAAogAAAAAAAAAAAAAAAIBAQA"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "Sheet_Name"
					},
					"CgAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsAAAAAAAAAqwAAAAAAAAAAAAAAAADwvw"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAC3AAAAAAAAALgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUAAAAAAAAAtQAAAAAAAAAAAAAAAADwvw"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " enum"
					},
					"BQAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0AAAAAAAAAvQAAAAAAAAAAAAAAAADwvw"
				],
				[
					227,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL4AAAAAAAAAwAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4AAAAAAAAAvgAAAAAAAAAAAAAAAADwvw"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "\nglobal_s"
					},
					"CQAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAADwvw"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": "prite_sheets"
					},
					"DAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkAAAAAAAAAyQAAAAAAAAAAAAAAAADwvw"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUAAAAAAAAA1QAAAAAAAAAAAAAAAADwvw"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAADwvw"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAANkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAADwvw"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "Sprite_Shet"
					},
					"CwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoAAAAAAAAA2gAAAAAAAAAAAAAAAADwvw"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUAAAAAAAAA5QAAAAAAAAAAAAAAAADwvw"
				],
				[
					236,
					3,
					"left_delete",
					null,
					"AwAAAOYAAAAAAAAA5gAAAAAAAAABAAAAdOUAAAAAAAAA5QAAAAAAAAABAAAAZeQAAAAAAAAA5AAAAAAAAAABAAAAdA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcAAAAAAAAA5wAAAAAAAAAAAAAAAADwvw"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "et_Name"
					},
					"BwAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAADwvw"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "rl.Texture"
					},
					"CgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwAAAAAAAAA7AAAAAAAAAAAAAAAAADwvw"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "2D"
					},
					"AgAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYAAAAAAAAA9gAAAAAAAAAAAAAAAADwvw"
				],
				[
					244,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPgAAAAAAAAA+gAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAADwvw"
				],
				[
					248,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkAAAAAAAAA+QAAAAAAAAAAAAAAAADwvw"
				],
				[
					253,
					2,
					"left_delete",
					null,
					"AgAAAKQAAAAAAAAApAAAAAAAAABZAAAAU3ByaXRlX1NoZWV0X05hbWUgOjogZW51bSB7fQpnbG9iYWxfc3ByaXRlX3NoZWV0cyA6PSBbU3ByaXRlX1NoZWV0X05hbWVdcmwuVGV4dHVyZTJEewoJCn2jAAAAAAAAAKMAAAAAAAAAAQAAAAo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0AAAAAAAAApAAAAAAAAAAAAAAAAADwvw"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": "\n\n\nanimation"
					},
					"DAAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsBAAAAAAAAuwEAAAAAAAAAAAAAAADwvw"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "_player"
					},
					"BwAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAADJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcBAAAAAAAAxwEAAAAAAAAAAAAAAADwvw"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "_advance"
					},
					"CAAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAADQAQAAAAAAANEBAAAAAAAAAAAAANEBAAAAAAAA0gEAAAAAAAAAAAAA0gEAAAAAAADTAQAAAAAAAAAAAADTAQAAAAAAANQBAAAAAAAAAAAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADWAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADYAQAAAAAAAAAAAADYAQAAAAAAANkBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYBAAAAAAAA1gEAAAAAAAAAAAAAAADwvw"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": " proc"
					},
					"BQAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADbAQAAAAAAAAAAAADbAQAAAAAAANwBAAAAAAAAAAAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkBAAAAAAAA2QEAAAAAAAAAAAAAAADwvw"
				],
				[
					268,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4BAAAAAAAA4AEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4BAAAAAAAA3gEAAAAAAAAAAAAAAADwvw"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8BAAAAAAAA3wEAAAAAAAAAAAAAAADwvw"
				],
				[
					270,
					1,
					"left_delete",
					null,
					"AQAAAN8BAAAAAAAA3wEAAAAAAAABAAAAJg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOABAAAAAAAA4AEAAAAAAAAAAAAAAADwvw"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAM4BAAAAAAAAzwEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					275,
					4,
					"delete_word",
					{
						"forward": false
					},
					"BAAAAN8BAAAAAAAA3wEAAAAAAAACAAAAKCnbAQAAAAAAANsBAAAAAAAABAAAAHByb2PYAQAAAAAAANgBAAAAAAAAAwAAADo6IL4BAAAAAAAAvgEAAAAAAAAaAAAAYW5pbWF0aW9uX3BsYXllcnNfYWR2YW5jZSA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEBAAAAAAAA4QEAAAAAAAAAAAAAAADwvw"
				],
				[
					276,
					1,
					"left_delete",
					null,
					"AQAAAL0BAAAAAAAAvQEAAAAAAAABAAAACg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4BAAAAAAAAvgEAAAAAAAAAAAAAAADwvw"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAL0BAAAAAAAAvgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0BAAAAAAAAvQEAAAAAAAAAAAAAAADwvw"
				],
				[
					281,
					1,
					"paste",
					null,
					"AQAAAL4BAAAAAAAAnAcAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4BAAAAAAAAvgEAAAAAAAAAAAAAAADwvw"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "\n\n//"
					},
					"BAAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwBAAAAAAAAvAEAAAAAAAAAAAAAAADwvw"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": " These"
					},
					"BgAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAADCAQAAAAAAAMMBAAAAAAAAAAAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMABAAAAAAAAwAEAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYBAAAAAAAAxgEAAAAAAAAAAAAAAADwvw"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": " here"
					},
					"BQAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAAzgEAAAAAAADPAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoBAAAAAAAAygEAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": " because"
					},
					"CAAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8BAAAAAAAAzwEAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAANoBAAAAAAAA2wEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcBAAAAAAAA1wEAAAAAAAAAAAAAAADwvw"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": " common"
					},
					"BwAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsBAAAAAAAA2wEAAAAAAAAAAAAAAADwvw"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIBAAAAAAAA4gEAAAAAAAAAAAAAAADwvw"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " rlgrid"
					},
					"BwAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAADnAQAAAAAAAOgBAAAAAAAAAAAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADqAQAAAAAAAAAAAADqAQAAAAAAAOsBAAAAAAAAAAAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUBAAAAAAAA5QEAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwBAAAAAAAA7AEAAAAAAAAAAAAAAADwvw"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": " they"
					},
					"BQAAAO0BAAAAAAAA7gEAAAAAAAAAAAAA7gEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAPABAAAAAAAA8QEAAAAAAAAAAAAA8QEAAAAAAADyAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0BAAAAAAAA7QEAAAAAAAAAAAAAAADwvw"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIBAAAAAAAA8gEAAAAAAAAAAAAAAADwvw"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " application"
					},
					"DAAAAPYBAAAAAAAA9wEAAAAAAAAAAAAA9wEAAAAAAAD4AQAAAAAAAAAAAAD4AQAAAAAAAPkBAAAAAAAAAAAAAPkBAAAAAAAA+gEAAAAAAAAAAAAA+gEAAAAAAAD7AQAAAAAAAAAAAAD7AQAAAAAAAPwBAAAAAAAAAAAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAP8BAAAAAAAAAAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAICAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYBAAAAAAAA9gEAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " code"
					},
					"BQAAAAICAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAAEAgAAAAAAAAAAAAAEAgAAAAAAAAUCAAAAAAAAAAAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAICAAAAAAAAAgIAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAAcCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAoCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcCAAAAAAAABwIAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": " opposed"
					},
					"CAAAAAoCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAA0CAAAAAAAAAAAAAA0CAAAAAAAADgIAAAAAAAAAAAAADgIAAAAAAAAPAgAAAAAAAAAAAAAPAgAAAAAAABACAAAAAAAAAAAAABACAAAAAAAAEQIAAAAAAAAAAAAAEQIAAAAAAAASAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoCAAAAAAAACgIAAAAAAAAAAAAAAADwvw"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAAUAgAAAAAAAAAAAAAUAgAAAAAAABUCAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABICAAAAAAAAEgIAAAAAAAAAAAAAAADwvw"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": " library"
					},
					"CAAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAABgCAAAAAAAAAAAAABgCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAABsCAAAAAAAAAAAAABsCAAAAAAAAHAIAAAAAAAAAAAAAHAIAAAAAAAAdAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUCAAAAAAAAFQIAAAAAAAAAAAAAAADwvw"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": " because"
					},
					"CAAAAB0CAAAAAAAAHgIAAAAAAAAAAAAAHgIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAACACAAAAAAAAAAAAACACAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAlAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0CAAAAAAAAHQIAAAAAAAAAAAAAAADwvw"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAACUCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAnAgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUCAAAAAAAAJQIAAAAAAAAAAAAAAADwvw"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": " may"
					},
					"BAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcCAAAAAAAAJwIAAAAAAAAAAAAAAADwvw"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAACsCAAAAAAAALAIAAAAAAAAAAAAALAIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC4CAAAAAAAAAAAAAC4CAAAAAAAALwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsCAAAAAAAAKwIAAAAAAAAAAAAAAADwvw"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": " re-use"
					},
					"BwAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANgIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8CAAAAAAAALwIAAAAAAAAAAAAAAADwvw"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYCAAAAAAAANgIAAAAAAAAAAAAAAADwvw"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": " above"
					},
					"BgAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoCAAAAAAAAOgIAAAAAAAAAAAAAAADwvw"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEACAAAAAAAAQQIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEACAAAAAAAAQAIAAAAAAAAAAAAAAADwvw"
				],
				[
					312,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEECAAAAAAAAQwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEECAAAAAAAAQQIAAAAAAAAAAAAAAADwvw"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAEICAAAAAAAAQwIAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEICAAAAAAAAQgIAAAAAAAAAAAAAAADwvw"
				],
				[
					314,
					1,
					"left_delete",
					null,
					"AQAAAEICAAAAAAAAQgIAAAAAAAABAAAAQQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMCAAAAAAAAQwIAAAAAAAAAAAAAAADwvw"
				],
				[
					315,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEECAAAAAAAAQQIAAAAAAAABAAAAIkECAAAAAAAAQQIAAAAAAAABAAAAIg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEICAAAAAAAAQgIAAAAAAAAAAAAAAADwvw"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "\nglobal_spri"
					},
					"DAAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAADBAQAAAAAAAMIBAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALwBAAAAAAAAvAEAAAAAAAAAAAAAAADwvw"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "te_sheet_cell"
					},
					"DQAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADKAQAAAAAAAAAAAADKAQAAAAAAAMsBAAAAAAAAAAAAAMsBAAAAAAAAzAEAAAAAAAAAAAAAzAEAAAAAAADNAQAAAAAAAAAAAADNAQAAAAAAAM4BAAAAAAAAAAAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAADQAQAAAAAAANEBAAAAAAAAAAAAANEBAAAAAAAA0gEAAAAAAAAAAAAA0gEAAAAAAADTAQAAAAAAAAAAAADTAQAAAAAAANQBAAAAAAAAAAAAANQBAAAAAAAA1QEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgBAAAAAAAAyAEAAAAAAAAAAAAAAADwvw"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "_size"
					},
					"BQAAANUBAAAAAAAA1gEAAAAAAAAAAAAA1gEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUBAAAAAAAA1QEAAAAAAAAAAAAAAADwvw"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAANoBAAAAAAAA2wEAAAAAAAAAAAAA2wEAAAAAAADcAQAAAAAAAAAAAADcAQAAAAAAAN0BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoBAAAAAAAA2gEAAAAAAAAAAAAAAADwvw"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0BAAAAAAAA3QEAAAAAAAAAAAAAAADwvw"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "f32"
					},
					"AwAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAADeAQAAAAAAAN8BAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwBAAAAAAAA3AEAAAAAAAAAAAAAAADwvw"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOABAAAAAAAA4AEAAAAAAAAAAAAAAADwvw"
				],
				[
					332,
					6,
					"left_delete",
					null,
					"BgAAAEYDAAAAAAAARgMAAAAAAAABAAAAdEUDAAAAAAAARQMAAAAAAAABAAAAZUQDAAAAAAAARAMAAAAAAAABAAAAZUMDAAAAAAAAQwMAAAAAAAABAAAAaEIDAAAAAAAAQgMAAAAAAAABAAAAc0EDAAAAAAAAQQMAAAAAAAABAAAAXw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcDAAAAAAAARwMAAAAAAAAAAAAAAADwvw"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "\nimport"
					},
					"BwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAADwvw"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAADwvw"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "rlgrid"
					},
					"BgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAADwvw"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUAAAAAAAAANgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUAAAAAAAAANQAAAAAAAAAAAAAAAADwvw"
				],
				[
					345,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADYAAAAAAAAAOAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYAAAAAAAAANgAAAAAAAAAAAAAAAADwvw"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "..\\"
					},
					"AwAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcAAAAAAAAANwAAAAAAAAAAAAAAAADwvw"
				],
				[
					347,
					1,
					"left_delete",
					null,
					"AQAAADkAAAAAAAAAOQAAAAAAAAABAAAAXA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoAAAAAAAAAOgAAAAAAAAAAAAAAAADwvw"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "/rlgrid"
					},
					"BwAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAADwvw"
				],
				[
					356,
					1,
					"left_delete",
					null,
					"AQAAADgAAAAAAAAAOAAAAAAAAAABAAAALg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAADwvw"
				],
				[
					368,
					6,
					"left_delete",
					null,
					"BgAAAB8FAAAAAAAAHwUAAAAAAAABAAAAXx4FAAAAAAAAHgUAAAAAAAABAAAAdB0FAAAAAAAAHQUAAAAAAAABAAAAZRwFAAAAAAAAHAUAAAAAAAABAAAAZRsFAAAAAAAAGwUAAAAAAAABAAAAaBoFAAAAAAAAGgUAAAAAAAABAAAAcw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAFAAAAAAAAIAUAAAAAAAAAAAAAAADwvw"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwBAAAAAAAA/AEAAAAAAAAAAAAAAADwvw"
				],
				[
					374,
					1,
					"paste",
					null,
					"AQAAAP4BAAAAAAAAAAUAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4BAAAAAAAA/gEAAAAAAAAAAAAAAADwvw"
				],
				[
					377,
					1,
					"cut",
					null,
					"AQAAANYBAAAAAAAA1gEAAAAAAAAmAAAAZ2xvYmFsX3Nwcml0ZV9zaGVldF9jZWxsX3NpemUgOmYzMj0zMiA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwBAAAAAAAA1gEAAAAAAAAAAAAAAADwvw"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEEAAAAAAAAAQgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEAAAAAAAAAQQAAAAAAAAAAAAAAAADwvw"
				],
				[
					381,
					1,
					"paste",
					null,
					"AQAAAEIAAAAAAAAAaAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAAQgAAAAAAAAAAAAAAAADwvw"
				],
				[
					382,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAADwvw"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEAAAAAAAAAYQAAAAAAAAAAAAAAAADwvw"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUAAAAAAAAAZQAAAAAAAAAAAAAAAADwvw"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcAAAAAAAAAZwAAAAAAAAAAAAAAAADwvw"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "\nimport"
					},
					"BwAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAADwvw"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcAAAAAAAAARwAAAAAAAAAAAAAAAADwvw"
				],
				[
					396,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAEgAAAAAAAAASgAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgAAAAAAAAASAAAAAAAAAAAAAAAAADwvw"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "core:math"
					},
					"CQAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkAAAAAAAAASQAAAAAAAAAAAAAAAADwvw"
				],
				[
					401,
					1,
					"cut",
					null,
					"AQAAAFUAAAAAAAAAVQAAAAAAAAAqAAAAZ2xvYmFsX3Nwcml0ZV9zaGVldF9jZWxsX3NpemUgOiBmMzIgPSAzMiAK",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH4AAAAAAAAAfgAAAAAAAAAAAAAAAADwvw"
				],
				[
					410,
					2,
					"left_delete",
					null,
					"AgAAAIIKAAAAAAAAggoAAAAAAAAFAAAAdGltZXKBCgAAAAAAAIEKAAAAAAAAAQAAAC4",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIIKAAAAAAAAhwoAAAAAAAAAAAAAAADwvw"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": "sprite_"
					},
					"BwAAAEoBAAAAAAAASwEAAAAAAAAAAAAASwEAAAAAAABMAQAAAAAAAAAAAABMAQAAAAAAAE0BAAAAAAAAAAAAAE0BAAAAAAAATgEAAAAAAAAAAAAATgEAAAAAAABPAQAAAAAAAAAAAABPAQAAAAAAAFABAAAAAAAAAAAAAFABAAAAAAAAUQEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoBAAAAAAAASgEAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "bytes"
					},
					"BQAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "_pnh"
					},
					"BAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAF0AAAAAAAAAXQAAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAXgAAAAAAAABeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "g_statuses"
					},
					"CgAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAABpAAAAAAAAAGoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " #load"
					},
					"BgAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHEAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "../assets"
					},
					"CQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "status.png"
					},
					"CgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAFQBAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAABWAQAAAAAAAAAAAABVAQAAAAAAAFkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAFkBAAAAAAAAWgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAAFkBAAAAAAAAWQEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "Status_"
					},
					"BwAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "Miss,"
					},
					"BQAAAGABAAAAAAAAYQEAAAAAAAAAAAAAYQEAAAAAAABiAQAAAAAAAAAAAABiAQAAAAAAAGMBAAAAAAAAAAAAAGMBAAAAAAAAZAEAAAAAAAAAAAAAZAEAAAAAAABlAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAEAAAAAAABgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\nStatus_"
					},
					"CAAAAGUBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAABuAQAAAAAAAG8BAAAAAAAAAAAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "Hit,"
					},
					"BAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACvAQAAAAAAALMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgEAAAAAAACuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": ".Status_"
					},
					"CAAAALMBAAAAAAAAtAEAAAAAAAAAAAAAtAEAAAAAAAC1AQAAAAAAAAAAAAC1AQAAAAAAALYBAAAAAAAAAAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswEAAAAAAACzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "Miss"
					},
					"BAAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " rl.Rectangl"
					},
					"DAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAMcBAAAAAAAAyAEAAAAAAAAAAAAAyAEAAAAAAADJAQAAAAAAAAAAAADJAQAAAAAAAMoBAAAAAAAAAAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAM0BAAAAAAAAzgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQEAAAAAAADNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAM4BAAAAAAAA0AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "0,0,1,1"
					},
					"BwAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADRAQAAAAAAAAAAAADRAQAAAAAAANIBAAAAAAAAAAAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANUBAAAAAAAAAAAAANUBAAAAAAAA1gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwEAAAAAAADPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n.Status_"
					},
					"CQAAANcBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA4gEAAAAAAADjAQAAAAAAAAAAAADjAQAAAAAAAOQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "Hit"
					},
					"AwAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAADmAQAAAAAAAOcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " rl.Rectang"
					},
					"CwAAAOkBAAAAAAAA6gEAAAAAAAAAAAAA6gEAAAAAAADrAQAAAAAAAAAAAADrAQAAAAAAAOwBAAAAAAAAAAAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAADuAQAAAAAAAO8BAAAAAAAAAAAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QEAAAAAAADpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPYBAAAAAAAA+AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "1,0,1,1"
					},
					"BwAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAD5AQAAAAAAAPoBAAAAAAAAAAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP8BAAAAAAAAAAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wEAAAAAAAD/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANcBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wEAAAAAAADXAQAAAAAAAAAAAAAAYHdA"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAYCAAAAAAAABwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n\nSprite_C"
					},
					"CgAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAB6AQAAAAAAAHsBAAAAAAAAAAAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAAB9AQAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAAfwEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAggEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "lip"
					},
					"AwAAAIIBAAAAAAAAgwEAAAAAAAAAAAAAgwEAAAAAAACEAQAAAAAAAAAAAACEAQAAAAAAAIUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAggEAAAAAAACCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " ::"
					},
					"AwAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "truct"
					},
					"BQAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8BAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJABAAAAAAAAkgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAJEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACSAQAAAAAAAJYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQEAAAAAAACRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "sprite_clip_na"
					},
					"DgAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "me"
					},
					"AgAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " Sprite_Clip"
					},
					"DAAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAACtAQAAAAAAAK4BAAAAAAAAAAAAAK4BAAAAAAAArwEAAAAAAAAAAAAArwEAAAAAAACwAQAAAAAAAAAAAACwAQAAAAAAALEBAAAAAAAAAAAAALEBAAAAAAAAsgEAAAAAAAAAAAAAsgEAAAAAAACzAQAAAAAAAAAAAACzAQAAAAAAALQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAEAAAAAAACoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "_NB"
					},
					"AwAAALQBAAAAAAAAtQEAAAAAAAAAAAAAtQEAAAAAAAC2AQAAAAAAAAAAAAC2AQAAAAAAALcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAEAAAAAAAC0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAALYBAAAAAAAAtgEAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "anem"
					},
					"BAAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgEAAAAAAAC2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					3,
					"left_delete",
					null,
					"AwAAALkBAAAAAAAAuQEAAAAAAAABAAAAbbgBAAAAAAAAuAEAAAAAAAABAAAAZbcBAAAAAAAAtwEAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "me,"
					},
					"AwAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAC5AQAAAAAAALoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\ntex_i"
					},
					"BgAAALoBAAAAAAAAvwEAAAAAAAAAAAAAvwEAAAAAAADAAQAAAAAAAAAAAADAAQAAAAAAAMEBAAAAAAAAAAAAAMEBAAAAAAAAwgEAAAAAAAAAAAAAwgEAAAAAAADDAQAAAAAAAAAAAADDAQAAAAAAAMQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAMQBAAAAAAAAxQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"cut",
					null,
					"AQAAALsBAAAAAAAAuwEAAAAAAAALAAAAICAgIHRleF9pZAo",
					"AQAAAAAAAAABAAAAxQEAAAAAAADFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJIBAAAAAAAAkwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgEAAAAAAACSAQAAAAAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAJIBAAAAAAAAnQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgEAAAAAAACSAQAAAAAAAAAAAAAAAAAA"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAJwBAAAAAAAAnAEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAnQEAAAAAAACdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " Te"
					},
					"AwAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAAnwEAAAAAAACgAQAAAAAAAAAAAACgAQAAAAAAAKEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "xture_Id,"
					},
					"CQAAAKEBAAAAAAAAogEAAAAAAAAAAAAAogEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANMBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wEAAAAAAADTAQAAAAAAAP///////+9/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "rl."
					},
					"AwAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					3,
					"left_delete",
					null,
					"AwAAANoBAAAAAAAA2gEAAAAAAAABAAAALtkBAAAAAAAA2QEAAAAAAAABAAAAbNgBAAAAAAAA2AEAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA2wEAAAAAAADbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "clip_rectangle"
					},
					"DgAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA4gEAAAAAAADjAQAAAAAAAAAAAADjAQAAAAAAAOQBAAAAAAAAAAAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AEAAAAAAADYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAOYBAAAAAAAA5wEAAAAAAAAAAAAA5wEAAAAAAADoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gEAAAAAAADmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " rl.Rectangle"
					},
					"DQAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADqAQAAAAAAAAAAAADqAQAAAAAAAOsBAAAAAAAAAAAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADtAQAAAAAAAO4BAAAAAAAAAAAAAO4BAAAAAAAA7wEAAAAAAAAAAAAA7wEAAAAAAADwAQAAAAAAAAAAAADwAQAAAAAAAPEBAAAAAAAAAAAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADzAQAAAAAAAAAAAADzAQAAAAAAAPQBAAAAAAAAAAAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AEAAAAAAADoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAACYCAAAAAAAAJgIAAAAAAAAJAAAAUmVjdGFuZ2xlJQIAAAAAAAAlAgAAAAAAAAEAAAAu",
					"AQAAAAAAAAABAAAALwIAAAAAAAAvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAACQCAAAAAAAAJAIAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAJQIAAAAAAAAlAgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					2,
					"delete_word",
					{
						"forward": false
					},
					"AgAAACMCAAAAAAAAIwIAAAAAAAABAAAAciICAAAAAAAAIgIAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAACICAAAAAAAAIwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"cut",
					null,
					"AQAAAKsBAAAAAAAAqwEAAAAAAAApAAAAICAgIHNwcml0ZV9jbGlwX25hbWUgOiBTcHJpdGVfQ2xpcF9OYW1lLAo",
					"AQAAAAAAAAABAAAA0wEAAAAAAADTAQAAAAAAAAAAAAAA8HdA"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "Sprite_Clip"
					},
					"CwAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAD/AQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAACAgAAAAAAAAAAAAACAgAAAAAAAAMCAAAAAAAAAAAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAFAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gEAAAAAAAD6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAABoCAAAAAAAAGgIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsCAAAAAAAAHAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQIAAAAAAAAxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAFwCAAAAAAAAXQIAAAAAAAAAAAAAXQIAAAAAAABeAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAIAAAAAAABcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAEcCAAAAAAAASAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwIAAAAAAABHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "tex_id"
					},
					"BgAAABsCAAAAAAAAHAIAAAAAAAAAAAAAHAIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB4CAAAAAAAAAAAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwIAAAAAAAAbAgAAAAAAAAAAAAAAYGdA"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAjAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"cut",
					null,
					"AQAAAFUAAAAAAAAAVQAAAAAAAAA0AAAAYnl0ZXNfcG5nX3N0YXR1c2VzIDo9ICNsb2FkKCIuLi9hc3NldHMvc3RhdHVzLnBuZyIpCg",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAYGdA"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "tex_id"
					},
					"BgAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACECAAAAAAAAAAAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAjAgAAAAAAAAAAAAAjAgAAAAAAACQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgIAAAAAAAAeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACQCAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAAAmAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACYCAAAAAAAAJwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": ".Status"
					},
					"BwAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAAKwIAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAAC0CAAAAAAAAAAAAAC0CAAAAAAAALgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "es_Sprite_S"
					},
					"CwAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADcCAAAAAAAAAAAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "heetm,"
					},
					"BgAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA+AgAAAAAAAAAAAAA+AgAAAAAAAD8CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					2,
					"left_delete",
					null,
					"AgAAAD4CAAAAAAAAPgIAAAAAAAABAAAALD0CAAAAAAAAPQIAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAPwIAAAAAAAA/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD0CAAAAAAAAPgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQIAAAAAAAA9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4CAAAAAAAAPwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgIAAAAAAAA+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ".Statuses_Spr"
					},
					"DQAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADzAQAAAAAAAAAAAADzAQAAAAAAAPQBAAAAAAAAAAAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA9QEAAAAAAAD2AQAAAAAAAAAAAAD2AQAAAAAAAPcBAAAAAAAAAAAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA+AEAAAAAAAD5AQAAAAAAAAAAAAD5AQAAAAAAAPoBAAAAAAAAAAAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "ite_Sheet,"
					},
					"CgAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAECAAAAAAAAAAAAAAECAAAAAAAAAgIAAAAAAAAAAAAAAgIAAAAAAAADAgAAAAAAAAAAAAADAgAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAcCAAAAAAAAAAAAAAcCAAAAAAAACAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gEAAAAAAAD+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgCAAAAAAAACQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "clip_rectangle"
					},
					"DgAAAAkCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAALAgAAAAAAAAAAAAALAgAAAAAAAAwCAAAAAAAAAAAAAAwCAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA8CAAAAAAAAAAAAAA8CAAAAAAAAEAIAAAAAAAAAAAAAEAIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAAUAgAAAAAAAAAAAAAUAgAAAAAAABUCAAAAAAAAAAAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABcCAAAAAAAAGAIAAAAAAAAAAAAAGAIAAAAAAAAZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABkCAAAAAAAAGgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"paste",
					null,
					"AQAAAGgCAAAAAAAAdgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAIAAAAAAABoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgIAAAAAAAB2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "\ntex"
					},
					"BAAAABUIAAAAAAAAGggAAAAAAAAAAAAAGggAAAAAAAAbCAAAAAAAAAAAAAAbCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAHQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0IAAAAAAAAHggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					4,
					"left_delete",
					null,
					"BAAAAB0IAAAAAAAAHQgAAAAAAAABAAAAIBwIAAAAAAAAHAgAAAAAAAABAAAAeBsIAAAAAAAAGwgAAAAAAAABAAAAZRoIAAAAAAAAGggAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAHggAAAAAAAAeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "sprite_sheet"
					},
					"DAAAABoIAAAAAAAAGwgAAAAAAAAAAAAAGwgAAAAAAAAcCAAAAAAAAAAAAAAcCAAAAAAAAB0IAAAAAAAAAAAAAB0IAAAAAAAAHggAAAAAAAAAAAAAHggAAAAAAAAfCAAAAAAAAAAAAAAfCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAIQgAAAAAAAAAAAAAIQgAAAAAAAAiCAAAAAAAAAAAAAAiCAAAAAAAACMIAAAAAAAAAAAAACMIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAlCAAAAAAAAAAAAAAlCAAAAAAAACYIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGggAAAAAAAAaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "tex_"
					},
					"BAAAABoIAAAAAAAAGwgAAAAAAAAAAAAAGwgAAAAAAAAcCAAAAAAAAAAAAAAcCAAAAAAAAB0IAAAAAAAAAAAAAB0IAAAAAAAAHggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGggAAAAAAAAaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAACoIAAAAAAAAKwgAAAAAAAAAAAAAKwgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAAC0IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKggAAAAAAAAqCAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0IAAAAAAAALggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQgAAAAAAAAtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABUIAAAAAAAAFggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQgAAAAAAAAVCAAAAAAAAP///////+9/"
				],
				[
					198,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "clip_rectangle"
					},
					"AQAAABYIAAAAAAAAJAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFggAAAAAAAAWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "global_sprite_"
					},
					"DgAAAD0IAAAAAAAAPggAAAAAAAAAAAAAPggAAAAAAAA/CAAAAAAAAAAAAAA/CAAAAAAAAEAIAAAAAAAAAAAAAEAIAAAAAAAAQQgAAAAAAAAAAAAAQQgAAAAAAABCCAAAAAAAAAAAAABCCAAAAAAAAEMIAAAAAAAAAAAAAEMIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABFCAAAAAAAAAAAAABFCAAAAAAAAEYIAAAAAAAAAAAAAEYIAAAAAAAARwgAAAAAAAAAAAAARwgAAAAAAABICAAAAAAAAAAAAABICAAAAAAAAEkIAAAAAAAAAAAAAEkIAAAAAAAASggAAAAAAAAAAAAASggAAAAAAABLCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQgAAAAAAAA9CAAAAAAAAAAAAAAAKIRA"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "clips"
					},
					"BQAAAEsIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABNCAAAAAAAAAAAAABNCAAAAAAAAE4IAAAAAAAAAAAAAE4IAAAAAAAATwgAAAAAAAAAAAAATwgAAAAAAABQCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwgAAAAAAABLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFAIAAAAAAAAUggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAgAAAAAAABQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "sprite_clip"
					},
					"CwAAAFEIAAAAAAAAUggAAAAAAAAAAAAAUggAAAAAAABTCAAAAAAAAAAAAABTCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAVQgAAAAAAAAAAAAAVQgAAAAAAABWCAAAAAAAAAAAAABWCAAAAAAAAFcIAAAAAAAAAAAAAFcIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABZCAAAAAAAAAAAAABZCAAAAAAAAFoIAAAAAAAAAAAAAFoIAAAAAAAAWwgAAAAAAAAAAAAAWwgAAAAAAABcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQgAAAAAAABRCAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAF0IAAAAAAAAXggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQgAAAAAAABdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "tex_id"
					},
					"AQAAAF4IAAAAAAAAZAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXggAAAAAAABeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGQIAAAAAAAAaQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAgAAAAAAABkCAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AgAAAJQIAAAAAAAAlAgAAAAAAAAZAAAAZ21lbS50ZXh0dXJlX3Nwcml0ZV9zaGVldGUIAAAAAAAAZQgAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAlAgAAAAAAACtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "tex_sprite"
					},
					"CgAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACSCAAAAAAAAAAAAACSCAAAAAAAAJMIAAAAAAAAAAAAAJMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACVCAAAAAAAAAAAAACVCAAAAAAAAJYIAAAAAAAAAAAAAJYIAAAAAAAAlwgAAAAAAAAAAAAAlwgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJkIAAAAAAAAAAAAAJkIAAAAAAAAmggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAgAAAAAAACQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "_sheet"
					},
					"BgAAAJoIAAAAAAAAmwgAAAAAAAAAAAAAmwgAAAAAAACcCAAAAAAAAAAAAACcCAAAAAAAAJ0IAAAAAAAAAAAAAJ0IAAAAAAAAnggAAAAAAAAAAAAAnggAAAAAAACfCAAAAAAAAAAAAACfCAAAAAAAAKAIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmggAAAAAAACaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "gmem.textures"
					},
					"DQAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACSCAAAAAAAAAAAAACSCAAAAAAAAJMIAAAAAAAAAAAAAJMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACVCAAAAAAAAAAAAACVCAAAAAAAAJYIAAAAAAAAAAAAAJYIAAAAAAAAlwgAAAAAAAAAAAAAlwgAAAAAAACYCAAAAAAAAAAAAACYCAAAAAAAAJkIAAAAAAAAAAAAAJkIAAAAAAAAmggAAAAAAAAAAAAAmggAAAAAAACbCAAAAAAAAAAAAACbCAAAAAAAAJwIAAAAAAAAAAAAAJwIAAAAAAAAnQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAgAAAAAAACQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAJ0IAAAAAAAAnggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQgAAAAAAACdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAK4IAAAAAAAArwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArggAAAAAAACuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "_id"
					},
					"AwAAADkIAAAAAAAAOggAAAAAAAAAAAAAOggAAAAAAAA7CAAAAAAAAAAAAAA7CAAAAAAAADwIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQgAAAAAAAA5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "\ntex_sp"
					},
					"BwAAAGcIAAAAAAAAbAgAAAAAAAAAAAAAbAgAAAAAAABtCAAAAAAAAAAAAABtCAAAAAAAAG4IAAAAAAAAAAAAAG4IAAAAAAAAbwgAAAAAAAAAAAAAbwgAAAAAAABwCAAAAAAAAAAAAABwCAAAAAAAAHEIAAAAAAAAAAAAAHEIAAAAAAAAcggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwgAAAAAAABnCAAAAAAAAP///////+9/"
				],
				[
					235,
					3,
					"left_delete",
					null,
					"AwAAAHEIAAAAAAAAcQgAAAAAAAABAAAAcHAIAAAAAAAAcAgAAAAAAAABAAAAc28IAAAAAAAAbwgAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAcggAAAAAAAByCAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " :="
					},
					"AwAAAG8IAAAAAAAAcAgAAAAAAAAAAAAAcAgAAAAAAABxCAAAAAAAAAAAAABxCAAAAAAAAHIIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwgAAAAAAABvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " gm"
					},
					"AwAAAHIIAAAAAAAAcwgAAAAAAAAAAAAAcwgAAAAAAAB0CAAAAAAAAAAAAAB0CAAAAAAAAHUIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcggAAAAAAAByCAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "em.textures"
					},
					"CwAAAHUIAAAAAAAAdggAAAAAAAAAAAAAdggAAAAAAAB3CAAAAAAAAAAAAAB3CAAAAAAAAHgIAAAAAAAAAAAAAHgIAAAAAAAAeQgAAAAAAAAAAAAAeQgAAAAAAAB6CAAAAAAAAAAAAAB6CAAAAAAAAHsIAAAAAAAAAAAAAHsIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAAB9CAAAAAAAAAAAAAB9CAAAAAAAAH4IAAAAAAAAAAAAAH4IAAAAAAAAfwgAAAAAAAAAAAAAfwgAAAAAAACACAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQgAAAAAAAB1CAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIAIAAAAAAAAgggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "tex_sprite_she"
					},
					"DgAAAIEIAAAAAAAAgggAAAAAAAAAAAAAgggAAAAAAACDCAAAAAAAAAAAAACDCAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAhQgAAAAAAAAAAAAAhQgAAAAAAACGCAAAAAAAAAAAAACGCAAAAAAAAIcIAAAAAAAAAAAAAIcIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACJCAAAAAAAAAAAAACJCAAAAAAAAIoIAAAAAAAAAAAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAI0IAAAAAAAAAAAAAI0IAAAAAAAAjggAAAAAAAAAAAAAjggAAAAAAACPCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQgAAAAAAACBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "et_id"
					},
					"BQAAAI8IAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAACRCAAAAAAAAAAAAACRCAAAAAAAAJIIAAAAAAAAAAAAAJIIAAAAAAAAkwgAAAAAAAAAAAAAkwgAAAAAAACUCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwgAAAAAAACPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"left_delete",
					null,
					"AQAAAMEIAAAAAAAAwQgAAAAAAAAfAAAAZ21lbS50ZXh0dXJlc1t0ZXhfc3ByaXRlX3NoZWV0XQ",
					"AQAAAAAAAAABAAAAwQgAAAAAAADgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "tex"
					},
					"AwAAAMEIAAAAAAAAwggAAAAAAAAAAAAAwggAAAAAAADDCAAAAAAAAAAAAADDCAAAAAAAAMQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQgAAAAAAADBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": ".clip"
					},
					"BQAAAF0KAAAAAAAAXgoAAAAAAAAAAAAAXgoAAAAAAABfCgAAAAAAAAAAAABfCgAAAAAAAGAKAAAAAAAAAAAAAGAKAAAAAAAAYQoAAAAAAAAAAAAAYQoAAAAAAABiCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQoAAAAAAABdCgAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"odin\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "clip_rectangle"
					},
					"AgAAAF4KAAAAAAAAXgoAAAAAAAAEAAAAY2xpcF4KAAAAAAAAbAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgoAAAAAAABiCgAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGwKAAAAAAAAcQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAoAAAAAAABsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOcKAAAAAAAA7AoAAAAAAAAAAAAAbQoAAAAAAABtCgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAA5woAAAAAAADnCgAAAAAAAAAAAAAAgEJA"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOMKAAAAAAAA5woAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4woAAAAAAADjCgAAAAAAAAAAAAAAgEJA"
				],
				[
					262,
					1,
					"left_delete",
					null,
					"AQAAAOMKAAAAAAAA4woAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA5woAAAAAAADnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAOMKAAAAAAAA6AoAAAAAAAAAAAAA6AoAAAAAAADtCgAAAAAAAAAAAADkCgAAAAAAAOQKAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA4woAAAAAAADjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"reindent",
					null,
					"AQAAAOQKAAAAAAAA6AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AoAAAAAAADkCgAAAAAAAAAAAAAAgEJA"
				],
				[
					271,
					1,
					"paste",
					null,
					"AQAAAOgKAAAAAAAAVAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AoAAAAAAADoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "tex"
					},
					"BAAAAI0LAAAAAAAAjgsAAAAAAAAZAAAAZ21lbS50ZXh0dXJlX3Nwcml0ZV9zaGVldFULAAAAAAAAVQsAAAAAAAAEAAAAICAgIIoLAAAAAAAAiwsAAAAAAAAAAAAAiwsAAAAAAACMCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgsAAAAAAACNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "\n\n\nsprite"
					},
					"CQAAAEMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAABFAQAAAAAAAEYBAAAAAAAAAAAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAASgEAAAAAAABLAQAAAAAAAAAAAABLAQAAAAAAAEwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwEAAAAAAABDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					3,
					"left_delete",
					null,
					"AwAAAEYBAAAAAAAARgEAAAAAAAAHAAAAc3ByaXRlCkUBAAAAAAAARQEAAAAAAAABAAAACkQBAAAAAAAARAEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAARgEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"left_delete",
					null,
					"AQAAAIYCAAAAAAAAhgIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAhwIAAAAAAACHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIYCAAAAAAAAhwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgIAAAAAAACGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"left_delete",
					null,
					"AQAAAIYCAAAAAAAAhgIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAhwIAAAAAAACHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIYCAAAAAAAAhwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgIAAAAAAACGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"left_delete",
					null,
					"AQAAACcCAAAAAAAAJwIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAKAIAAAAAAAAoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAACcCAAAAAAAAKAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": "\nSpace"
					},
					"BgAAAEEBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAABKAQAAAAAAAEsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQEAAAAAAABBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "_Bar_"
					},
					"BQAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwEAAAAAAABLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					5,
					"left_delete",
					null,
					"BQAAAE8BAAAAAAAATwEAAAAAAAABAAAAX04BAAAAAAAATgEAAAAAAAABAAAAck0BAAAAAAAATQEAAAAAAAABAAAAYUwBAAAAAAAATAEAAAAAAAABAAAAQksBAAAAAAAASwEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": "bar_Down"
					},
					"CAAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAABQAQAAAAAAAFEBAAAAAAAAAAAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABTAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwEAAAAAAABLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFMBAAAAAAAAVAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "\nSpacebar_"
					},
					"CgAAAFQBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABdAQAAAAAAAAAAAABdAQAAAAAAAF4BAAAAAAAAAAAAAF4BAAAAAAAAXwEAAAAAAAAAAAAAXwEAAAAAAABgAQAAAAAAAAAAAABgAQAAAAAAAGEBAAAAAAAAAAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "Up,"
					},
					"AwAAAGIBAAAAAAAAYwEAAAAAAAAAAAAAYwEAAAAAAABkAQAAAAAAAAAAAABkAQAAAAAAAGUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgEAAAAAAABiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "\n.Spacebar"
					},
					"CgAAALUCAAAAAAAAugIAAAAAAAAAAAAAugIAAAAAAAC7AgAAAAAAAAAAAAC7AgAAAAAAALwCAAAAAAAAAAAAALwCAAAAAAAAvQIAAAAAAAAAAAAAvQIAAAAAAAC+AgAAAAAAAAAAAAC+AgAAAAAAAL8CAAAAAAAAAAAAAL8CAAAAAAAAwAIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAADBAgAAAAAAAMICAAAAAAAAAAAAAMICAAAAAAAAwwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "_Down"
					},
					"BQAAAMMCAAAAAAAAxAIAAAAAAAAAAAAAxAIAAAAAAADFAgAAAAAAAAAAAADFAgAAAAAAAMYCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAxwIAAAAAAADIAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMgCAAAAAAAAyQIAAAAAAAAAAAAAyQIAAAAAAADKAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoCAAAAAAAAywIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygIAAAAAAADKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMsCAAAAAAAAzQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "tex_id"
					},
					"BgAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAADOAgAAAAAAAM8CAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAADRAgAAAAAAANICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gIAAAAAAADSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": " .Space"
					},
					"BwAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADWAgAAAAAAANcCAAAAAAAAAAAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADZAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "bar"
					},
					"AwAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAADdAgAAAAAAAN4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wIAAAAAAADbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "_Sprite_She"
					},
					"CwAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA3wIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAOECAAAAAAAA4gIAAAAAAAAAAAAA4gIAAAAAAADjAgAAAAAAAAAAAADjAgAAAAAAAOQCAAAAAAAAAAAAAOQCAAAAAAAA5QIAAAAAAAAAAAAA5QIAAAAAAADmAgAAAAAAAAAAAADmAgAAAAAAAOcCAAAAAAAAAAAAAOcCAAAAAAAA6AIAAAAAAAAAAAAA6AIAAAAAAADpAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gIAAAAAAADeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "et,"
					},
					"AwAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADrAgAAAAAAAAAAAADrAgAAAAAAAOwCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": " clip_rectangle"
					},
					"DwAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAADuAgAAAAAAAO8CAAAAAAAAAAAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAADxAgAAAAAAAPICAAAAAAAAAAAAAPICAAAAAAAA8wIAAAAAAAAAAAAA8wIAAAAAAAD0AgAAAAAAAAAAAAD0AgAAAAAAAPUCAAAAAAAAAAAAAPUCAAAAAAAA9gIAAAAAAAAAAAAA9gIAAAAAAAD3AgAAAAAAAAAAAAD3AgAAAAAAAPgCAAAAAAAAAAAAAPgCAAAAAAAA+QIAAAAAAAAAAAAA+QIAAAAAAAD6AgAAAAAAAAAAAAD6AgAAAAAAAPsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAAD7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "rl.Rectangle"
					},
					"DAAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAoDAAAAAAAADAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgMAAAAAAAAKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": "2.5"
					},
					"AwAAAAsDAAAAAAAADAMAAAAAAAAAAAAADAMAAAAAAAANAwAAAAAAAAAAAAANAwAAAAAAAA4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": ",0,"
					},
					"AwAAAA4DAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAQAwAAAAAAAAAAAAAQAwAAAAAAABEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgMAAAAAAAAOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEDAAAAAAAAEgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQMAAAAAAAARAwAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "2.5,"
					},
					"BAAAABIDAAAAAAAAEwMAAAAAAAAAAAAAEwMAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABUDAAAAAAAAAAAAABUDAAAAAAAAFgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAABYDAAAAAAAAFwMAAAAAAAAAAAAAFwMAAAAAAAAYAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgMAAAAAAAAWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "\n.Spacebar"
					},
					"CgAAABoDAAAAAAAAHwMAAAAAAAAAAAAAHwMAAAAAAAAgAwAAAAAAAAAAAAAgAwAAAAAAACEDAAAAAAAAAAAAACEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACQDAAAAAAAAAAAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACcDAAAAAAAAAAAAACcDAAAAAAAAKAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgMAAAAAAAAaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "_Up"
					},
					"AwAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAMAAAAAAAAoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACsDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAtAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwMAAAAAAAArAwAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0DAAAAAAAALgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQMAAAAAAAAtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAC4DAAAAAAAAMAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": " tex_id"
					},
					"BwAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADIDAAAAAAAAAAAAADIDAAAAAAAAMwMAAAAAAAAAAAAAMwMAAAAAAAA0AwAAAAAAAAAAAAA0AwAAAAAAADUDAAAAAAAAAAAAADUDAAAAAAAANgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwMAAAAAAAAvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": " .Space"
					},
					"BwAAADgDAAAAAAAAOQMAAAAAAAAAAAAAOQMAAAAAAAA6AwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAAPAMAAAAAAAA9AwAAAAAAAAAAAAA9AwAAAAAAAD4DAAAAAAAAAAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAMAAAAAAAA4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "bar_Spri"
					},
					"CAAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "te_Sheet"
					},
					"CAAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAABJAwAAAAAAAEoDAAAAAAAAAAAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAE0DAAAAAAAATgMAAAAAAAAAAAAATgMAAAAAAABPAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE8DAAAAAAAAUAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": " clip_rect"
					},
					"CgAAAFADAAAAAAAAUQMAAAAAAAAAAAAAUQMAAAAAAABSAwAAAAAAAAAAAABSAwAAAAAAAFMDAAAAAAAAAAAAAFMDAAAAAAAAVAMAAAAAAAAAAAAAVAMAAAAAAABVAwAAAAAAAAAAAABVAwAAAAAAAFYDAAAAAAAAAAAAAFYDAAAAAAAAVwMAAAAAAAAAAAAAVwMAAAAAAABYAwAAAAAAAAAAAABYAwAAAAAAAFkDAAAAAAAAAAAAAFkDAAAAAAAAWgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAMAAAAAAABQAwAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "agnel"
					},
					"BQAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAAXgMAAAAAAABfAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgMAAAAAAABaAwAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					4,
					"left_delete",
					null,
					"BAAAAF4DAAAAAAAAXgMAAAAAAAABAAAAbF0DAAAAAAAAXQMAAAAAAAABAAAAZVwDAAAAAAAAXAMAAAAAAAABAAAAblsDAAAAAAAAWwMAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAXwMAAAAAAABfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "ngle"
					},
					"BAAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwMAAAAAAABbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAF8DAAAAAAAAYAMAAAAAAAAAAAAAYAMAAAAAAABhAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwMAAAAAAABfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": " rl.Rectangle"
					},
					"DQAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAABmAwAAAAAAAGcDAAAAAAAAAAAAAGcDAAAAAAAAaAMAAAAAAAAAAAAAaAMAAAAAAABpAwAAAAAAAAAAAABpAwAAAAAAAGoDAAAAAAAAAAAAAGoDAAAAAAAAawMAAAAAAAAAAAAAawMAAAAAAABsAwAAAAAAAAAAAABsAwAAAAAAAG0DAAAAAAAAAAAAAG0DAAAAAAAAbgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQMAAAAAAABhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG4DAAAAAAAAcAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgMAAAAAAABuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "0,0,"
					},
					"BAAAAG8DAAAAAAAAcAMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAABxAwAAAAAAAHIDAAAAAAAAAAAAAHIDAAAAAAAAcwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": " 2.5,"
					},
					"BQAAAHMDAAAAAAAAdAMAAAAAAAAAAAAAdAMAAAAAAAB1AwAAAAAAAAAAAAB1AwAAAAAAAHYDAAAAAAAAAAAAAHYDAAAAAAAAdwMAAAAAAAAAAAAAdwMAAAAAAAB4AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwMAAAAAAABzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAHgDAAAAAAAAeQMAAAAAAAAAAAAAeQMAAAAAAAB6AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAMAAAAAAAB4AwAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABoDAAAAAAAAGwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgMAAAAAAAAaAwAAAAAAAP///////+9/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH0DAAAAAAAAfgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQMAAAAAAAB9AwAAAAAAAAAAAAAAwItA"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "\nPlay"
					},
					"BQAAAGUBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "_Button_T"
					},
					"CQAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "ext,"
					},
					"BAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAB5AQAAAAAAAHoBAAAAAAAAAAAAAHoBAAAAAAAAewEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "\nPlay_"
					},
					"BgAAAHsBAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAACBAQAAAAAAAIIBAAAAAAAAAAAAAIIBAAAAAAAAgwEAAAAAAAAAAAAAgwEAAAAAAACEAQAAAAAAAAAAAACEAQAAAAAAAIUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "Button"
					},
					"BgAAAIUBAAAAAAAAhgEAAAAAAAAAAAAAhgEAAAAAAACHAQAAAAAAAAAAAACHAQAAAAAAAIgBAAAAAAAAAAAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAACKAQAAAAAAAIsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQEAAAAAAACFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					4,
					"left_delete",
					null,
					"BAAAAHkBAAAAAAAAeQEAAAAAAAABAAAAdHgBAAAAAAAAeAEAAAAAAAABAAAAeHcBAAAAAAAAdwEAAAAAAAABAAAAZXYBAAAAAAAAdgEAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert",
					{
						"characters": "Up"
					},
					"AgAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "_Down,"
					},
					"BgAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAAjQEAAAAAAACOAQAAAAAAAAAAAACOAQAAAAAAAI8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAwGNA"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8BAAAAAAAAlAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAP///////+9/"
				],
				[
					412,
					2,
					"paste",
					null,
					"AgAAAJQBAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAADoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"unindent",
					null,
					"AQAAAJABAAAAAAAAkAEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAkAEAAAAAAACQAQAAAAAAAAAAAAAAAAAA"
				],
				[
					417,
					4,
					"left_delete",
					null,
					"CAAAAKsBAAAAAAAAqwEAAAAAAAABAAAAeZcBAAAAAAAAlwEAAAAAAAABAAAAeakBAAAAAAAAqQEAAAAAAAABAAAAYZYBAAAAAAAAlgEAAAAAAAABAAAAYacBAAAAAAAApwEAAAAAAAABAAAAbJUBAAAAAAAAlQEAAAAAAAABAAAAbKUBAAAAAAAApQEAAAAAAAABAAAAUJQBAAAAAAAAlAEAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/rAEAAAAAAACsAQAAAAAAAAAAAAAAgFFA"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "Crei"
					},
					"CAAAAKQBAAAAAAAApQEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACmAQAAAAAAAKcBAAAAAAAAAAAAAJUBAAAAAAAAlgEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACWAQAAAAAAAJcBAAAAAAAAAAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/pAEAAAAAAACkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"left_delete",
					null,
					"AgAAAKsBAAAAAAAAqwEAAAAAAAABAAAAaZcBAAAAAAAAlwEAAAAAAAABAAAAaQ",
					"AQAAAAAAAAACAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/rAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "dits"
					},
					"CAAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACsAQAAAAAAAK0BAAAAAAAAAAAAAJgBAAAAAAAAmQEAAAAAAAAAAAAArgEAAAAAAACvAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAALABAAAAAAAAsQEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/qgEAAAAAAACqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					4,
					"left_delete",
					null,
					"CAAAANsBAAAAAAAA2wEAAAAAAAABAAAAeccBAAAAAAAAxwEAAAAAAAABAAAAedkBAAAAAAAA2QEAAAAAAAABAAAAYcYBAAAAAAAAxgEAAAAAAAABAAAAYdcBAAAAAAAA1wEAAAAAAAABAAAAbMUBAAAAAAAAxQEAAAAAAAABAAAAbNUBAAAAAAAA1QEAAAAAAAABAAAAUMQBAAAAAAAAxAEAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAAyAEAAAAAAADIAQAAAAAAAAAAAAAAAPC/3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": "Vac"
					},
					"BgAAANQBAAAAAAAA1QEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADWAQAAAAAAANcBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/1AEAAAAAAADUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					3,
					"left_delete",
					null,
					"BgAAANkBAAAAAAAA2QEAAAAAAAABAAAAY8YBAAAAAAAAxgEAAAAAAAABAAAAY9cBAAAAAAAA1wEAAAAAAAABAAAAYcUBAAAAAAAAxQEAAAAAAAABAAAAYdUBAAAAAAAA1QEAAAAAAAABAAAAVsQBAAAAAAAAxAEAAAAAAAABAAAAVg",
					"AQAAAAAAAAACAAAAxwEAAAAAAADHAQAAAAAAAAAAAAAAAPC/2gEAAAAAAADaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": "Back"
					},
					"CAAAANQBAAAAAAAA1QEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADWAQAAAAAAANcBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAANoBAAAAAAAA2wEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/1AEAAAAAAADUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "\n\n."
					},
					"BAAAAAMEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAANBAAAAAAAAAAAAAAEBAAAAAAAAAQEAAAAAAAABAAAACAgICAJBAAAAAAAAAoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "Play_Button"
					},
					"CwAAAAoEAAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAAA0EAAAAAAAAAAAAAA0EAAAAAAAADgQAAAAAAAAAAAAADgQAAAAAAAAPBAAAAAAAAAAAAAAPBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAEQQAAAAAAAAAAAAAEQQAAAAAAAASBAAAAAAAAAAAAAASBAAAAAAAABMEAAAAAAAAAAAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgQAAAAAAAAKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": ")u"
					},
					"AgAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					2,
					"left_delete",
					null,
					"AgAAABYEAAAAAAAAFgQAAAAAAAABAAAAdRUEAAAAAAAAFQQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAFwQAAAAAAAAXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": "_Up"
					},
					"AwAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABgEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoEAAAAAAAAGwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABsEAAAAAAAAHQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwQAAAAAAAAbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": " tex_id"
					},
					"BwAAABwEAAAAAAAAHQQAAAAAAAAAAAAAHQQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAACIEAAAAAAAAIwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAQAAAAAAAAcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": " .Pla"
					},
					"BQAAACUEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAnBAAAAAAAAAAAAAAnBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQQAAAAAAAAlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": "y_Button"
					},
					"CAAAACoEAAAAAAAAKwQAAAAAAAAAAAAAKwQAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAAC0EAAAAAAAAAAAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgQAAAAAAAAqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "_Spritesheet"
					},
					"DAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA6BAAAAAAAADsEAAAAAAAAAAAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA9BAAAAAAAAAAAAAA9BAAAAAAAAD4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD4EAAAAAAAAPwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": " clip_rectangle"
					},
					"DwAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAABBBAAAAAAAAEIEAAAAAAAAAAAAAEIEAAAAAAAAQwQAAAAAAAAAAAAAQwQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEUEAAAAAAAAAAAAAEUEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABHBAAAAAAAAAAAAABHBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwQAAAAAAAA/BAAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAE4EAAAAAAAATwQAAAAAAAAAAAAATwQAAAAAAABQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": " rl.Rectangle"
					},
					"DQAAAFAEAAAAAAAAUQQAAAAAAAAAAAAAUQQAAAAAAABSBAAAAAAAAAAAAABSBAAAAAAAAFMEAAAAAAAAAAAAAFMEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABVBAAAAAAAAAAAAABVBAAAAAAAAFYEAAAAAAAAAAAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFkEAAAAAAAAAAAAAFkEAAAAAAAAWgQAAAAAAAAAAAAAWgQAAAAAAABbBAAAAAAAAAAAAABbBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAXQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAF0EAAAAAAAAXwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQQAAAAAAABdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": "0,0,"
					},
					"BAAAAF4EAAAAAAAAXwQAAAAAAAAAAAAAXwQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGEEAAAAAAAAAAAAAGEEAAAAAAAAYgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgQAAAAAAABeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "3,1"
					},
					"AwAAAGIEAAAAAAAAYwQAAAAAAAAAAAAAYwQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGUEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgQAAAAAAABiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGcEAAAAAAAAaAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwQAAAAAAABnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGgEAAAAAAAAbQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"paste",
					null,
					"AQAAAGkEAAAAAAAAzQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQQAAAAAAABtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					2,
					"left_delete",
					null,
					"AwAAAHsEAAAAAAAAewQAAAAAAAABAAAAcMwEAAAAAAAAzAQAAAAAAAAEAAAAICAgIHoEAAAAAAAAegQAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "Down"
					},
					"BAAAAHoEAAAAAAAAewQAAAAAAAAAAAAAewQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAH0EAAAAAAAAAAAAAH0EAAAAAAAAfgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"left_delete",
					null,
					"AQAAAMYEAAAAAAAAxgQAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMYEAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgQAAAAAAADGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwQAAAAAAADPBAAAAAAAAAAAAAAAAAAA"
				],
				[
					478,
					2,
					"paste",
					null,
					"AgAAANAEAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAABkBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJoFAAAAAAAAmwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgUAAAAAAACaBQAAAAAAAAAAAAAAAAAA"
				],
				[
					488,
					4,
					"left_delete",
					null,
					"CAAAADwFAAAAAAAAPAUAAAAAAAABAAAAedgEAAAAAAAA2AQAAAAAAAABAAAAeToFAAAAAAAAOgUAAAAAAAABAAAAYdcEAAAAAAAA1wQAAAAAAAABAAAAYTgFAAAAAAAAOAUAAAAAAAABAAAAbNYEAAAAAAAA1gQAAAAAAAABAAAAbDYFAAAAAAAANgUAAAAAAAABAAAAUNUEAAAAAAAA1QQAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/PQUAAAAAAAA9BQAAAAAAAAAAAAAAwFNA"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "Back"
					},
					"CAAAADUFAAAAAAAANgUAAAAAAAAAAAAA1QQAAAAAAADWBAAAAAAAAAAAAAA3BQAAAAAAADgFAAAAAAAAAAAAANYEAAAAAAAA1wQAAAAAAAAAAAAAOQUAAAAAAAA6BQAAAAAAAAAAAADXBAAAAAAAANgEAAAAAAAAAAAAADsFAAAAAAAAPAUAAAAAAAAAAAAA2AQAAAAAAADZBAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA1QQAAAAAAADVBAAAAAAAAAAAAAAAAPC/NQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					4,
					"left_delete",
					null,
					"CAAAAAcGAAAAAAAABwYAAAAAAAABAAAAeaMFAAAAAAAAowUAAAAAAAABAAAAeQUGAAAAAAAABQYAAAAAAAABAAAAYaIFAAAAAAAAogUAAAAAAAABAAAAYQMGAAAAAAAAAwYAAAAAAAABAAAAbKEFAAAAAAAAoQUAAAAAAAABAAAAbAEGAAAAAAAAAQYAAAAAAAABAAAAUKAFAAAAAAAAoAUAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAApAUAAAAAAACkBQAAAAAAAAAAAAAAwFNACAYAAAAAAAAIBgAAAAAAAAAAAAAAwFNA"
				],
				[
					492,
					1,
					"insert",
					{
						"characters": "Credi"
					},
					"CgAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAoAUAAAAAAAChBQAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAKEFAAAAAAAAogUAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAACiBQAAAAAAAKMFAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAAowUAAAAAAACkBQAAAAAAAAAAAAAIBgAAAAAAAAkGAAAAAAAAAAAAAKQFAAAAAAAApQUAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAoAUAAAAAAACgBQAAAAAAAAAAAAAAAPC/AAYAAAAAAAAABgAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "ts"
					},
					"BAAAAAoGAAAAAAAACwYAAAAAAAAAAAAApQUAAAAAAACmBQAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAKYFAAAAAAAApwUAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAApQUAAAAAAAClBQAAAAAAAAAAAAAAAPC/CgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					4,
					"left_delete",
					null,
					"CAAAAFsFAAAAAAAAWwUAAAAAAAABAAAAefUEAAAAAAAA9QQAAAAAAAABAAAAeVkFAAAAAAAAWQUAAAAAAAABAAAAYfQEAAAAAAAA9AQAAAAAAAABAAAAYVcFAAAAAAAAVwUAAAAAAAABAAAAbPMEAAAAAAAA8wQAAAAAAAABAAAAbFUFAAAAAAAAVQUAAAAAAAABAAAAUPIEAAAAAAAA8gQAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/XAUAAAAAAABcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": "Back"
					},
					"CAAAAFQFAAAAAAAAVQUAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAABWBQAAAAAAAFcFAAAAAAAAAAAAAPMEAAAAAAAA9AQAAAAAAAAAAAAAWAUAAAAAAABZBQAAAAAAAAAAAAD0BAAAAAAAAPUEAAAAAAAAAAAAAFoFAAAAAAAAWwUAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA8gQAAAAAAADyBAAAAAAAAAAAAAAAAPC/VAUAAAAAAABUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					4,
					"left_delete",
					null,
					"CAAAACwGAAAAAAAALAYAAAAAAAABAAAAecMFAAAAAAAAwwUAAAAAAAABAAAAeSoGAAAAAAAAKgYAAAAAAAABAAAAYcIFAAAAAAAAwgUAAAAAAAABAAAAYSgGAAAAAAAAKAYAAAAAAAABAAAAbMEFAAAAAAAAwQUAAAAAAAABAAAAbCYGAAAAAAAAJgYAAAAAAAABAAAAUMAFAAAAAAAAwAUAAAAAAAABAAAAUA",
					"AQAAAAAAAAACAAAAxAUAAAAAAADEBQAAAAAAAAAAAAAAAPC/LQYAAAAAAAAtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "Credits"
					},
					"DgAAACUGAAAAAAAAJgYAAAAAAAAAAAAAwAUAAAAAAADBBQAAAAAAAAAAAAAnBgAAAAAAACgGAAAAAAAAAAAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAKQYAAAAAAAAqBgAAAAAAAAAAAADCBQAAAAAAAMMFAAAAAAAAAAAAACsGAAAAAAAALAYAAAAAAAAAAAAAwwUAAAAAAADEBQAAAAAAAAAAAAAtBgAAAAAAAC4GAAAAAAAAAAAAAMQFAAAAAAAAxQUAAAAAAAAAAAAALwYAAAAAAAAwBgAAAAAAAAAAAADFBQAAAAAAAMYFAAAAAAAAAAAAADEGAAAAAAAAMgYAAAAAAAAAAAAAxgUAAAAAAADHBQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAwAUAAAAAAADABQAAAAAAAAAAAAAAAPC/JQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"col",
				"UI: Select Color Scheme"
			],
			[
				"color ",
				"UI: Select Color Scheme"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"color sc",
				"UI: Select Color Scheme"
			],
			[
				"term",
				"Terminus: Toggle Panel"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/johnb/source/repos/BiscuitGame",
		"/C/Users/johnb/source/repos/BiscuitGame/assets",
		"/C/Users/johnb/source/repos/BiscuitGame/source",
		"/C/Users/johnb/source/repos/BiscuitGame/source/examples",
		"/C/Users/johnb/source/repos/BiscuitGame/source/rlgrid"
	],
	"file_history":
	[
		"/C/Users/johnb/source/repos/BiscuitGame/source/lerp.odin",
		"/C/Users/johnb/source/repos/sublime_odin/sublime_odin.sublime-project",
		"/C/Users/johnb/source/repos/sublime_odin/helo_world.odin"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"",
			"./build_default.bat",
			".",
			"odin-base",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"pushd",
			"load",
			"start_handle",
			"create_level_4",
			"is_entity_current_within_trigger_window",
			"136",
			"132",
			"160.0",
			"root_game_state_enter",
			"create_level_4",
			"136",
			"playSound",
			"160.0",
			"160",
			".Spinning",
			"create_level_3",
			"game_init",
			"root_state_main_menu",
			".Menu_Bg",
			"for ",
			"for tex",
			"for tex_id",
			"game_enter",
			"root_state_main_menu_enter",
			"play",
			"credits",
			"just_hovered_a_button",
			"root_state_main_menu",
			"play",
			".5",
			"bytes",
			"virtual_mouse",
			"virtual",
			"x",
			"root_state_main",
			"game_init",
			".H",
			".SPACE",
			"musicstream",
			"game_init",
			"gmae_init",
			"pn",
			"is_entity_after_hit_window",
			" :=",
			"early_timing_window_ms_i",
			"earlt",
			"early_timing_window_ms_i",
			"rlgrid",
			"sprite_data",
			"tex_id",
			"sprite_data",
			"clip_rectangle",
			"game_init",
			"sec_to_ms",
			"first_biscuit_parent_h",
			"transparency_based_on_elapsed_time_in_timer",
			"does_user_want_to_skip_bumper",
			"root_state_bumper",
			"for entity_c",
			"create_entity",
			"tick",
			"create_level_3",
			"game_init",
			"tex",
			"tex.width",
			"gmem.bumper_texture",
			"root_state_",
			"root_state",
			"create_level_2",
			"e1_h",
			"start_handle",
			"_cursor",
			"Person",
			"Unicycle1",
			"Person",
			"Unicycle1",
			"Person",
			"Unicycle1",
			"Person",
			"e31_h",
			"Person",
			"Unicycle",
			"create_level_1",
			"Face_Biscuit",
			"target_entity_handle",
			"set_target_to_pass_to",
			"target_entity_handle_to_pass_to",
			"pass_biscuit",
			".Shoot_In_Direction",
			"virtualMouse",
			"last_virtual_mouse",
			"}\n",
			".Shoot_In_Direction",
			"biscuit",
			"ha_get_ptr(gmem.entities, biscuit.parent_entity_handle)",
			"_",
			".Shoot_In",
			"draw_line",
			"(entities)",
			"game_state.",
			"entities,",
			"orbiting_dir",
			"orbiting_angle",
			"parent_entity_id",
			"entity",
			"e_id",
			"&entities[biscuit.parent_entity_id]",
			"pass_chain_order",
			"parent_entity_id = Entity_Id",
			"parent_entity_id = Entity_Id(8)",
			"target_entity_id_to_pass_to = Entity_Id",
			"target_entity_handle",
			"e_h",
			"wait_timer_duration",
			"Balloon",
			" \n",
			"biscuit_collides_with_hazard",
			"is_biscuit_colliding_with_hazard",
			"is_biscuit_collides_with_hazard",
			"can_manually_pass_biscuit",
			",\n",
			"camera",
			"entities",
			"target_to_pass_to_entity_id",
			"f32(tex.width)",
			"root_state_main",
			"gameScreenHeight",
			"gameScreenWidth"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"source"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/rlgrid/grid.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10512,
						"regions":
						{
						},
						"selection":
						[
							[
								3190,
								3190
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/rlgrid/grid.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1740.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/game.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70530,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								204
							],
							[
								272,
								272
							],
							[
								338,
								338
							],
							[
								400,
								400
							],
							[
								458,
								458
							],
							[
								510,
								510
							],
							[
								561,
								561
							],
							[
								608,
								608
							],
							[
								659,
								659
							],
							[
								711,
								711
							],
							[
								769,
								769
							],
							[
								835,
								835
							],
							[
								896,
								896
							],
							[
								960,
								960
							],
							[
								1036,
								1036
							],
							[
								1111,
								1111
							],
							[
								1186,
								1186
							],
							[
								1242,
								1242
							],
							[
								1294,
								1294
							],
							[
								1358,
								1358
							],
							[
								1437,
								1437
							],
							[
								1496,
								1496
							],
							[
								1563,
								1563
							]
						],
						"settings":
						{
							"allow_quiet_save": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/game.odin",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 32.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/examples/hot_script.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2004,
						"regions":
						{
						},
						"selection":
						[
							[
								2004,
								2004
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/examples/hot_script.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 873.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/examples/biscuit_toss_example.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21125,
						"regions":
						{
						},
						"selection":
						[
							[
								143,
								143
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "package game",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/examples/biscuit_toss_example.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5571.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "source/handle_array.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2690,
						"regions":
						{
						},
						"selection":
						[
							[
								372,
								372
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "package game",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/handle_array.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 89.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/odin-windows-amd64-dev-2025-03/vendor/raylib/raylib.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 139997,
						"regions":
						{
						},
						"selection":
						[
							[
								7967,
								7974
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/odin-windows-amd64-dev-2025-03/vendor/raylib/raylib.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2741.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 135958,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								135769,
								135769
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"default_dir": "C:\\Users\\johnb\\source\\repos\\odin-base\\source",
							"detect_indentation": false,
							"line_numbers": false,
							"lsp_uri": "buffer:342",
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 63384.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "build_default.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 92,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-base/build_default.bat",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "build_hot_reload.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3382,
						"regions":
						{
						},
						"selection":
						[
							[
								3224,
								3224
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/build_hot_reload.bat",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 496.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "sublime_odin.sublime-project",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 762,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/sublime_odin.sublime-project",
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "build_web.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1625,
						"regions":
						{
						},
						"selection":
						[
							[
								472,
								472
							]
						],
						"settings":
						{
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-base/build_web.bat",
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "source/percentage.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 268,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "package game",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/odin-base/source/percentage.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "source/countdown.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 430,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								176
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "package game",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/countdown.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 13,
					"file": "source/sprite.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4671,
						"regions":
						{
						},
						"selection":
						[
							[
								1479,
								1479
							],
							[
								1587,
								1587
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"auto_name": "package game",
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/sprite.odin",
							"show_definitions": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/game.odin",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70530,
						"regions":
						{
						},
						"selection":
						[
							[
								919,
								919
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".>#\"/:",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "odin"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/johnb/source/repos/BiscuitGame/source/game.odin",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.Terminus":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"output.diagnostics":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.exec":
	{
		"height": 235.0,
		"history":
		[
		]
	},
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.mdpopups":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "odin build debug hot reload",
	"project": "sublime_odin.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 251.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
